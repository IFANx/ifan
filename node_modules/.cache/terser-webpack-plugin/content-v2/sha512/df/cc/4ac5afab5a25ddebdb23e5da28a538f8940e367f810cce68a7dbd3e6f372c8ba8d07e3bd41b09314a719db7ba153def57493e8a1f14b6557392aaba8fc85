{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{305:function(t,a,s){\"use strict\";s.r(a);var n=s(14),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"springboot的特点\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#springboot的特点\"}},[t._v(\"#\")]),t._v(\" SpringBoot的特点\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"为基于Spring的开发提供更快的入门体验\")]),t._v(\" \"),a(\"li\",[t._v(\"开箱即用，没有代码生成，也无需XML配置。同时也可以修改默认值来满足特定的需求\")]),t._v(\" \"),a(\"li\",[t._v(\"提供了一些大型项目中常见的非功能性特性，如嵌入式服务器、安全、指标，健康检测、外部配置等\")])]),t._v(\" \"),a(\"p\",[t._v(\"SpringBoot不是对Spring功能上的增强，而是提供了一种快速使用Spring的方式\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"springboot的核心功能\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#springboot的核心功能\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#springboot%E7%9A%84%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD\"}},[t._v(\"#\")]),t._v(\" SpringBoot的核心功能\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"strong\",[t._v(\"起步依赖\")]),t._v(\" 起步依赖本质上是一\"),a(\"strong\",[t._v(\"个Maven项目对象模型（Project Object Model，POM）\")]),t._v(\"，定义了对其他库的传递依赖，这些东西加在一起即支持某项功能。\")])]),t._v(\" \"),a(\"p\",[t._v(\"简单的说，起步依赖就是将具备某种功能的坐标打包到一起，并提供一些默认的功能。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"strong\",[t._v(\"自动配置\")])])]),t._v(\" \"),a(\"p\",[t._v(\"Spring Boot的自动配置是一个运行时（更准确地说，是应用程序启动时）的过程，考虑了众多因素，才决定Spring配置应该用哪个，不该用哪个。该过程是Spring自动完成的。\")]),t._v(\" \"),a(\"p\",[t._v(\"Spring Boot 推荐的基础 POM 文件\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"名称\")]),t._v(\" \"),a(\"th\",[t._v(\"说明\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter\")]),t._v(\" \"),a(\"td\",[t._v(\"核心 POM，包含自动配置支持、日志库和对 YAML 配置文件的支持。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-amqp\")]),t._v(\" \"),a(\"td\",[t._v(\"通过 spring-rabbit 支持 AMQP。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-aop\")]),t._v(\" \"),a(\"td\",[t._v(\"包含 spring-aop 和 AspectJ 来支持面向切面编程（AOP）。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-batch\")]),t._v(\" \"),a(\"td\",[t._v(\"支持 Spring Batch，包含 HSQLDB。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-data-jpa\")]),t._v(\" \"),a(\"td\",[t._v(\"包含 spring-data-jpa、spring-orm 和 Hibernate 来支持 JPA。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-data-mongodb\")]),t._v(\" \"),a(\"td\",[t._v(\"包含 spring-data-mongodb 来支持 MongoDB。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-data-rest\")]),t._v(\" \"),a(\"td\",[t._v(\"通过 spring-data-rest-webmvc 支持以 REST 方式暴露 Spring Data 仓库。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-jdbc\")]),t._v(\" \"),a(\"td\",[t._v(\"支持使用 JDBC 访问数据库。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-security\")]),t._v(\" \"),a(\"td\",[t._v(\"包含 spring-security。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-test\")]),t._v(\" \"),a(\"td\",[t._v(\"包含常用的测试所需的依赖，如 JUnit、Hamcrest、Mockito 和 spring-test 等。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-velocity\")]),t._v(\" \"),a(\"td\",[t._v(\"支持使用 Velocity 作为模板引擎。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-web\")]),t._v(\" \"),a(\"td\",[t._v(\"支持 Web 应用开发，包含 Tomcat 和 spring-mvc。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-websocket\")]),t._v(\" \"),a(\"td\",[t._v(\"支持使用 Tomcat 开发 WebSocket 应用。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-ws\")]),t._v(\" \"),a(\"td\",[t._v(\"支持 Spring Web Services。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-actuator\")]),t._v(\" \"),a(\"td\",[t._v(\"添加适用于生产环境的功能，如性能指标和监测等功能。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-remote-shell\")]),t._v(\" \"),a(\"td\",[t._v(\"添加远程 SSH 支持。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-jetty\")]),t._v(\" \"),a(\"td\",[t._v(\"使用 Jetty 而不是默认的 Tomcat 作为应用服务器。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-log4j\")]),t._v(\" \"),a(\"td\",[t._v(\"添加 Log4j 的支持。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-logging\")]),t._v(\" \"),a(\"td\",[t._v(\"使用 Spring Boot 默认的日志框架 Logback。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"spring-boot-starter-tomcat\")]),t._v(\" \"),a(\"td\",[t._v(\"使用 Spring Boot 默认的 Tomcat 作为应用服务器。\")])])])]),t._v(\" \"),a(\"p\",[t._v(\"所有这些 POM 依赖的好处在于为开发 Spring 应用提供了一个良好的基础。Spring Boot 所选择的第三方库是经过考虑的，是比较适合产品开发的选择。但是 Spring Boot 也提供了不同的选项，比如日志框架可以用 Logback 或 Log4j，应用服务器可以用 Tomcat 或 Jetty。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"什么是jpa-和jdbc是什么关系\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是jpa-和jdbc是什么关系\"}},[t._v(\"#\")]),t._v(\" 什么是JPA，和JDBC是什么关系\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"什么是JDBC, ORM, JPA? 之间的关系是什么？\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"strong\",[t._v(\"什么是JDBC\")])])]),t._v(\" \"),a(\"p\",[t._v(\"JDBC（JavaDataBase Connectivity）就是Java数据库连接，说白了就是用Java语言来操作数据库。原来我们操作数据库是在控制台使用SQL语句来操作数据库，JDBC是用Java语言向数据库发送SQL语句。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/project-b-4.png\",alt:\"project-b-4\"}})]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"strong\",[t._v(\"什么是ORM\")])])]),t._v(\" \"),a(\"p\",[t._v(\"对象关系映射（Object Relational Mapping，简称ORM）， 简单的说，\"),a(\"strong\",[t._v(\"ORM是通过使用描述对象和数据库之间映射的元数据，将java程序中的对象自动持久化到关系数据库中\")]),t._v(\"。本质上就是将数据从一种形式转换到另外一种形式，具体如下：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/project-b-3.png\",alt:\"img\"}})]),t._v(\" \"),a(\"p\",[t._v(\"具体映射：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"数据库的表（table） --\\x3e 类（class）\")]),t._v(\" \"),a(\"li\",[t._v(\"记录（record，行数据）--\\x3e 对象（object）\")]),t._v(\" \"),a(\"li\",[t._v(\"字段（field）--\\x3e 对象的属性（attribute）\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"strong\",[t._v(\"什么是JPA\")])])]),t._v(\" \"),a(\"p\",[t._v(\"JPA是Spring提供的一种ORM，首先让我们回顾下Spring runtime体系：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/mongo-x-usage-spring-4.png\",alt:\"img\"}})]),t._v(\" \"),a(\"p\",[t._v(\"Spring Data是基于Spring runtime体系的，JPA 属于Spring Data, 和JDBC的关系如下：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/mongo-x-usage-spring-5.png\",alt:\"img\"}})]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"JDBC使用java语言直接执行SQL语句，ORM对象关系模型映射建立数据表与java类之间的关系，实现相互映射，JPA是Spring提供的一种ORM。\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"日志框架的基础\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#日志框架的基础\"}},[t._v(\"#\")]),t._v(\" 日志框架的基础\")]),t._v(\" \"),a(\"p\",[t._v(\"在学习这块时需要一些日志框架的发展和基础，同时了解日志配置时考虑的因素。\")]),t._v(\" \"),a(\"p\",[t._v(\"https://pdai.tech/md/develop/package/dev-package-x-log.html\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"关于日志框架-日志门面\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关于日志框架-日志门面\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#%E5%85%B3%E4%BA%8E%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6-%E6%97%A5%E5%BF%97%E9%97%A8%E9%9D%A2\"}},[t._v(\"#\")]),t._v(\" 关于日志框架（日志门面）\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"Java日志库是最能体现Java库在进化中的渊源关系的，在理解时重点理解\"),a(\"strong\",[t._v(\"日志框架本身\")]),t._v(\"和\"),a(\"strong\",[t._v(\"日志门面\")]),t._v(\"，以及比较好的实践等。要关注其历史渊源和设计（比如桥接），而具体在使用时查询接口即可， 否则会陷入JUL(Java Util Log), JCL(Commons Logging), Log4j, SLF4J, Logback，Log4j2傻傻分不清楚的境地。\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"常用开发库 - 日志类库详解\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"最重要的一点是 区分\"),a(\"strong\",[t._v(\"日志系统\")]),t._v(\"和\"),a(\"strong\",[t._v(\"日志门面\")]),t._v(\";\")]),t._v(\" \"),a(\"li\",[t._v(\"其次是日志库的使用, 包含配置与API使用；配置侧重于日志系统的配置，API使用侧重于日志门面；\")]),t._v(\" \"),a(\"li\",[t._v(\"最后是选型，改造和最佳实践等\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"日志库之日志系统\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#日志库之日志系统\"}},[t._v(\"#\")]),t._v(\" 日志库之日志系统\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"java-util-logging-jul\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#java-util-logging-jul\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#java-util-logging-jul\"}},[t._v(\"#\")]),t._v(\" java.util.logging (JUL)\")]),t._v(\" \"),a(\"p\",[t._v(\"JDK1.4 开始，通过 java.util.logging 提供日志功能。虽然是官方自带的log lib，JUL的使用确不广泛。主要原因:\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"JUL从JDK1.4 才开始加入(2002年)，当时各种第三方log lib已经被广泛使用了\")]),t._v(\" \"),a(\"li\",[t._v(\"JUL早期存在性能问题，到JDK1.5上才有了不错的进步，但现在和Logback/Log4j2相比还是有所不如\")]),t._v(\" \"),a(\"li\",[t._v(\"JUL的功能不如Logback/Log4j2等完善，比如Output Handler就没有Logback/Log4j2的丰富，有时候需要自己来继承定制，又比如默认没有从ClassPath里加载配置文件的功能\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"log4j\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#log4j\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#log4j\"}},[t._v(\"#\")]),t._v(\" Log4j\")]),t._v(\" \"),a(\"p\",[t._v(\"Log4j 是 apache 的一个开源项目，创始人 Ceki Gulcu。Log4j 应该说是 Java 领域资格最老，应用最广的日志工具。Log4j 是高度可配置的，并可通过在运行时的外部文件配置。它根据记录的优先级别，并提供机制，以指示记录信息到许多的目的地，诸如：数据库，文件，控制台，UNIX 系统日志等。\")]),t._v(\" \"),a(\"p\",[t._v(\"Log4j 中有三个主要组成部分：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"loggers - 负责捕获记录信息。\")]),t._v(\" \"),a(\"li\",[t._v(\"appenders - 负责发布日志信息，以不同的首选目的地。\")]),t._v(\" \"),a(\"li\",[t._v(\"layouts - 负责格式化不同风格的日志信息。\")])]),t._v(\" \"),a(\"p\",[t._v(\"官网地址：\"),a(\"a\",{attrs:{href:\"http://logging.apache.org/log4j/2.x/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"http://logging.apache.org/log4j/2.x/在新窗口打开\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"p\",[t._v(\"Log4j 的短板在于性能，在Logback 和 Log4j2 出来之后，Log4j的使用也减少了。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"logback\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#logback\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#logback\"}},[t._v(\"#\")]),t._v(\" Logback\")]),t._v(\" \"),a(\"p\",[t._v(\"Logback 是由 log4j 创始人 Ceki Gulcu 设计的又一个开源日志组件，是作为 Log4j 的继承者来开发的，提供了性能更好的实现，异步 logger，Filter等更多的特性。\")]),t._v(\" \"),a(\"p\",[t._v(\"logback 当前分成三个模块：logback-core、logback-classic 和 logback-access。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"logback-core - 是其它两个模块的基础模块。\")]),t._v(\" \"),a(\"li\",[t._v(\"logback-classic - 是 log4j 的一个 改良版本。此外 logback-classic 完整实现 SLF4J API 使你可以很方便地更换成其它日志系统如 log4j 或 JDK14 Logging。\")]),t._v(\" \"),a(\"li\",[t._v(\"logback-access - 访问模块与 Servlet 容器集成提供通过 Http 来访问日志的功能。\")])]),t._v(\" \"),a(\"p\",[t._v(\"官网地址: \"),a(\"a\",{attrs:{href:\"http://logback.qos.ch/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"http://logback.qos.ch/在新窗口打开\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"h3\",{attrs:{id:\"log4j2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#log4j2\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#log4j2\"}},[t._v(\"#\")]),t._v(\" Log4j2\")]),t._v(\" \"),a(\"p\",[t._v(\"维护 Log4j 的人为了性能又搞出了 Log4j2。\")]),t._v(\" \"),a(\"p\",[t._v(\"Log4j2 和 Log4j1.x 并不兼容，设计上很大程度上模仿了 SLF4J/Logback，性能上也获得了很大的提升。\")]),t._v(\" \"),a(\"p\",[t._v(\"Log4j2 也做了 Facade/Implementation 分离的设计，分成了 log4j-api 和 log4j-core。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"日志库之日志门面\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#日志库之日志门面\"}},[t._v(\"#\")]),t._v(\" 日志库之日志门面\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"common-logging\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#common-logging\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#common-logging\"}},[t._v(\"#\")]),t._v(\" common-logging\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"common-logging 是 apache 的一个开源项目。也称Jakarta Commons Logging，缩写 JCL。\")])]),t._v(\" \"),a(\"p\",[t._v(\"common-logging 的功能是提供日志功能的 API 接口，本身并不提供日志的具体实现（当然，common-logging 内部有一个 Simple logger 的简单实现，但是功能很弱，直接忽略），而是在运行时动态的绑定日志实现组件来工作（如 log4j、java.util.loggin）。\")]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"h3\",{attrs:{id:\"slf4j\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#slf4j\"}},[t._v(\"#\")]),t._v(\" slf4j\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"全称为 Simple Logging Facade for Java，即 java 简单日志门面。\")])]),t._v(\" \"),a(\"p\",[t._v(\"类似于 Common-Logging，slf4j 是对不同日志框架提供的一个 API 封装，可以在部署的时候不修改任何配置即可接入一种日志实现方案。但是，slf4j 在编译时静态绑定真正的 Log 库。使用 SLF4J 时，如果你需要使用某一种日志实现，那么你必须选择正确的 SLF4J 的 jar 包的集合（各种桥接包）。\")]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"h2\",{attrs:{id:\"日志库使用方案\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#日志库使用方案\"}},[t._v(\"#\")]),t._v(\" 日志库使用方案\")]),t._v(\" \"),a(\"p\",[t._v(\"使用日志解决方案基本可分为三步：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"引入 jar 包\")]),t._v(\" \"),a(\"li\",[t._v(\"配置\")]),t._v(\" \"),a(\"li\",[t._v(\"使用 API\")])]),t._v(\" \"),a(\"p\",[t._v(\"常见的各种日志解决方案的第 2 步和第 3 步基本一样，实施上的差别主要在第 1 步，也就是使用不同的库。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"日志库jar包\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#日志库jar包\"}},[t._v(\"#\")]),t._v(\" 日志库jar包\")]),t._v(\" \"),a(\"p\",[t._v(\"这里首选推荐使用 slf4j + logback 的组合。\")]),t._v(\" \"),a(\"p\",[t._v(\"如果你习惯了 common-logging，可以选择 common-logging+log4j。\")]),t._v(\" \"),a(\"p\",[t._v(\"强烈建议不要直接使用日志实现组件(logback、log4j、java.util.logging)，理由前面也说过，就是无法灵活替换日志库。\")]),t._v(\" \"),a(\"p\",[t._v(\"还有一种情况：你的老项目使用了 common-logging，或是直接使用日志实现组件。如果修改老的代码，工作量太大，需要兼容处理。在下文，都将看到各种应对方法。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"slf4j-兼容非-slf4j-日志组件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#slf4j-兼容非-slf4j-日志组件\"}},[t._v(\"#\")]),t._v(\" slf4j 兼容非 slf4j 日志组件\")]),t._v(\" \"),a(\"p\",[t._v(\"在介绍解决方案前，先提一个概念——桥接\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"什么是桥接呢\")])]),t._v(\" \"),a(\"p\",[t._v(\"假如你正在开发应用程序所调用的组件当中已经使用了 common-logging，这时你需要 jcl-over-slf4j.jar 把日志信息输出重定向到 slf4j-api，slf4j-api 再去调用 slf4j 实际依赖的日志组件。这个过程称为桥接。下图是官方的 slf4j 桥接策略图：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/dev-package-log-5.png\",alt:\"dev-package-log-5\"}})]),t._v(\" \"),a(\"p\",[t._v(\"从图中应该可以看出，无论你的老项目中使用的是 common-logging 或是直接使用 log4j、java.util.logging，都可以使用对应的桥接 jar 包来解决兼容问题。\")]),t._v(\" \"),a(\"p\",[t._v(\"做 java web 开发，基本离不开 spring 框架。很遗憾，spring 使用的日志解决方案是 common-logging + log4j。\")]),t._v(\" \"),a(\"p\",[t._v(\"所以，你需要一个桥接 jar 包：logback-ext-spring。\")]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"h3\",{attrs:{id:\"日志库api-针对于日志门面\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#日志库api-针对于日志门面\"}},[t._v(\"#\")]),t._v(\" 日志库API - 针对于日志门面\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"slf4j-用法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#slf4j-用法\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#slf4j-%E7%94%A8%E6%B3%95\"}},[t._v(\"#\")]),t._v(\" slf4j 用法\")]),t._v(\" \"),a(\"p\",[t._v(\"使用 slf4j 的 API 很简单。使用LoggerFactory初始化一个Logger实例，然后调用 Logger 对应的打印等级函数就行了。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token import\"}},[a(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"slf4j\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Logger\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token import\"}},[a(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"slf4j\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"LoggerFactory\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"App\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"final\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Logger\")]),t._v(\" log \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"LoggerFactory\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getLogger\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"App\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"print log, current level: {}\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"trace\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"trace\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"debug\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"debug\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"info\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"info\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"warn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"warn\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"error\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"error\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"hr\"),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/image-20230609192606913.png\",alt:\"image-20230609192606913\"}})]),t._v(\" \"),a(\"h4\",{attrs:{id:\"common-logging-用法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#common-logging-用法\"}},[t._v(\"#\")]),t._v(\" common-logging 用法\")]),t._v(\" \"),a(\"p\",[t._v(\"common-logging 用法和 slf4j 几乎一样，但是支持的打印等级多了一个更高级别的：fatal。\")]),t._v(\" \"),a(\"p\",[t._v(\"此外，common-logging 不支持{}替换参数，你只能选择拼接字符串这种方式了。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token import\"}},[a(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"apache\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"commons\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"logging\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Log\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token import\"}},[a(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"apache\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"commons\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"logging\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"LogFactory\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"JclTest\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"final\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Log\")]),t._v(\" log \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"LogFactory\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getLog\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"JclTest\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n \\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"print log, current level: \"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"trace\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"trace\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"debug\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"debug\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"info\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"info\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"warn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"warn\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"error\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"error\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        log\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fatal\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"fatal\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"对日志架构使用比较好的实践\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对日志架构使用比较好的实践\"}},[t._v(\"#\")]),t._v(\" 对日志架构使用比较好的实践\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"总是使用log-facade-而不是具体log-implementation\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总是使用log-facade-而不是具体log-implementation\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#%E6%80%BB%E6%98%AF%E4%BD%BF%E7%94%A8log-facade-%E8%80%8C%E4%B8%8D%E6%98%AF%E5%85%B7%E4%BD%93log-implementation\"}},[t._v(\"#\")]),t._v(\" 总是使用Log Facade，而不是具体Log Implementation\")]),t._v(\" \"),a(\"p\",[t._v(\"正如之前所说的，使用 Log Facade 可以方便的切换具体的日志实现。而且，如果依赖多个项目，使用了不同的Log Facade，还可以方便的通过 Adapter 转接到同一个实现上。如果依赖项目使用了多个不同的日志实现，就麻烦的多了。\")]),t._v(\" \"),a(\"p\",[t._v(\"具体来说，现在推荐使用 Log4j-API 或者 SLF4j，不推荐继续使用 JCL。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"只添加一个-log-implementation依赖\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#只添加一个-log-implementation依赖\"}},[t._v(\"#\")]),t._v(\" \"),a(\"a\",{attrs:{href:\"#%E5%8F%AA%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA-log-implementation%E4%BE%9D%E8%B5%96\"}},[t._v(\"#\")]),t._v(\" 只添加一个 Log Implementation依赖\")]),t._v(\" \"),a(\"p\",[t._v(\"毫无疑问，项目中应该只使用一个具体的 Log Implementation，建议使用 Logback 或者Log4j2。如果有依赖的项目中，使用的 Log Facade不支持直接使用当前的 Log Implementation，就添加合适的桥接器依赖。具体的桥接关系可以看上一篇文章的图。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"日志配置的考虑点\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"支持日志路径，日志level等配置\")]),t._v(\" \"),a(\"li\",[t._v(\"日志控制配置通过application.yml下发\")]),t._v(\" \"),a(\"li\",[t._v(\"按天生成日志，当天的日志>50MB回滚\")]),t._v(\" \"),a(\"li\",[t._v(\"最多保存10天日志\")]),t._v(\" \"),a(\"li\",[t._v(\"生成的日志中Pattern自定义\")]),t._v(\" \"),a(\"li\",[t._v(\"Pattern中添加用户自定义的MDC字段，比如用户信息(当前日志是由哪个用户的请求产生)，request信息。此种方式可以通过AOP切面控制，在MDC中添加requestID，在spring-logback.xml中配置Pattern。\")]),t._v(\" \"),a(\"li\",[t._v(\"根据不同的运行环境设置Profile - dev，test，product\")]),t._v(\" \"),a(\"li\",[t._v(\"对控制台，Err和全量日志分别配置\")]),t._v(\" \"),a(\"li\",[t._v(\"对第三方包路径日志控制\")])])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}