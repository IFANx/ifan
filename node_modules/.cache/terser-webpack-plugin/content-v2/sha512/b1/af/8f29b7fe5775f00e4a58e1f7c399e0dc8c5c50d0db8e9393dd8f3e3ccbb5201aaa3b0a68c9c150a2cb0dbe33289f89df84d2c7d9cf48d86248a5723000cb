{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{300:function(t,s,a){\"use strict\";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"spring基础-spring核心之面向切面编程-aop\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#spring基础-spring核心之面向切面编程-aop\"}},[t._v(\"#\")]),t._v(\" Spring基础 - Spring核心之面向切面编程(AOP)\")]),t._v(\" \"),s(\"p\",[t._v(\"https://pdai.tech/md/spring/spring-x-framework-aop.html\")]),t._v(\" \"),s(\"p\",[t._v(\"Spring 框架通过定义切面, 通过拦截切点实现了不同业务模块的解耦，这个就叫\"),s(\"strong\",[t._v(\"面向切面编程 - Aspect Oriented Programming (AOP)\")])]),t._v(\" \"),s(\"p\",[t._v(\"为什么@Aspect注解使用的是aspectj的jar包呢？这就引出了\"),s(\"strong\",[t._v(\"Aspect4J和Spring AOP的历史渊源\")]),t._v(\"，只有理解了Aspect4J和Spring的渊源才能理解有些注解上的兼容设计\")]),t._v(\" \"),s(\"p\",[t._v(\"如何支持\"),s(\"strong\",[t._v(\"更多拦截方式\")]),t._v(\"来实现解耦， 以满足更多场景需求呢？ 这就是@Around, @Pointcut... 等的设计\")]),t._v(\" \"),s(\"p\",[t._v(\"那么Spring框架又是如何实现AOP的呢？ 这就引入\"),s(\"strong\",[t._v(\"代理技术，分静态代理和动态代理\")]),t._v(\"，动态代理又包含JDK代理和CGLIB代理等\")]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h2\",{attrs:{id:\"如何理解aop\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何理解aop\"}},[t._v(\"#\")]),t._v(\" 如何理解AOP\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"AOP的本质也是为了解耦，它是一种设计思想； 在理解时也应该简化理解。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"aop是什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aop是什么\"}},[t._v(\"#\")]),t._v(\" \"),s(\"a\",{attrs:{href:\"https://pdai.tech/md/spring/spring-x-framework-aop.html#aop%E6%98%AF%E4%BB%80%E4%B9%88\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"#\"),s(\"OutboundLink\")],1),t._v(\"AOP是什么\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"AOP为Aspect Oriented Programming的缩写，意为：面向切面编程\")])]),t._v(\" \"),s(\"p\",[t._v(\"AOP最早是AOP联盟的组织提出的,指定的一套规范,spring将AOP的思想引入框架之中,通过\"),s(\"strong\",[t._v(\"预编译方式\")]),t._v(\"和\"),s(\"strong\",[t._v(\"运行期间动态代理\")]),t._v(\"实现程序的统一维护的一种技术\")]),t._v(\" \"),s(\"p\",[t._v(\"我们将记录日志功能解耦为日志切面，它的目标是解耦。进而引出AOP的理念：就是将分散在各个业务逻辑代码中相同的代码通过\"),s(\"strong\",[t._v(\"横向切割\")]),t._v(\"的方式抽取到一个独立的模块中！\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/spring-framework-aop-4.png\",alt:\"spring-framework-aop-4\"}})]),t._v(\" \"),s(\"p\",[t._v(\"OOP面向对象编程，针对业务处理过程的实体及其属性和行为进行抽象封装，以获得更加清晰高效的逻辑单元划分。而AOP则是针对业务处理过程中的切面进行提取，它所面对的是处理过程的某个步骤或阶段，以获得逻辑过程的中各部分之间低耦合的隔离效果。这两种设计思想在目标上有着本质的差异。\")]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"aop术语\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aop术语\"}},[t._v(\"#\")]),t._v(\" AOP术语\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"首先让我们从一些重要的AOP概念和术语开始。\"),s(\"strong\",[t._v(\"这些术语不是Spring特有的\")]),t._v(\"。\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"连接点（Jointpoint）\")]),t._v(\"：表示需要在程序中插入横切关注点的扩展点，\"),s(\"strong\",[t._v(\"连接点可能是类初始化、方法执行、方法调用、字段调用或处理异常等等\")]),t._v(\"，Spring只支持方法执行连接点，在AOP中表示为\"),s(\"strong\",[t._v(\"在哪里干\")]),t._v(\"；\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"切入点（Pointcut）\")]),t._v(\"： 选择一组相关连接点的模式，即可以认为连接点的集合，Spring支持perl5正则表达式和AspectJ切入点模式，Spring默认使用AspectJ语法，在AOP中表示为\"),s(\"strong\",[t._v(\"在哪里干的集合\")]),t._v(\"；\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"通知（Advice）\")]),t._v(\"：在连接点上执行的行为，通知提供了在AOP中需要在切入点所选择的连接点处进行扩展现有行为的手段；包括前置通知（before advice）、后置通知(after advice)、环绕通知（around advice），在Spring中通过代理模式实现AOP，并通过拦截器模式以环绕连接点的拦截器链织入通知；在AOP中表示为\"),s(\"strong\",[t._v(\"干什么\")]),t._v(\"；\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"方面/切面（Aspect）\")]),t._v(\"：横切关注点的模块化，比如上边提到的日志组件。可以认为是通知、引入和切入点的组合；在Spring中可以使用Schema和@AspectJ方式进行组织实现；在AOP中表示为\"),s(\"strong\",[t._v(\"在哪干和干什么集合\")]),t._v(\"；\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"引入（inter-type declaration）\")]),t._v(\"：也称为内部类型声明，为已有的类添加额外新的字段或方法，Spring允许引入新的接口（必须对应一个实现）到所有被代理对象（目标对象）, 在AOP中表示为\"),s(\"strong\",[t._v(\"干什么（引入什么）\")]),t._v(\"；\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"目标对象（Target Object）\")]),t._v(\"：需要被织入横切关注点的对象，即该对象是切入点选择的对象，需要被通知的对象，从而也可称为被通知对象；由于Spring AOP 通过代理模式实现，从而这个对象永远是被代理对象，在AOP中表示为\"),s(\"strong\",[t._v(\"对谁干\")]),t._v(\"；\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"织入（Weaving）\")]),t._v(\"：把切面连接到其它的应用程序类型或者对象上，并创建一个被通知的对象。这些可以在编译时（例如使用AspectJ编译器），类加载时和运行时完成。Spring和其他纯Java AOP框架一样，在运行时完成织入。在AOP中表示为\"),s(\"strong\",[t._v(\"怎么实现的\")]),t._v(\"；\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"AOP代理（AOP Proxy）\")]),t._v(\"：AOP框架使用代理模式创建的对象，从而实现在连接点处插入通知（即应用切面），就是通过代理来对目标对象应用切面。在Spring中，AOP代理可以用JDK动态代理或CGLIB代理实现，而通过拦截器模型应用切面。在AOP中表示为\"),s(\"strong\",[t._v(\"怎么实现的一种典型方式\")]),t._v(\"；\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"strong\",[t._v(\"通知类型\")]),t._v(\"：\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"前置通知（Before advice）\")]),t._v(\"：在某连接点之前执行的通知，但这个通知不能阻止连接点之前的执行流程（除非它抛出一个异常）。\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"后置通知（After returning advice）\")]),t._v(\"：在某连接点正常完成后执行的通知：例如，一个方法没有抛出任何异常，正常返回。\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"异常通知（After throwing advice）\")]),t._v(\"：在方法抛出异常退出时执行的通知。\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"最终通知（After (finally) advice）\")]),t._v(\"：当某连接点退出的时候执行的通知（不论是正常返回还是异常退出）。\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"环绕通知（Around Advice）\")]),t._v(\"：包围一个连接点的通知，如方法调用。这是最强大的一种通知类型。环绕通知可以在方法调用前后完成自定义的行为。它也会选择是否继续执行连接点或直接返回它自己的返回值或抛出异常来结束执行。\")])]),t._v(\" \"),s(\"p\",[t._v(\"环绕通知是最常用的通知类型。和AspectJ一样，Spring提供所有类型的通知，我们推荐你使用尽可能简单的通知类型来实现需要的功能。例如，如果你只是需要一个方法的返回值来更新缓存，最好使用后置通知而不是环绕通知，尽管环绕通知也能完成同样的事情。用最合适的通知类型可以使得编程模型变得简单，并且能够避免很多潜在的错误。比如，你不需要在JoinPoint上调用用于环绕通知的proceed()方法，就不会有调用的问题。\")]),t._v(\" \"),s(\"blockquote\"),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"spring-aop和aspectj是什么关系\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#spring-aop和aspectj是什么关系\"}},[t._v(\"#\")]),t._v(\" Spring AOP和AspectJ是什么关系\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"首先AspectJ是什么\")]),t._v(\"？\")])]),t._v(\" \"),s(\"p\",[t._v(\"AspectJ是一个java实现的AOP框架，它能够对java代码进行AOP编译（一般在编译期进行），让java代码具有AspectJ的AOP功能（当然需要特殊的编译器）\")]),t._v(\" \"),s(\"p\",[t._v(\"可以这样说AspectJ是目前实现AOP框架中最成熟，功能最丰富的语言，更幸运的是，AspectJ与java程序完全兼容，几乎是无缝关联，因此对于有java编程基础的工程师，上手和使用都非常容易。\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"其次，为什么需要理清楚Spring AOP和AspectJ的关系\")]),t._v(\"？\")])]),t._v(\" \"),s(\"p\",[t._v(\"我们看下@Aspect以及增强的几个注解，为什么不是Spring包，而是来源于aspectJ呢？\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/spring-framework-aop-5.png\",alt:\"spring-framework-aop-4\"}})]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"Spring AOP和AspectJ是什么关系\")]),t._v(\"？\")])]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"AspectJ是更强的AOP框架，是实际意义的\"),s(\"strong\",[t._v(\"AOP标准\")]),t._v(\"；\")]),t._v(\" \"),s(\"li\",[t._v(\"Spring为何不写类似AspectJ的框架？ Spring AOP使用纯Java实现, 它不需要专门的编译过程, 它一个\"),s(\"strong\",[t._v(\"重要的原则就是无侵入性（non-invasiveness）\")]),t._v(\"; Spring 小组完全有能力写类似的框架，只是Spring AOP从来没有打算通过提供一种全面的AOP解决方案来与AspectJ竞争。Spring的开发小组相信无论是基于代理（proxy-based）的框架如Spring AOP或者是成熟的框架如AspectJ都是很有价值的，他们之间应该是\"),s(\"strong\",[t._v(\"互补而不是竞争的关系\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[t._v(\"Spring小组喜欢@AspectJ注解风格更胜于Spring XML配置； 所以\"),s(\"strong\",[t._v(\"在Spring 2.0使用了和AspectJ 5一样的注解，并使用AspectJ来做切入点解析和匹配\")]),t._v(\"。\"),s(\"strong\",[t._v(\"但是，AOP在运行时仍旧是纯的Spring AOP，并不依赖于AspectJ的编译器或者织入器（weaver）\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[t._v(\"Spring 2.5对AspectJ的支持：在一些环境下，增加了对AspectJ的装载时编织支持，同时提供了一个新的bean切入点。\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"更多关于AspectJ\")]),t._v(\"？\")])]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"了解AspectJ应用到java代码的过程（这个过程称为织入），对于织入这个概念，可以简单理解为aspect(切面)应用到目标函数(类)的过程。\")])]),t._v(\" \"),s(\"p\",[t._v(\"对于这个过程，一般分为\"),s(\"strong\",[t._v(\"动态织入\")]),t._v(\"和\"),s(\"strong\",[t._v(\"静态织入\")]),t._v(\"：\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"动态织入的方式是在运行时动态将要增强的代码织入到目标类中，这样往往是通过动态代理技术完成的，如Java JDK的动态代理(Proxy，底层通过反射实现)或者CGLIB的动态代理(底层通过继承实现)，Spring AOP采用的就是基于运行时增强的代理技术\")]),t._v(\" \"),s(\"li\",[t._v(\"ApectJ采用的就是静态织入的方式。ApectJ主要采用的是编译期织入，在这个期间使用AspectJ的acj编译器(类似javac)把aspect类编译成class字节码后，在java目标类编译时织入，即先编译aspect类再编译目标类。\")])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"http://8.130.25.175:8080/img/spring-framework-aop-6.png\",alt:\"spring-framework-aop-4\"}})]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"aspectj注解方式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aspectj注解方式\"}},[t._v(\"#\")]),t._v(\" AspectJ注解方式\")]),t._v(\" \"),s(\"p\",[t._v(\"基于XML的声明式AspectJ存在一些不足，需要在Spring配置文件配置大量的代码信息，为了解决这个问题，Spring 使用了@AspectJ框架为AOP的实现提供了一套注解。\")]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[t._v(\"注解名称\")]),t._v(\" \"),s(\"th\",[t._v(\"解释\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[t._v(\"@Aspect\")]),t._v(\" \"),s(\"td\",[t._v(\"用来定义一个切面。\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"@pointcut\")]),t._v(\" \"),s(\"td\",[t._v(\"用于定义切入点表达式。在使用时还需要定义一个包含名字和任意参数的方法签名来表示切入点名称，这个方法签名就是一个返回值为void，且方法体为空的普通方法。\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"@Before\")]),t._v(\" \"),s(\"td\",[t._v(\"用于定义前置通知，相当于BeforeAdvice。在使用时，通常需要指定一个value属性值，该属性值用于指定一个切入点表达式(可以是已有的切入点，也可以直接定义切入点表达式)。\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"@AfterReturning\")]),t._v(\" \"),s(\"td\",[t._v(\"用于定义后置通知，相当于AfterReturningAdvice。在使用时可以指定pointcut / value和returning属性，其中pointcut / value这两个属性的作用一样，都用于指定切入点表达式。\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"@Around\")]),t._v(\" \"),s(\"td\",[t._v(\"用于定义环绕通知，相当于MethodInterceptor。在使用时需要指定一个value属性，该属性用于指定该通知被植入的切入点。\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"@After-Throwing\")]),t._v(\" \"),s(\"td\",[t._v(\"用于定义异常通知来处理程序中未处理的异常，相当于ThrowAdvice。在使用时可指定pointcut / value和throwing属性。其中pointcut/value用于指定切入点表达式，而throwing属性值用于指定-一个形参名来表示Advice方法中可定义与此同名的形参，该形参可用于访问目标方法抛出的异常。\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"@After\")]),t._v(\" \"),s(\"td\",[t._v(\"用于定义最终final 通知，不管是否异常，该通知都会执行。使用时需要指定一个value属性，该属性用于指定该通知被植入的切入点。\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"@DeclareParents\")]),t._v(\" \"),s(\"td\",[t._v(\"用于定义引介通知，相当于IntroductionInterceptor (不要求掌握)。\")])])])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"Spring AOP的实现方式是动态织入，动态织入的方式是在运行时动态将要增强的代码织入到目标类中，这样往往是通过动态代理技术完成的；\"),s(\"strong\",[t._v(\"如Java JDK的动态代理(Proxy，底层通过反射实现)或者CGLIB的动态代理(底层通过继承实现)\")]),t._v(\"，Spring AOP采用的就是基于运行时增强的代理技术。所以我们看下如下的两个例子(\"),s(\"a\",{attrs:{href:\"https://github.com/realpdai/tech-pdai-spring-demos\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"例子代码在新窗口打开\"),s(\"OutboundLink\")],1),t._v(\" 中05模块）：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"基于JDK代理例子\")]),t._v(\" \"),s(\"li\",[t._v(\"基于Cglib代理例子\")])])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"接口使用jdk代理\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#接口使用jdk代理\"}},[t._v(\"#\")]),t._v(\" 接口使用JDK代理\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"定义接口\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * Jdk Proxy Service.\\n *\\n * @author pdai\\n */\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"interface\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"IJdkProxyService\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"throws\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Exception\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"实现类\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * @author pdai\\n */\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Service\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"JdkProxyDemoServiceImpl\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"implements\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"IJdkProxyService\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Override\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"JdkProxyServiceImpl.doMethod1()\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Override\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"JdkProxyServiceImpl.doMethod2()\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello world\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Override\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"throws\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Exception\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"JdkProxyServiceImpl.doMethod3()\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"throw\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Exception\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"some exception\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"定义切面\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"package\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"tech\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"pdai\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"springframework\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspect\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspectj\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lang\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"ProceedingJoinPoint\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspectj\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lang\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"After\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspectj\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lang\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"AfterReturning\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspectj\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lang\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"AfterThrowing\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspectj\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lang\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Around\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspectj\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lang\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Aspect\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspectj\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lang\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Before\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"aspectj\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lang\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Pointcut\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"springframework\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"context\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"EnableAspectJAutoProxy\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token import\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"springframework\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"stereotype\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Component\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * @author pdai\\n */\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@EnableAspectJAutoProxy\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Component\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Aspect\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"LogAspect\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n     * define point cut.\\n     */\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Pointcut\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"execution(* tech.pdai.springframework.service.*.*(..))\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"pointCutMethod\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n     * 环绕通知.\\n     *\\n     * @param pjp pjp\\n     * @return obj\\n     * @throws Throwable exception\\n     */\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Around\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"pointCutMethod()\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doAround\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"ProceedingJoinPoint\")]),t._v(\" pjp\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"throws\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Throwable\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"-----------------------\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"环绕通知: 进入方法\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),t._v(\" o \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" pjp\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"proceed\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"环绕通知: 退出方法\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" o\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n     * 前置通知.\\n     */\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Before\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"pointCutMethod()\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doBefore\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"前置通知\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n     * 后置通知.\\n     *\\n     * @param result return val\\n     */\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@AfterReturning\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"pointcut \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"pointCutMethod()\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" returning \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"result\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doAfterReturning\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" result\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"后置通知, 返回值: \"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" result\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n     * 异常通知.\\n     *\\n     * @param e exception\\n     */\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@AfterThrowing\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"pointcut \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"pointCutMethod()\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" throwing \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"e\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doAfterThrowing\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Exception\")]),t._v(\" e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"异常通知, 异常: \"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getMessage\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n     * 最终通知.\\n     */\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@After\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"pointCutMethod()\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doAfter\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"最终通知\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"输出\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"\\n环绕通知\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" 进入方法\\n前置通知\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"JdkProxyServiceImpl\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n最终通知\\n环绕通知\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" 退出方法\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"\\n环绕通知\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" 进入方法\\n前置通知\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"JdkProxyServiceImpl\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n后置通知\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" 返回值\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" hello world\\n最终通知\\n环绕通知\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" 退出方法\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"\\n环绕通知\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" 进入方法\\n前置通知\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"JdkProxyServiceImpl\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n异常通知\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" 异常\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" some exception\\n最终通知\\n\")])])]),s(\"h3\",{attrs:{id:\"切入点-pointcut-的申明规则\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#切入点-pointcut-的申明规则\"}},[t._v(\"#\")]),t._v(\" 切入点（pointcut）的申明规则?\")]),t._v(\" \"),s(\"p\",[t._v(\"Spring AOP 用户可能会经常使用 execution切入点指示符。执行表达式的格式如下：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[t._v(\"execution（modifiers\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"pattern\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\" ret\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"type\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"pattern declaring\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"type\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"pattern\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\" name\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"pattern（param\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"pattern） \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"throws\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"pattern\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\"）\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"ret-type-pattern 返回类型模式, name-pattern名字模式和param-pattern参数模式是必选的， 其它部分都是可选的。返回类型模式决定了方法的返回类型必须依次匹配一个连接点。 你会使用的最频繁的返回类型模式是\"),s(\"code\",[t._v(\"*\")]),t._v(\"，\"),s(\"strong\",[t._v(\"它代表了匹配任意的返回类型\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[t._v(\"declaring-type-pattern, 一个全限定的类型名将只会匹配返回给定类型的方法。\")]),t._v(\" \"),s(\"li\",[t._v(\"name-pattern 名字模式匹配的是方法名。 你可以使用\"),s(\"code\",[t._v(\"*\")]),t._v(\"通配符作为所有或者部分命名模式。\")]),t._v(\" \"),s(\"li\",[t._v(\"param-pattern 参数模式稍微有点复杂：()匹配了一个不接受任何参数的方法， 而(..)匹配了一个接受任意数量参数的方法（零或者更多）。 模式(\"),s(\"em\",[t._v(\")匹配了一个接受一个任何类型的参数的方法。 模式(\")]),t._v(\",String)匹配了一个接受两个参数的方法，第一个可以是任意类型， 第二个则必须是String类型。\")])]),t._v(\" \"),s(\"p\",[t._v(\"对应到我们上面的例子：\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"/images/spring/springframework/spring-framework-aop-7.png\",alt:\"img\"}})]),t._v(\" \"),s(\"p\",[t._v(\"下面给出一些通用切入点表达式的例子。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 任意公共方法的执行：\")]),t._v(\"\\nexecution（\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"（\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"））\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 任何一个名字以“set”开始的方法的执行：\")]),t._v(\"\\nexecution（\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" set\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"（\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"））\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// AccountService接口定义的任意方法的执行：\")]),t._v(\"\\nexecution（\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"com\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"xyz\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"service\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),t._v(\"AccountService\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"*（\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"））\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 在service包中定义的任意方法的执行：\")]),t._v(\"\\nexecution（\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" com\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"xyz\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"service\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"*\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"*（\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"））\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 在service包或其子包中定义的任意方法的执行：\")]),t._v(\"\\nexecution（\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" com\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"xyz\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"service\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"*\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"*（\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"））\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 在service包中的任意连接点（在Spring AOP中只是方法执行）：\")]),t._v(\"\\nwithin（com\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"xyz\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"service\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"*）\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 在service包或其子包中的任意连接点（在Spring AOP中只是方法执行）：\")]),t._v(\"\\nwithin（com\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"xyz\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"service\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"*）\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 实现了AccountService接口的代理对象的任意连接点 （在Spring AOP中只是方法执行）：\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),t._v(\"（\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"com\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"xyz\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"service\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),t._v(\"AccountService\")]),t._v(\"）\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 'this'在绑定表单中更加常用\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 实现AccountService接口的目标对象的任意连接点 （在Spring AOP中只是方法执行）：\")]),t._v(\"\\ntarget（\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"com\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"xyz\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"service\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),t._v(\"AccountService\")]),t._v(\"） \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 'target'在绑定表单中更加常用\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 任何一个只接受一个参数，并且运行时所传入的参数是Serializable 接口的连接点（在Spring AOP中只是方法执行）\")]),t._v(\"\\nargs（\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"java\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"io\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),t._v(\"Serializable\")]),t._v(\"） \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 'args'在绑定表单中更加常用; 请注意在例子中给出的切入点不同于 execution(* *(java.io.Serializable))： args版本只有在动态运行时候传入参数是Serializable时才匹配，而execution版本在方法签名中声明只有一个 Serializable类型的参数时候匹配。\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 目标对象中有一个 @Transactional 注解的任意连接点 （在Spring AOP中只是方法执行）\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@target\")]),t._v(\"（\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"springframework\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"transaction\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),t._v(\"Transactional\")]),t._v(\"）\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// '@target'在绑定表单中更加常用\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 任何一个目标对象声明的类型有一个 @Transactional 注解的连接点 （在Spring AOP中只是方法执行）：\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@within\")]),t._v(\"（\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"springframework\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"transaction\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),t._v(\"Transactional\")]),t._v(\"） \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// '@within'在绑定表单中更加常用\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 任何一个执行的方法有一个 @Transactional 注解的连接点 （在Spring AOP中只是方法执行）\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@annotation\")]),t._v(\"（\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"org\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"springframework\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"transaction\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"annotation\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),t._v(\"Transactional\")]),t._v(\"） \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// '@annotation'在绑定表单中更加常用\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 任何一个只接受一个参数，并且运行时所传入的参数类型具有@Classified 注解的连接点（在Spring AOP中只是方法执行）\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@args\")]),t._v(\"（\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"com\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"xyz\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"security\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")])]),t._v(\"Classified\")]),t._v(\"） \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// '@args'在绑定表单中更加常用\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 任何一个在名为'tradeService'的Spring bean之上的连接点 （在Spring AOP中只是方法执行）\")]),t._v(\"\\nbean（tradeService）\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 任何一个在名字匹配通配符表达式'*Service'的Spring bean之上的连接点 （在Spring AOP中只是方法执行）\")]),t._v(\"\\nbean（\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Service\")]),t._v(\"）\\n\")])])]),s(\"p\",[t._v(\"此外Spring 支持如下三个逻辑运算符来组合切入点表达式\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&&\")]),t._v(\"：要求连接点同时匹配两个切入点表达式\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\"：要求连接点匹配任意个切入点表达式\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"：要求连接点不匹配指定的切入点表达式\\n\")])])]),s(\"h3\",{attrs:{id:\"spring-aop-和-aspectj-之间的关键区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#spring-aop-和-aspectj-之间的关键区别\"}},[t._v(\"#\")]),t._v(\" Spring AOP 和 AspectJ 之间的关键区别？\")]),t._v(\" \"),s(\"p\",[t._v(\"AspectJ可以做Spring AOP干不了的事情，\"),s(\"strong\",[t._v(\"它是AOP编程的完全解决方案，Spring AOP则致力于解决企业级开发中最普遍的AOP\")]),t._v(\"（方法织入）。\")]),t._v(\" \"),s(\"p\",[t._v(\"下表总结了 Spring AOP 和 AspectJ 之间的关键区别:\")]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[t._v(\"Spring AOP\")]),t._v(\" \"),s(\"th\",[t._v(\"AspectJ\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[t._v(\"在纯 Java 中实现\")]),t._v(\" \"),s(\"td\",[t._v(\"使用 Java 编程语言的扩展实现\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"不需要单独的编译过程\")]),t._v(\" \"),s(\"td\",[t._v(\"除非设置 LTW，否则需要 AspectJ 编译器 (ajc)\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"只能使用运行时织入\")]),t._v(\" \"),s(\"td\",[t._v(\"运行时织入不可用。支持编译时、编译后和加载时织入\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"功能不强-仅支持方法级编织\")]),t._v(\" \"),s(\"td\",[t._v(\"更强大 - 可以编织字段、方法、构造函数、静态初始值设定项、最终类/方法等......。\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"只能在由 Spring 容器管理的 bean 上实现\")]),t._v(\" \"),s(\"td\",[t._v(\"可以在所有域对象上实现\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"仅支持方法执行切入点\")]),t._v(\" \"),s(\"td\",[t._v(\"支持所有切入点\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"代理是由目标对象创建的, 并且切面应用在这些代理上\")]),t._v(\" \"),s(\"td\",[t._v(\"在执行应用程序之前 (在运行时) 前, 各方面直接在代码中进行织入\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"比 AspectJ 慢多了\")]),t._v(\" \"),s(\"td\",[t._v(\"更好的性能\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"易于学习和应用\")]),t._v(\" \"),s(\"td\",[t._v(\"相对于 Spring AOP 来说更复杂\")])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"spring-aop还是完全用aspectj\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#spring-aop还是完全用aspectj\"}},[t._v(\"#\")]),t._v(\" Spring AOP还是完全用AspectJ？\")]),t._v(\" \"),s(\"p\",[t._v(\"以下Spring官方的回答：（总结来说就是 \"),s(\"strong\",[t._v(\"Spring AOP更易用，AspectJ更强大\")]),t._v(\"）。\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"Spring AOP比完全使用AspectJ更加简单， 因为它不需要引入AspectJ的编译器／织入器到你开发和构建过程中。 如果你\"),s(\"strong\",[t._v(\"仅仅需要在Spring bean上通知执行操作，那么Spring AOP是合适的选择\")]),t._v(\"。\")]),t._v(\" \"),s(\"li\",[t._v(\"如果你需要通知domain对象或其它没有在Spring容器中管理的任意对象，那么你需要使用AspectJ。\")]),t._v(\" \"),s(\"li\",[t._v(\"如果你想通知除了简单的方法执行之外的连接点（如：调用连接点、字段get或set的连接点等等）， 也需要使用AspectJ。\")])]),t._v(\" \"),s(\"hr\")])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}