{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{357:function(t,e,a){\"use strict\";a.r(e);var _=a(14),v=Object(_.a)({},(function(){var t=this,e=t._self._c;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h2\",{attrs:{id:\"函数依赖\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数依赖\"}},[t._v(\"#\")]),t._v(\" 函数依赖\")]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"通过函数依赖关系，来帮助你确定表中的合理主外键等；这里只是简介，有这么个概念就可以了，因为大多数情况你不用那些所谓的推倒关系，你也是可以凭借\"),e(\"strong\",[t._v(\"直觉\")]),t._v(\"设计出来的。\")])]),t._v(\" \"),e(\"p\",[t._v(\"记 A->B 表示 A 函数决定 B，也可以说 B 函数依赖于 A。\")]),t._v(\" \"),e(\"p\",[t._v(\"如果 {A1，A2，... ，An} 是关系的一个或多个属性的集合，该集合函数决定了关系的其它所有属性并且是最小的，那么该集合就称为键码。\")]),t._v(\" \"),e(\"p\",[t._v(\"对于 A->B，如果能找到 A 的真子集 A'，使得 A'-> B，那么 A->B 就是部分函数依赖，否则就是完全函数依赖。\")]),t._v(\" \"),e(\"p\",[t._v(\"对于 A->B，B->C，则 A->C 是一个传递函数依赖。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"异常\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#异常\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E5%BC%82%E5%B8%B8\"}},[t._v(\"#\")]),t._v(\" 异常\")]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"介绍 不符合范式的关系，会产生很多异常，为了引出\"),e(\"strong\",[t._v(\"范式\")]),t._v(\"的内容。\")])]),t._v(\" \"),e(\"p\",[t._v(\"以下的学生课程关系的函数依赖为 Sno, Cname -> Sname, Sdept, Mname, Grade，键码为 {Sno, Cname}。也就是说，确定学生和课程之后，就能确定其它信息。\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sno\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sdept\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Mname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Cname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Grade\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"90\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"80\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"100\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"95\")])])])]),t._v(\" \"),e(\"p\",[t._v(\"不符合范式的关系，会产生很多异常，主要有以下四种异常:\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"冗余数据: 例如 \"),e(\"code\",[t._v(\"学生-2\")]),t._v(\" 出现了两次。\")]),t._v(\" \"),e(\"li\",[t._v(\"修改异常: 修改了一个记录中的信息，但是另一个记录中相同的信息却没有被修改。\")]),t._v(\" \"),e(\"li\",[t._v(\"删除异常: 删除一个信息，那么也会丢失其它信息。例如删除了 \"),e(\"code\",[t._v(\"课程-1\")]),t._v(\" 需要删除第一行和第三行，那么 \"),e(\"code\",[t._v(\"学生-1\")]),t._v(\" 的信息就会丢失。\")]),t._v(\" \"),e(\"li\",[t._v(\"插入异常: 例如想要插入一个学生的信息，如果这个学生还没选课，那么就无法插入。\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"范式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#范式\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E8%8C%83%E5%BC%8F\"}},[t._v(\"#\")]),t._v(\" 范式\")]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"范式理论是为了解决以上提到四种异常。\")])]),t._v(\" \"),e(\"p\",[t._v(\"高级别范式的依赖于低级别的范式，1NF 是最低级别的范式。\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"/Users/kkxu/NodeProjects/ifan/ifan/images/c2d343f7-604c-4856-9a3c-c71d6f67fecc.png\",alt:\"c2d343f7-604c-4856-9a3c-c71d6f67fecc\"}})]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_1-第一范式-1nf\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-第一范式-1nf\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#_1-%E7%AC%AC%E4%B8%80%E8%8C%83%E5%BC%8F-1nf\"}},[t._v(\"#\")]),t._v(\" 1. 第一范式 (1NF)\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"属性不可分。\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_2-第二范式-2nf\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-第二范式-2nf\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#_2-%E7%AC%AC%E4%BA%8C%E8%8C%83%E5%BC%8F-2nf\"}},[t._v(\"#\")]),t._v(\" 2. 第二范式 (2NF)\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"每个非主属性完全函数依赖于主键。\")])]),t._v(\" \"),e(\"p\",[t._v(\"可以通过分解来满足。\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"分解前\")])]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sno\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sdept\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Mname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Cname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Grade\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"90\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"80\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"100\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"95\")])])])]),t._v(\" \"),e(\"p\",[t._v(\"以上学生课程关系中，{Sno, Cname} 为键码，有如下函数依赖:\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Sno -> Sname, Sdept\")]),t._v(\" \"),e(\"li\",[t._v(\"Sdept -> Mname\")]),t._v(\" \"),e(\"li\",[t._v(\"Sno, Cname-> Grade\")])]),t._v(\" \"),e(\"p\",[t._v(\"Grade 完全函数依赖于键码，它没有任何冗余数据，每个学生的每门课都有特定的成绩。\")]),t._v(\" \"),e(\"p\",[t._v(\"Sname, Sdept 和 Mname 都部分依赖于键码，当一个学生选修了多门课时，这些数据就会出现多次，造成大量冗余数据。\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"分解后\")])]),t._v(\" \"),e(\"p\",[t._v(\"关系-1\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sno\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sdept\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Mname\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-1\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")])])])]),t._v(\" \"),e(\"p\",[t._v(\"有以下函数依赖:\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Sno -> Sname, Sdept\")]),t._v(\" \"),e(\"li\",[t._v(\"Sdept -> Mname\")])]),t._v(\" \"),e(\"p\",[t._v(\"关系-2\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sno\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Cname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Grade\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"90\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"80\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"100\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"课程-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"95\")])])])]),t._v(\" \"),e(\"p\",[t._v(\"有以下函数依赖:\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Sno, Cname -> Grade\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_3-第三范式-3nf\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-第三范式-3nf\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#_3-%E7%AC%AC%E4%B8%89%E8%8C%83%E5%BC%8F-3nf\"}},[t._v(\"#\")]),t._v(\" 3. 第三范式 (3NF)\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"非主属性不传递函数依赖于键码。\")])]),t._v(\" \"),e(\"p\",[t._v(\"上面的 关系-1 中存在以下传递函数依赖:\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Sno -> Sdept -> Mname\")])]),t._v(\" \"),e(\"p\",[t._v(\"可以进行以下分解:\")]),t._v(\" \"),e(\"p\",[t._v(\"关系-11\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sno\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sname\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sdept\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-1\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学生-3\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")])])])]),t._v(\" \"),e(\"p\",[t._v(\"关系-12\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Sdept\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Mname\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-1\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-1\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"学院-2\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"院长-2\")])])])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\"}},[t._v(\"#\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"acid\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#acid\"}},[t._v(\"#\")]),t._v(\" ACID\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_1-原子性-atomicity\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-原子性-atomicity\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#_1-%E5%8E%9F%E5%AD%90%E6%80%A7-atomicity\"}},[t._v(\"#\")]),t._v(\" 1. 原子性(Atomicity)\")]),t._v(\" \"),e(\"p\",[t._v(\"事务被视为不可分割的最小单元，事务的所有操作要么全部提交成功，要么全部失败回滚。\")]),t._v(\" \"),e(\"p\",[t._v(\"回滚可以用日志来实现，日志记录着事务所执行的修改操作，在回滚时反向执行这些修改操作即可。\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_2-一致性-consistency\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-一致性-consistency\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#_2-%E4%B8%80%E8%87%B4%E6%80%A7-consistency\"}},[t._v(\"#\")]),t._v(\" 2. 一致性(Consistency)\")]),t._v(\" \"),e(\"p\",[t._v(\"数据库在事务执行前后都保持一致性状态。在一致性状态下，所有事务对一个数据的读取结果都是相同的。\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_3-隔离性-isolation\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-隔离性-isolation\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#_3-%E9%9A%94%E7%A6%BB%E6%80%A7-isolation\"}},[t._v(\"#\")]),t._v(\" 3. 隔离性(Isolation)\")]),t._v(\" \"),e(\"p\",[t._v(\"一个事务所做的修改在最终提交以前，对其它事务是不可见的。\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_4-持久性-durability\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-持久性-durability\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#_4-%E6%8C%81%E4%B9%85%E6%80%A7-durability\"}},[t._v(\"#\")]),t._v(\" 4. 持久性(Durability)\")]),t._v(\" \"),e(\"p\",[t._v(\"一旦事务提交，则其所做的修改将会永远保存到数据库中。即使系统发生崩溃，事务执行的结果也不能丢失。\")]),t._v(\" \"),e(\"p\",[t._v(\"可以通过数据库备份和恢复来实现，在系统发生崩溃时，使用备份的数据库进行数据恢复。\")]),t._v(\" \"),e(\"hr\"),t._v(\" \"),e(\"p\",[t._v(\"事务的 ACID 特性概念简单，但不是很好理解，主要是因为这几个特性不是一种平级关系:\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"只有满足一致性，事务的执行结果才是正确的。\")]),t._v(\" \"),e(\"li\",[t._v(\"在无并发的情况下，事务串行执行，隔离性一定能够满足。此时只要能满足原子性，就一定能满足一致性。\")]),t._v(\" \"),e(\"li\",[t._v(\"在并发的情况下，多个事务并行执行，事务不仅要满足原子性，还需要满足隔离性，才能满足一致性。\")]),t._v(\" \"),e(\"li\",[t._v(\"事务满足持久化是为了能应对数据库崩溃的情况。\")])]),t._v(\" \"),e(\"hr\"),t._v(\" \"),e(\"h2\",{attrs:{id:\"二、并发一致性问题\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、并发一致性问题\"}},[t._v(\"#\")]),t._v(\" 二、并发一致性问题\")]),t._v(\" \"),e(\"p\",[t._v(\"在并发环境下，事务的隔离性很难保证，因此会出现很多并发一致性问题。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"丢失修改\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#丢失修改\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E4%B8%A2%E5%A4%B1%E4%BF%AE%E6%94%B9\"}},[t._v(\"#\")]),t._v(\" 丢失修改\")]),t._v(\" \"),e(\"p\",[t._v(\"T1 和 T2 两个事务都对一个数据进行修改，T1 先修改，T2 随后修改，T2 的修改覆盖了 T1 的修改。\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"/Users/kkxu/NodeProjects/ifan/ifan/images/88ff46b3-028a-4dbb-a572-1f062b8b96d3.png\",alt:\"image\"}})]),t._v(\" \"),e(\"h3\",{attrs:{id:\"读脏数据\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#读脏数据\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E8%AF%BB%E8%84%8F%E6%95%B0%E6%8D%AE\"}},[t._v(\"#\")]),t._v(\" 读脏数据\")]),t._v(\" \"),e(\"p\",[t._v(\"T1 修改一个数据，T2 随后读取这个数据。如果 T1 撤销了这次修改，那么 T2 读取的数据是脏数据。\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"/Users/kkxu/NodeProjects/ifan/ifan/images/dd782132-d830-4c55-9884-cfac0a541b8e.png\",alt:\"image\"}})]),t._v(\" \"),e(\"h3\",{attrs:{id:\"不可重复读\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#不可重复读\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB\"}},[t._v(\"#\")]),t._v(\" 不可重复读\")]),t._v(\" \"),e(\"p\",[t._v(\"T2 读取一个数据，T1 对该数据做了修改。如果 T2 再次读取这个数据，此时读取的结果和第一次读取的结果不同。\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"/Users/kkxu/NodeProjects/ifan/ifan/images/c8d18ca9-0b09-441a-9a0c-fb063630d708.png\",alt:\"image\"}})]),t._v(\" \"),e(\"h3\",{attrs:{id:\"幻读\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#幻读\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E5%B9%BB%E5%BD%B1%E8%AF%BB\"}},[t._v(\"#\")]),t._v(\" 幻读\")]),t._v(\" \"),e(\"p\",[t._v(\"T1 读取某个范围的数据，T2 在这个范围内插入新的数据，T1 再次读取这个范围的数据，此时读取的结果和和第一次读取的结果不同。\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"/Users/kkxu/NodeProjects/ifan/ifan/images/72fe492e-f1cb-4cfc-92f8-412fb3ae6fec.png\",alt:\"image\"}})]),t._v(\" \"),e(\"hr\"),t._v(\" \"),e(\"p\",[t._v(\"产生并发不一致性问题主要原因是破坏了事务的隔离性，解决方法是通过并发控制来保证隔离性。并发控制可以通过封锁来实现，但是封锁操作需要用户自己控制，相当复杂。数据库管理系统提供了事务的隔离级别，让用户以一种更轻松的方式处理并发一致性问题。\")]),t._v(\" \"),e(\"hr\"),t._v(\" \"),e(\"h3\",{attrs:{id:\"封锁协议\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#封锁协议\"}},[t._v(\"#\")]),t._v(\" 封锁协议\")]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_1-三级封锁协议\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-三级封锁协议\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#_1-%E4%B8%89%E7%BA%A7%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE\"}},[t._v(\"#\")]),t._v(\" 1. 三级封锁协议\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"一级封锁协议\")])]),t._v(\" \"),e(\"p\",[t._v(\"事务 T 要修改数据 A 时必须加 X 锁，直到 T 结束才释放锁。\")]),t._v(\" \"),e(\"p\",[t._v(\"可以解决丢失修改问题，因为不能同时有两个事务对同一个数据进行修改，那么事务的修改就不会被覆盖。\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"T1\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"T2\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lock-x(A)\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}})]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"read A=20\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}})]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lock-x(A)\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"wait\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"write A=19\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"commit\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"unlock-x(A)\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"obtain\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"read A=19\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"write A=21\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"commit\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"unlock-x(A)\")])])])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"二级封锁协议\")])]),t._v(\" \"),e(\"p\",[t._v(\"在一级的基础上，要求读取数据 A 时必须加 S 锁，读取完马上释放 S 锁。\")]),t._v(\" \"),e(\"p\",[t._v(\"可以解决读脏数据问题，因为如果一个事务在对数据 A 进行修改，根据 1 级封锁协议，会加 X 锁，那么就不能再加 S 锁了，也就是不会读入数据。\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"T1\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"T2\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lock-x(A)\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}})]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"read A=20\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}})]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"write A=19\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}})]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lock-s(A)\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"wait\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"rollback\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"A=20\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"unlock-x(A)\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"obtain\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"read A=20\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"commit\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"unlock-s(A)\")])])])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"三级封锁协议\")])]),t._v(\" \"),e(\"p\",[t._v(\"在二级的基础上，要求读取数据 A 时必须加 S 锁，直到事务结束了才能释放 S 锁。\")]),t._v(\" \"),e(\"p\",[t._v(\"可以解决不可重复读的问题，因为读 A 时，其它事务不能对 A 加 X 锁，从而避免了在读的期间数据发生改变。\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"T1\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"T2\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lock-s(A)\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}})]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"read A=20\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}})]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"lock-x(A)\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"wait\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"read A=20\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"commit\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"unlock-s(A)\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\".\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"obtain\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"read A=20\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"write A=19\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"commit\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}}),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"unlock-X(A)\")])])])]),t._v(\" \"),e(\"hr\"),t._v(\" \"),e(\"h2\",{attrs:{id:\"四、隔离级别\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、隔离级别\"}},[t._v(\"#\")]),t._v(\" 四、隔离级别\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"读未提交-read-uncommitted\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#读未提交-read-uncommitted\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E6%9C%AA%E6%8F%90%E4%BA%A4%E8%AF%BB-read-uncommitted\"}},[t._v(\"#\")]),t._v(\" 读未提交(READ UNCOMMITTED)\")]),t._v(\" \"),e(\"p\",[t._v(\"事务中的修改，即使没有提交，对其它事务也是可见的。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"提交读-read-committed\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#提交读-read-committed\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E6%8F%90%E4%BA%A4%E8%AF%BB-read-committed\"}},[t._v(\"#\")]),t._v(\" 提交读(READ COMMITTED)\")]),t._v(\" \"),e(\"p\",[t._v(\"一个事务只能读取已经提交的事务所做的修改。换句话说，一个事务所做的修改在提交之前对其它事务是不可见的。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"可重复读-repeatable-read\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#可重复读-repeatable-read\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB-repeatable-read\"}},[t._v(\"#\")]),t._v(\" 可重复读(REPEATABLE READ)\")]),t._v(\" \"),e(\"p\",[t._v(\"保证在同一个事务中多次读取同样数据的结果是一样的。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"可串行化-serializable\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#可串行化-serializable\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E5%8F%AF%E4%B8%B2%E8%A1%8C%E5%8C%96-serializable\"}},[t._v(\"#\")]),t._v(\" 可串行化(SERIALIZABLE)\")]),t._v(\" \"),e(\"p\",[t._v(\"强制事务串行执行。\")]),t._v(\" \"),e(\"hr\"),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"隔离级别\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"脏读\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"不可重复读\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"幻影读\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"未提交读\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"√\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"√\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"√\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"提交读\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"×\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"√\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"√\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"可重复读\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"×\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"×\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"√\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"可串行化\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"×\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"×\")]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"×\")])])])]),t._v(\" \"),e(\"hr\"),t._v(\" \"),e(\"h2\",{attrs:{id:\"五、多版本并发控制\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#五、多版本并发控制\"}},[t._v(\"#\")]),t._v(\" 五、多版本并发控制\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"多版本并发控制(Multi-Version Concurrency Control, MVCC)是 MySQL 的 InnoDB 存储引擎实现隔离级别的一种具体方式，用于实现提交读和可重复读这两种隔离级别。而未提交读隔离级别总是读取最新的数据行，无需使用 MVCC。可串行化隔离级别需要对所有读取的行都加锁，单纯使用 MVCC 无法实现。\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"版本号\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#版本号\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E7%89%88%E6%9C%AC%E5%8F%B7\"}},[t._v(\"#\")]),t._v(\" 版本号\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"系统版本号: 是一个递增的数字，每开始一个新的事务，系统版本号就会自动递增。\")]),t._v(\" \"),e(\"li\",[t._v(\"事务版本号: 事务开始时的系统版本号。\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"隐藏的列\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#隐藏的列\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"#%E9%9A%90%E8%97%8F%E7%9A%84%E5%88%97\"}},[t._v(\"#\")]),t._v(\" 隐藏的列\")]),t._v(\" \"),e(\"p\",[t._v(\"MVCC 在每行记录后面都保存着两个隐藏的列，用来存储两个版本号:\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"创建版本号: 指示创建一个数据行的快照时的系统版本号；\")]),t._v(\" \"),e(\"li\",[t._v(\"删除版本号: 如果该快照的删除版本号大于当前事务版本号表示该快照有效，否则表示该快照已经被删除了。\")])]),t._v(\" \"),e(\"hr\")])}),[],!1,null,null,null);e.default=v.exports}}]);","extractedComments":[]}