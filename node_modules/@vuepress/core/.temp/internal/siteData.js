/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "Notes",
  "description": "办法总比问题多",
  "base": "/ifan/",
  "headTags": [],
  "pages": [
    {
      "title": "JUC汇总",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/JUC.html",
      "relativePath": "Notes/JVM/JUC.md",
      "key": "v-0fdcd883",
      "path": "/Notes/JVM/JUC.html",
      "headers": [
        {
          "level": 2,
          "title": "synchronized",
          "slug": "synchronized"
        },
        {
          "level": 3,
          "title": "可重入原理：加锁次数计数器",
          "slug": "可重入原理-加锁次数计数器"
        },
        {
          "level": 3,
          "title": "自旋锁与自适应自旋锁",
          "slug": "自旋锁与自适应自旋锁"
        },
        {
          "level": 3,
          "title": "锁的优缺点对比",
          "slug": "锁的优缺点对比"
        },
        {
          "level": 3,
          "title": "Synchronized与Lock",
          "slug": "synchronized与lock"
        },
        {
          "level": 3,
          "title": "[#](#synchronized的缺陷) synchronized的缺陷",
          "slug": "synchronized的缺陷"
        },
        {
          "level": 3,
          "title": "[#](#lock解决相应问题) Lock解决相应问题",
          "slug": "lock解决相应问题"
        },
        {
          "level": 2,
          "title": "Java Lock",
          "slug": "java-lock"
        },
        {
          "level": 2,
          "title": "关键字: volatile详解",
          "slug": "关键字-volatile详解"
        },
        {
          "level": 3,
          "title": "volatile 可见性实现",
          "slug": "volatile-可见性实现"
        },
        {
          "level": 2,
          "title": "JUC原子类: CAS, Unsafe和原子类详解",
          "slug": "juc原子类-cas-unsafe和原子类详解"
        },
        {
          "level": 3,
          "title": "UnSafe类详解",
          "slug": "unsafe类详解"
        },
        {
          "level": 2,
          "title": "JUC锁: LockSupport详解",
          "slug": "juc锁-locksupport详解"
        },
        {
          "level": 3,
          "title": "Thread.sleep()和Object.wait()的区别",
          "slug": "thread-sleep-和object-wait-的区别"
        }
      ]
    },
    {
      "title": "Docker创建FTP服务器",
      "frontmatter": {},
      "regularPath": "/Notes/Docker/docker%E9%83%A8%E7%BD%B2ftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8.html",
      "relativePath": "Notes/Docker/docker部署ftp文件服务器.md",
      "key": "v-6e553bec",
      "path": "/Notes/Docker/docker%E9%83%A8%E7%BD%B2ftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8.html"
    },
    {
      "title": "ReentrantLock",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/JUC/ReentrantLock.html",
      "relativePath": "Notes/JVM/JUC/ReentrantLock.md",
      "key": "v-4c2cf1ba",
      "path": "/Notes/JVM/JUC/ReentrantLock.html"
    },
    {
      "title": "AQS",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/JUC/AQS%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "Notes/JVM/JUC/AQS详解.md",
      "key": "v-db0f7c58",
      "path": "/Notes/JVM/JUC/AQS%E8%AF%A6%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "AQS 核心思想",
          "slug": "aqs-核心思想"
        },
        {
          "level": 3,
          "title": "AQS 对资源的共享方式",
          "slug": "aqs-对资源的共享方式"
        }
      ]
    },
    {
      "title": "JVM相关",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/JVM%E7%9B%B8%E5%85%B3.html",
      "relativePath": "Notes/JVM/JVM相关.md",
      "key": "v-1a9914ce",
      "path": "/Notes/JVM/JVM%E7%9B%B8%E5%85%B3.html"
    },
    {
      "title": "并发编程",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/JUC/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B.html",
      "relativePath": "Notes/JVM/JUC/并发编程.md",
      "key": "v-b29aead6",
      "path": "/Notes/JVM/JUC/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B.html",
      "headers": [
        {
          "level": 2,
          "title": "serialVersionUID号有何用？",
          "slug": "serialversionuid号有何用"
        }
      ]
    },
    {
      "title": "IO知识体系",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Java%20IO/Java%20IO%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.html",
      "relativePath": "Notes/JVM/Java IO/Java IO知识体系.md",
      "key": "v-4d2616f9",
      "path": "/Notes/JVM/Java%20IO/Java%20IO%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.html"
    },
    {
      "title": "字节流和字符流的区别",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Java%20IO/Java%20IO%E5%88%86%E7%B1%BB.html",
      "relativePath": "Notes/JVM/Java IO/Java IO分类.md",
      "key": "v-6cd4cd1d",
      "path": "/Notes/JVM/Java%20IO/Java%20IO%E5%88%86%E7%B1%BB.html",
      "headers": [
        {
          "level": 3,
          "title": "字节流和字符流的区别",
          "slug": "字节流和字符流的区别"
        }
      ]
    },
    {
      "title": "Java 基础 - 注解机制详解",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Java%E6%B3%A8%E8%A7%A3.html",
      "relativePath": "Notes/JVM/Java注解.md",
      "key": "v-39357d20",
      "path": "/Notes/JVM/Java%E6%B3%A8%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "注解与反射接口",
          "slug": "注解与反射接口"
        },
        {
          "level": 3,
          "title": "注解支持继承吗？",
          "slug": "注解支持继承吗"
        },
        {
          "level": 3,
          "title": "注解实现的原理",
          "slug": "注解实现的原理"
        },
        {
          "level": 3,
          "title": "注解的应用场景",
          "slug": "注解的应用场景"
        },
        {
          "level": 3,
          "title": "配置化到注解化 - 框架的演进",
          "slug": "配置化到注解化-框架的演进"
        },
        {
          "level": 3,
          "title": "继承实现到注解实现-junit3到junit4",
          "slug": "继承实现到注解实现-junit3到junit4"
        },
        {
          "level": 3,
          "title": "自定义注解和AOP - 通过切面实现解耦",
          "slug": "自定义注解和aop-通过切面实现解耦"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/AOP%E6%BA%90%E7%A0%81.html",
      "relativePath": "Notes/JVM/Spring/AOP源码.md",
      "key": "v-d84a051a",
      "path": "/Notes/JVM/Spring/AOP%E6%BA%90%E7%A0%81.html",
      "headers": [
        {
          "level": 2,
          "title": "IOC 容器管理 AOP 实例",
          "slug": "ioc-容器管理-aop-实例"
        }
      ]
    },
    {
      "title": "AOP",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/AOP%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "Notes/JVM/Spring/AOP详解.md",
      "key": "v-895f3c24",
      "path": "/Notes/JVM/Spring/AOP%E8%AF%A6%E8%A7%A3.html",
      "headers": [
        {
          "level": 2,
          "title": "AOP",
          "slug": "aop"
        },
        {
          "level": 2,
          "title": "@annotation",
          "slug": "annotation"
        },
        {
          "level": 2,
          "title": "1. @Before前置通知",
          "slug": "_1-before前置通知"
        },
        {
          "level": 2,
          "title": "2. @After后置通知",
          "slug": "_2-after后置通知"
        },
        {
          "level": 2,
          "title": "3. @AfterRunning返回通知",
          "slug": "_3-afterrunning返回通知"
        },
        {
          "level": 2,
          "title": "4. @AfterThrowing异常通知",
          "slug": "_4-afterthrowing异常通知"
        },
        {
          "level": 2,
          "title": "5. @Around环绕通知",
          "slug": "_5-around环绕通知"
        }
      ]
    },
    {
      "title": "BeanFactory 简介",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/BeanFactory.html",
      "relativePath": "Notes/JVM/Spring/BeanFactory.md",
      "key": "v-73399447",
      "path": "/Notes/JVM/Spring/BeanFactory.html",
      "headers": [
        {
          "level": 2,
          "title": "BeanFactory 简介",
          "slug": "beanfactory-简介"
        },
        {
          "level": 2,
          "title": "启动过程分析",
          "slug": "启动过程分析"
        }
      ]
    },
    {
      "title": "服务提供接口",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Java%E5%B8%B8%E7%94%A8%E6%9C%BA%E5%88%B6-SPI%E6%9C%BA%E5%88%B6.html",
      "relativePath": "Notes/JVM/Java常用机制-SPI机制.md",
      "key": "v-2ab96f5a",
      "path": "/Notes/JVM/Java%E5%B8%B8%E7%94%A8%E6%9C%BA%E5%88%B6-SPI%E6%9C%BA%E5%88%B6.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是SPI机制",
          "slug": "什么是spi机制"
        },
        {
          "level": 2,
          "title": "SPI机制的广泛应用",
          "slug": "spi机制的广泛应用"
        },
        {
          "level": 3,
          "title": "[#](#spi机制-jdbc-drivermanager) SPI机制 - JDBC DriverManager",
          "slug": "spi机制-jdbc-drivermanager"
        },
        {
          "level": 3,
          "title": "SPI机制通常怎么使用",
          "slug": "spi机制通常怎么使用"
        },
        {
          "level": 3,
          "title": "SPI机制的缺陷",
          "slug": "spi机制的缺陷"
        }
      ]
    },
    {
      "title": "Java基础",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Java%E5%9F%BA%E7%A1%80.html",
      "relativePath": "Notes/JVM/Java基础.md",
      "key": "v-fa76a2d6",
      "path": "/Notes/JVM/Java%E5%9F%BA%E7%A1%80.html",
      "headers": [
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "Spring基础 - Spring核心之控制反转(IOC)",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/Spring%E5%9F%BA%E7%A1%80%20-%20Spring%E6%A0%B8%E5%BF%83%E4%B9%8B%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC(IOC).html",
      "relativePath": "Notes/JVM/Spring/Spring基础 - Spring核心之控制反转(IOC).md",
      "key": "v-e96217cc",
      "path": "/Notes/JVM/Spring/Spring%E5%9F%BA%E7%A1%80%20-%20Spring%E6%A0%B8%E5%BF%83%E4%B9%8B%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC(IOC).html",
      "headers": [
        {
          "level": 3,
          "title": "Spring Bean是什么",
          "slug": "spring-bean是什么"
        },
        {
          "level": 3,
          "title": "IoC是什么",
          "slug": "ioc是什么"
        },
        {
          "level": 3,
          "title": "IoC和DI是什么关系（控制反转与依赖注入）",
          "slug": "ioc和di是什么关系-控制反转与依赖注入"
        },
        {
          "level": 2,
          "title": "Ioc 配置的三种方式",
          "slug": "ioc-配置的三种方式"
        },
        {
          "level": 3,
          "title": "xml 配置",
          "slug": "xml-配置"
        },
        {
          "level": 3,
          "title": "Java 配置",
          "slug": "java-配置"
        },
        {
          "level": 3,
          "title": "[#](#注解配置) 注解配置",
          "slug": "注解配置"
        },
        {
          "level": 3,
          "title": "@Autowired和@Resource以及@Inject等注解注入有何区别？",
          "slug": "autowired和-resource以及-inject等注解注入有何区别"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/IOC%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "Notes/JVM/Spring/IOC详解.md",
      "key": "v-272e1cf8",
      "path": "/Notes/JVM/Spring/IOC%E8%AF%A6%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "配置是否允许 Bean 覆盖、是否允许循环依赖",
          "slug": "配置是否允许-bean-覆盖、是否允许循环依赖"
        }
      ]
    },
    {
      "title": "SpringMVC基础",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/Spring%E5%9F%BA%E7%A1%80%20-%20SpringMVC%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B%E5%92%8C%E6%A1%88%E4%BE%8B.html",
      "relativePath": "Notes/JVM/Spring/Spring基础 - SpringMVC请求流程和案例.md",
      "key": "v-c53ab3dc",
      "path": "/Notes/JVM/Spring/Spring%E5%9F%BA%E7%A1%80%20-%20SpringMVC%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B%E5%92%8C%E6%A1%88%E4%BE%8B.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是MVC",
          "slug": "什么是mvc"
        },
        {
          "level": 2,
          "title": "什么是Spring MVC",
          "slug": "什么是spring-mvc"
        },
        {
          "level": 2,
          "title": "Spring MVC的请求流程",
          "slug": "spring-mvc的请求流程"
        },
        {
          "level": 3,
          "title": "[#](#核心架构的具体流程步骤) 核心架构的具体流程步骤",
          "slug": "核心架构的具体流程步骤"
        }
      ]
    },
    {
      "title": "Spring基础 - Spring核心之面向切面编程(AOP)",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/Spring%E5%9F%BA%E7%A1%80%20-%20Spring%E6%A0%B8%E5%BF%83%E4%B9%8B%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B(AOP).html",
      "relativePath": "Notes/JVM/Spring/Spring基础 - Spring核心之面向切面编程(AOP).md",
      "key": "v-36843d42",
      "path": "/Notes/JVM/Spring/Spring%E5%9F%BA%E7%A1%80%20-%20Spring%E6%A0%B8%E5%BF%83%E4%B9%8B%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B(AOP).html",
      "headers": [
        {
          "level": 2,
          "title": "如何理解AOP",
          "slug": "如何理解aop"
        },
        {
          "level": 3,
          "title": "[#](https://pdai.tech/md/spring/spring-x-framework-aop.html#aop是什么)AOP是什么",
          "slug": "aop是什么"
        },
        {
          "level": 3,
          "title": "AOP术语",
          "slug": "aop术语"
        },
        {
          "level": 3,
          "title": "Spring AOP和AspectJ是什么关系",
          "slug": "spring-aop和aspectj是什么关系"
        },
        {
          "level": 3,
          "title": "AspectJ注解方式",
          "slug": "aspectj注解方式"
        },
        {
          "level": 3,
          "title": "切入点（pointcut）的申明规则?",
          "slug": "切入点-pointcut-的申明规则"
        },
        {
          "level": 3,
          "title": "Spring AOP 和 AspectJ 之间的关键区别？",
          "slug": "spring-aop-和-aspectj-之间的关键区别"
        },
        {
          "level": 3,
          "title": "Spring AOP还是完全用AspectJ？",
          "slug": "spring-aop还是完全用aspectj"
        }
      ]
    },
    {
      "title": "Spring进阶- Spring IOC实现原理详解之IOC体系结构设计",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/Spring%E8%BF%9B%E9%98%B6-IOC%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1.html",
      "relativePath": "Notes/JVM/Spring/Spring进阶-IOC体系结构设计.md",
      "key": "v-53f327a6",
      "path": "/Notes/JVM/Spring/Spring%E8%BF%9B%E9%98%B6-IOC%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1.html",
      "headers": [
        {
          "level": 3,
          "title": "ApplicationContext：IOC接口设计和实现",
          "slug": "applicationcontext-ioc接口设计和实现"
        },
        {
          "level": 3,
          "title": "初始化的主体流程",
          "slug": "初始化的主体流程"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "BeanFactory中getBean的主体思路",
          "slug": "beanfactory中getbean的主体思路"
        },
        {
          "level": 3,
          "title": "[#](#初步的思考) 初步的思考",
          "slug": "初步的思考"
        },
        {
          "level": 2,
          "title": "重点：Spring如何解决循环依赖问题",
          "slug": "重点-spring如何解决循环依赖问题"
        },
        {
          "level": 3,
          "title": "[#](#spring单例模式下的属性依赖) Spring单例模式下的属性依赖",
          "slug": "spring单例模式下的属性依赖"
        },
        {
          "level": 3,
          "title": "Spring为何不能解决非单例属性之外的循环依赖？",
          "slug": "spring为何不能解决非单例属性之外的循环依赖"
        },
        {
          "level": 3,
          "title": "那么其它循环依赖如何解决？",
          "slug": "那么其它循环依赖如何解决"
        },
        {
          "level": 2,
          "title": "重点：Spring中Bean的生命周期",
          "slug": "重点-spring中bean的生命周期"
        },
        {
          "level": 3,
          "title": "[#](#spring-bean生命周期流程) Spring Bean生命周期流程",
          "slug": "spring-bean生命周期流程"
        },
        {
          "level": 3,
          "title": "Spring Bean生命周期案例",
          "slug": "spring-bean生命周期案例"
        }
      ]
    },
    {
      "title": "Spring进阶 - Spring AOP实现原理详解之AOP切面的实现",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/Spring%E8%BF%9B%E9%98%B6-Spring%20AOP%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%B9%8BAOP%E5%88%87%E9%9D%A2%E5%AE%9E%E7%8E%B0.html",
      "relativePath": "Notes/JVM/Spring/Spring进阶-Spring AOP实现原理之AOP切面实现.md",
      "key": "v-099dd9ca",
      "path": "/Notes/JVM/Spring/Spring%E8%BF%9B%E9%98%B6-Spring%20AOP%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%B9%8BAOP%E5%88%87%E9%9D%A2%E5%AE%9E%E7%8E%B0.html"
    },
    {
      "title": "Java集合",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Java%E9%9B%86%E5%90%88.html",
      "relativePath": "Notes/JVM/Java集合.md",
      "key": "v-6dcf47e1",
      "path": "/Notes/JVM/Java%E9%9B%86%E5%90%88.html"
    },
    {
      "title": "Spring框架知识体系",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/Spring/Spring%E6%A1%86%E6%9E%B6%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.html",
      "relativePath": "Notes/JVM/Spring/Spring框架知识体系.md",
      "key": "v-5b2fe655",
      "path": "/Notes/JVM/Spring/Spring%E6%A1%86%E6%9E%B6%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.html",
      "headers": [
        {
          "level": 3,
          "title": "Spring基础 - Spring和Spring框架组成",
          "slug": "spring基础-spring和spring框架组成"
        },
        {
          "level": 3,
          "title": "Spring的特性和优势",
          "slug": "spring的特性和优势"
        },
        {
          "level": 3,
          "title": "面向切面 - AOP",
          "slug": "面向切面-aop"
        },
        {
          "level": 2,
          "title": "Spring框架设计如何逐步简化开发的",
          "slug": "spring框架设计如何逐步简化开发的"
        },
        {
          "level": 3,
          "title": "[#](#java-配置方式改造) Java 配置方式改造",
          "slug": "java-配置方式改造"
        },
        {
          "level": 3,
          "title": "[#](#注解配置方式改造) 注解配置方式改造",
          "slug": "注解配置方式改造"
        },
        {
          "level": 3,
          "title": "[#](#springboot托管配置) SpringBoot托管配置",
          "slug": "springboot托管配置"
        }
      ]
    },
    {
      "title": "SpringBoot入门 - 配置热部署devtools工具",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E5%85%A5%E9%97%A8-%E9%85%8D%E7%BD%AE%E7%83%AD%E9%83%A8%E7%BD%B2devtools.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot入门-配置热部署devtools.md",
      "key": "v-1c188cd0",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E5%85%A5%E9%97%A8-%E9%85%8D%E7%BD%AE%E7%83%AD%E9%83%A8%E7%BD%B2devtools.html",
      "headers": [
        {
          "level": 3,
          "title": "什么是热部署和热加载？",
          "slug": "什么是热部署和热加载"
        },
        {
          "level": 3,
          "title": "devtool的原理？为何会自动重启？",
          "slug": "devtool的原理-为何会自动重启"
        },
        {
          "level": 3,
          "title": "devtool是否会被打包进Jar？",
          "slug": "devtool是否会被打包进jar"
        },
        {
          "level": 3,
          "title": "devtool为何会默认禁用缓存选项？",
          "slug": "devtool为何会默认禁用缓存选项"
        }
      ]
    },
    {
      "title": "SpringBoot的特点",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot.md",
      "key": "v-5dd45b3a",
      "path": "/Notes/JVM/SpringBoot/SpringBoot.html",
      "headers": [
        {
          "level": 3,
          "title": "SpringBoot的特点",
          "slug": "springboot的特点"
        },
        {
          "level": 3,
          "title": "[#](#springboot的核心功能) SpringBoot的核心功能",
          "slug": "springboot的核心功能"
        },
        {
          "level": 3,
          "title": "什么是JPA，和JDBC是什么关系",
          "slug": "什么是jpa-和jdbc是什么关系"
        },
        {
          "level": 2,
          "title": "日志框架的基础",
          "slug": "日志框架的基础"
        },
        {
          "level": 3,
          "title": "[#](#关于日志框架-日志门面) 关于日志框架（日志门面）",
          "slug": "关于日志框架-日志门面"
        },
        {
          "level": 2,
          "title": "日志库之日志系统",
          "slug": "日志库之日志系统"
        },
        {
          "level": 3,
          "title": "[#](#java-util-logging-jul) java.util.logging (JUL)",
          "slug": "java-util-logging-jul"
        },
        {
          "level": 3,
          "title": "[#](#log4j) Log4j",
          "slug": "log4j"
        },
        {
          "level": 3,
          "title": "[#](#logback) Logback",
          "slug": "logback"
        },
        {
          "level": 3,
          "title": "[#](#log4j2) Log4j2",
          "slug": "log4j2"
        },
        {
          "level": 2,
          "title": "日志库之日志门面",
          "slug": "日志库之日志门面"
        },
        {
          "level": 3,
          "title": "[#](#common-logging) common-logging",
          "slug": "common-logging"
        },
        {
          "level": 3,
          "title": "slf4j",
          "slug": "slf4j"
        },
        {
          "level": 2,
          "title": "日志库使用方案",
          "slug": "日志库使用方案"
        },
        {
          "level": 3,
          "title": "日志库jar包",
          "slug": "日志库jar包"
        },
        {
          "level": 3,
          "title": "日志库API - 针对于日志门面",
          "slug": "日志库api-针对于日志门面"
        },
        {
          "level": 3,
          "title": "对日志架构使用比较好的实践",
          "slug": "对日志架构使用比较好的实践"
        }
      ]
    },
    {
      "title": "SpringBoot入门 - 开发中还有哪些常用注解",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot常用注解.md",
      "key": "v-7a5e3b98",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](#spring-boot-常用注解) Spring Boot 常用注解",
          "slug": "spring-boot-常用注解"
        },
        {
          "level": 3,
          "title": "[#](#springbootapplication) @SpringBootApplication",
          "slug": "springbootapplication"
        },
        {
          "level": 3,
          "title": "[#](#enableautoconfiguration) @EnableAutoConfiguration",
          "slug": "enableautoconfiguration"
        },
        {
          "level": 3,
          "title": "[#](#importresource) @ImportResource",
          "slug": "importresource"
        },
        {
          "level": 3,
          "title": "[#](#value) @Value",
          "slug": "value"
        },
        {
          "level": 3,
          "title": "[#](#configurationproperties-prefix-person) @ConfigurationProperties(prefix=\"person\")",
          "slug": "configurationproperties-prefix-person"
        },
        {
          "level": 3,
          "title": "[#](#enableconfigurationproperties) @EnableConfigurationProperties",
          "slug": "enableconfigurationproperties"
        },
        {
          "level": 3,
          "title": "[#](#restcontroller) @RestController",
          "slug": "restcontroller"
        },
        {
          "level": 3,
          "title": "[#](#requestmapping-api2-copper) @RequestMapping(\"/api2/copper\")",
          "slug": "requestmapping-api2-copper"
        },
        {
          "level": 3,
          "title": "[#](#requestparam) @RequestParam",
          "slug": "requestparam"
        },
        {
          "level": 3,
          "title": "[#](#responsebody) @ResponseBody",
          "slug": "responsebody"
        },
        {
          "level": 3,
          "title": "[#](#bean) @Bean",
          "slug": "bean"
        },
        {
          "level": 3,
          "title": "[#](#service) @Service",
          "slug": "service"
        },
        {
          "level": 3,
          "title": "[#](#controller) @Controller",
          "slug": "controller"
        },
        {
          "level": 3,
          "title": "[#](#repository) @Repository",
          "slug": "repository"
        },
        {
          "level": 3,
          "title": "[#](#component) @Component",
          "slug": "component"
        },
        {
          "level": 3,
          "title": "[#](#postconstruct) @PostConstruct",
          "slug": "postconstruct"
        },
        {
          "level": 3,
          "title": "[#](#pathvariable) @PathVariable",
          "slug": "pathvariable"
        },
        {
          "level": 3,
          "title": "[#](#componentscan) @ComponentScan",
          "slug": "componentscan"
        },
        {
          "level": 3,
          "title": "[#](#enablezuulproxy) @EnableZuulProxy",
          "slug": "enablezuulproxy"
        },
        {
          "level": 3,
          "title": "[#](#autowired) @Autowired",
          "slug": "autowired"
        },
        {
          "level": 3,
          "title": "[#](#configuration) @Configuration",
          "slug": "configuration"
        },
        {
          "level": 3,
          "title": "[#](#import-config1-class) @Import(Config1.class)",
          "slug": "import-config1-class"
        },
        {
          "level": 3,
          "title": "[#](#order) @Order",
          "slug": "order"
        },
        {
          "level": 3,
          "title": "[#](#conditionalonexpression) @ConditionalOnExpression",
          "slug": "conditionalonexpression"
        },
        {
          "level": 3,
          "title": "[#](#conditionalonproperty) @ConditionalOnProperty",
          "slug": "conditionalonproperty"
        },
        {
          "level": 3,
          "title": "[#](#conditionalonclass) @ConditionalOnClass",
          "slug": "conditionalonclass"
        },
        {
          "level": 3,
          "title": "[#](#conditionalonmisssingclass-applicationmanager-class) @ConditionalOnMisssingClass({ApplicationManager.class})",
          "slug": "conditionalonmisssingclass-applicationmanager-class"
        },
        {
          "level": 3,
          "title": "[#](#conditiononmissingbean-name-example) @ConditionOnMissingBean(name = \"example\")",
          "slug": "conditiononmissingbean-name-example"
        }
      ]
    },
    {
      "title": "SpringBoot应用部署 - 打包成jar部署",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%20-%20%E6%89%93%E5%8C%85%E6%88%90jar%E9%83%A8%E7%BD%B2.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot应用部署 - 打包成jar部署.md",
      "key": "v-7e49143c",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%20-%20%E6%89%93%E5%8C%85%E6%88%90jar%E9%83%A8%E7%BD%B2.html"
    },
    {
      "title": "SpringBoot接口 - 如何保证接口幂等",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%8E%A5%E5%8F%A3%E5%B9%82%E7%AD%89.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot接口 - 如何保证接口幂等.md",
      "key": "v-070d0d29",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%8E%A5%E5%8F%A3%E5%B9%82%E7%AD%89.html",
      "headers": [
        {
          "level": 2,
          "title": "准备知识点",
          "slug": "准备知识点"
        },
        {
          "level": 3,
          "title": "[#](#什么是幂等) 什么是幂等？",
          "slug": "什么是幂等"
        },
        {
          "level": 3,
          "title": "[#](#什么是接口幂等) 什么是接口幂等？",
          "slug": "什么是接口幂等"
        },
        {
          "level": 2,
          "title": "常见的保证幂等的方式？",
          "slug": "常见的保证幂等的方式"
        },
        {
          "level": 3,
          "title": "[#](#数据库层面) 数据库层面",
          "slug": "数据库层面"
        },
        {
          "level": 3,
          "title": "[#](#分布式锁) 分布式锁",
          "slug": "分布式锁"
        }
      ]
    },
    {
      "title": "SpringBoot接口 - 如何实现接口限流之分布式",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot接口 - 如何实现接口限流之分布式.md",
      "key": "v-d417f746",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F.html",
      "headers": [
        {
          "level": 2,
          "title": "准备知识点",
          "slug": "准备知识点"
        },
        {
          "level": 2,
          "title": "[#](#实现思路之redis-lua封装) 实现思路之redis+lua封装",
          "slug": "实现思路之redis-lua封装"
        },
        {
          "level": 3,
          "title": "[#](#使用场景-为什么有些分布式场景下-还会在代码层进行控制限流) 使用场景：为什么有些分布式场景下，还会在代码层进行控制限流？",
          "slug": "使用场景-为什么有些分布式场景下-还会在代码层进行控制限流"
        },
        {
          "level": 3,
          "title": "[#](#源代码的要点) 源代码的要点",
          "slug": "源代码的要点"
        }
      ]
    },
    {
      "title": "SpringBoot应用部署 - 使用Docker Compose对容器编排管理",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%20-%20%E4%BD%BF%E7%94%A8Docker%20Compose%E5%AF%B9%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%AE%A1%E7%90%86.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot应用部署 - 使用Docker Compose对容器编排管理.md",
      "key": "v-03c62a4c",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%20-%20%E4%BD%BF%E7%94%A8Docker%20Compose%E5%AF%B9%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%AE%A1%E7%90%86.html",
      "headers": [
        {
          "level": 2,
          "title": "Docker Compose编排管理",
          "slug": "docker-compose编排管理"
        },
        {
          "level": 3,
          "title": "[#](#springboot应用准备) SpringBoot应用准备",
          "slug": "springboot应用准备"
        },
        {
          "level": 3,
          "title": "[#](#dockercompose编排DockerCompose编排",
          "slug": "dockercompose编排dockercompose编排"
        },
        {
          "level": 3,
          "title": "[#](#测试和校验) 测试和校验",
          "slug": "测试和校验"
        }
      ]
    },
    {
      "title": "SpringBoot接口 - 如何实现接口限流之单实例",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81%E4%B9%8B%E5%8D%95%E5%AE%9E%E4%BE%8B.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot接口 - 如何实现接口限流之单实例.md",
      "key": "v-c7ce97b6",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81%E4%B9%8B%E5%8D%95%E5%AE%9E%E4%BE%8B.html",
      "headers": [
        {
          "level": 3,
          "title": "为什么要限流",
          "slug": "为什么要限流"
        },
        {
          "level": 3,
          "title": "[#](#限流有哪些常见思路) 限流有哪些常见思路？",
          "slug": "限流有哪些常见思路"
        },
        {
          "level": 2,
          "title": "[#](#实现思路) 实现思路",
          "slug": "实现思路"
        }
      ]
    },
    {
      "title": "SpringBoot接口 - 如何对接口进行签名",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E5%AF%B9%E6%8E%A5%E5%8F%A3%E8%BF%9B%E8%A1%8C%E7%AD%BE%E5%90%8D.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot接口 - 如何对接口进行签名.md",
      "key": "v-4e467657",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E5%AF%B9%E6%8E%A5%E5%8F%A3%E8%BF%9B%E8%A1%8C%E7%AD%BE%E5%90%8D.html",
      "headers": [
        {
          "level": 3,
          "title": "API接口有哪些不安全的因素？",
          "slug": "api接口有哪些不安全的因素"
        },
        {
          "level": 2,
          "title": "[#](#常见的保证接口安全的方式) 常见的保证接口安全的方式？",
          "slug": "常见的保证接口安全的方式"
        },
        {
          "level": 3,
          "title": "[#](#accesskey-secretkey) AccessKey&SecretKey",
          "slug": "accesskey-secretkey"
        },
        {
          "level": 3,
          "title": "[#](#认证和授权) 认证和授权",
          "slug": "认证和授权"
        },
        {
          "level": 3,
          "title": "[#](#https) https",
          "slug": "https"
        },
        {
          "level": 3,
          "title": "[#](#接口签名-加密) 接口签名（加密）",
          "slug": "接口签名-加密"
        },
        {
          "level": 2,
          "title": "",
          "slug": ""
        }
      ]
    },
    {
      "title": "SpringBoot接口 - 如何提供多个版本接口",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E6%8F%90%E4%BE%9B%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E6%8E%A5%E5%8F%A3.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot接口 - 如何提供多个版本接口.md",
      "key": "v-58c6413c",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E6%8F%90%E4%BE%9B%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E6%8E%A5%E5%8F%A3.html",
      "headers": [
        {
          "level": 2,
          "title": "为什么接口会出现多个版本？",
          "slug": "为什么接口会出现多个版本"
        },
        {
          "level": 3,
          "title": "[#](#有哪些控制接口多版本的方式) 有哪些控制接口多版本的方式？",
          "slug": "有哪些控制接口多版本的方式"
        },
        {
          "level": 2,
          "title": "实现案例",
          "slug": "实现案例"
        },
        {
          "level": 3,
          "title": "[#](#自定义-apiversion注解) 自定义@ApiVersion注解",
          "slug": "自定义-apiversion注解"
        },
        {
          "level": 3,
          "title": "[#](#定义版本匹配requestcondition) 定义版本匹配RequestCondition",
          "slug": "定义版本匹配requestcondition"
        },
        {
          "level": 3,
          "title": "[#](#定义handlermapping) 定义HandlerMapping",
          "slug": "定义handlermapping"
        },
        {
          "level": 3,
          "title": "[#](#配置注册handlermapping) 配置注册HandlerMapping",
          "slug": "配置注册handlermapping"
        },
        {
          "level": 3,
          "title": "[#](#测试运行) 测试运行",
          "slug": "测试运行"
        }
      ]
    },
    {
      "title": "SpringBoot接口 - 如何统一接口封装",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E7%BB%9F%E4%B8%80%E6%8E%A5%E5%8F%A3%E5%B0%81%E8%A3%85.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot接口 - 如何统一接口封装.md",
      "key": "v-44081648",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E7%BB%9F%E4%B8%80%E6%8E%A5%E5%8F%A3%E5%B0%81%E8%A3%85.html",
      "headers": [
        {
          "level": 2,
          "title": "RESTful API接口?",
          "slug": "restful-api接口"
        },
        {
          "level": 2,
          "title": "为什么要统一封装接口",
          "slug": "为什么要统一封装接口"
        },
        {
          "level": 2,
          "title": "什么是不优雅的参数校验",
          "slug": "什么是不优雅的参数校验"
        },
        {
          "level": 2,
          "title": "实现案例",
          "slug": "实现案例"
        }
      ]
    },
    {
      "title": "SpringBoot接口 - 如何访问外部接口",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot接口 - 如何访问外部接口.md",
      "key": "v-7decef64",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3.html",
      "headers": [
        {
          "level": 2,
          "title": "什么样的场景需要访问外部接口",
          "slug": "什么样的场景需要访问外部接口"
        },
        {
          "level": 2,
          "title": "访问外部接口的常见方案",
          "slug": "访问外部接口的常见方案"
        },
        {
          "level": 3,
          "title": "[#](#方案一-采用原生的http请求) 方案一: 采用原生的Http请求",
          "slug": "方案一-采用原生的http请求"
        },
        {
          "level": 3,
          "title": "[#](#方案二-采用feign进行消费) 方案二: 采用Feign进行消费",
          "slug": "方案二-采用feign进行消费"
        },
        {
          "level": 3,
          "title": "[#](#方案三-采用resttemplate方法) 方案三: 采用RestTemplate方法",
          "slug": "方案三-采用resttemplate方法"
        },
        {
          "level": 3,
          "title": "[#](#get请求之——getforentity-uri-url-class-responsetype) Get请求之——getForEntity(URI url,Class responseType)",
          "slug": "get请求之-getforentity-uri-url-class-responsetype"
        },
        {
          "level": 2,
          "title": "[#](#进一步理解) 进一步理解",
          "slug": "进一步理解"
        },
        {
          "level": 3,
          "title": "[#](#在接口调用中需要注意什么) 在接口调用中需要注意什么?",
          "slug": "在接口调用中需要注意什么"
        }
      ]
    },
    {
      "title": "SpringBoot接口 - 如何生成接口文档之Swagger技术栈",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%E4%B9%8BSwagger%E6%8A%80%E6%9C%AF%E6%A0%88.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot接口 - 如何生成接口文档之Swagger技术栈.md",
      "key": "v-20c5fe63",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E6%8E%A5%E5%8F%A3%20-%20%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%E4%B9%8BSwagger%E6%8A%80%E6%9C%AF%E6%A0%88.html",
      "headers": [
        {
          "level": 3,
          "title": "什么是Swagger？",
          "slug": "什么是swagger"
        },
        {
          "level": 3,
          "title": "Swagger和SpringFox有啥关系？",
          "slug": "swagger和springfox有啥关系"
        },
        {
          "level": 3,
          "title": "",
          "slug": ""
        }
      ]
    },
    {
      "title": "SpringBoot集成MySQL - 基于JPA的封装",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90MySQL%20-%20%E5%9F%BA%E4%BA%8EJPA%E5%92%8CMybatis%E7%9A%84%E5%B0%81%E8%A3%85.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot集成MySQL - 基于JPA和Mybatis的封装.md",
      "key": "v-30014680",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90MySQL%20-%20%E5%9F%BA%E4%BA%8EJPA%E5%92%8CMybatis%E7%9A%84%E5%B0%81%E8%A3%85.html",
      "headers": [
        {
          "level": 3,
          "title": "什么是MyBatis？",
          "slug": "什么是mybatis"
        },
        {
          "level": 3,
          "title": "为什么说MyBatis是半自动ORM？",
          "slug": "为什么说mybatis是半自动orm"
        },
        {
          "level": 3,
          "title": "[#](#mybatis栈技术演进)",
          "slug": "mybatis栈技术演进"
        }
      ]
    },
    {
      "title": "SpringBoot集成MySQL - MyBatis-Plus基于字段隔离的多租户",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90MySQL%20-%20MyBatis-Plus%E5%9F%BA%E4%BA%8E%E5%AD%97%E6%AE%B5%E9%9A%94%E7%A6%BB%E7%9A%84%E5%A4%9A%E7%A7%9F%E6%88%B7.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot集成MySQL - MyBatis-Plus基于字段隔离的多租户.md",
      "key": "v-8c8818e6",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90MySQL%20-%20MyBatis-Plus%E5%9F%BA%E4%BA%8E%E5%AD%97%E6%AE%B5%E9%9A%94%E7%A6%BB%E7%9A%84%E5%A4%9A%E7%A7%9F%E6%88%B7.html",
      "headers": [
        {
          "level": 3,
          "title": "什么是多租户？",
          "slug": "什么是多租户"
        },
        {
          "level": 3,
          "title": "[#](#多租户在数据存储上有哪些实现方式) 多租户在数据存储上有哪些实现方式？",
          "slug": "多租户在数据存储上有哪些实现方式"
        }
      ]
    },
    {
      "title": "SpringBoot集成MySQL - 基于JPA的封装",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90MySQL%20-%20%E5%9F%BA%E4%BA%8EJPA%E7%9A%84%E5%B0%81%E8%A3%85.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot集成MySQL - 基于JPA的封装.md",
      "key": "v-2e2da85b",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90MySQL%20-%20%E5%9F%BA%E4%BA%8EJPA%E7%9A%84%E5%B0%81%E8%A3%85.html"
    },
    {
      "title": "SpringBoot集成Redis - Redis分布式锁的实现之Jedis(setNXPX+Lua)",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90Redis%20-%20Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%B9%8BJedis(setNXPX+Lua).html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot集成Redis - Redis分布式锁的实现之Jedis(setNXPX+Lua).md",
      "key": "v-5b8536a3",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90Redis%20-%20Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%B9%8BJedis(setNXPX+Lua).html",
      "headers": [
        {
          "level": 2,
          "title": "知识准备",
          "slug": "知识准备"
        },
        {
          "level": 3,
          "title": "[#](#什么是分布式锁-分布式锁有哪些实现方式) 什么是分布式锁，分布式锁有哪些实现方式？",
          "slug": "什么是分布式锁-分布式锁有哪些实现方式"
        },
        {
          "level": 3,
          "title": "[#](#redis的分布式锁有哪些实现方式) Redis的分布式锁有哪些实现方式？",
          "slug": "redis的分布式锁有哪些实现方式"
        },
        {
          "level": 2,
          "title": "[#](#实现案例) 实现案例",
          "slug": "实现案例"
        },
        {
          "level": 3,
          "title": "[#](#定义redis的分布式锁类) 定义Redis的分布式锁类",
          "slug": "定义redis的分布式锁类"
        },
        {
          "level": 3,
          "title": "[#](#定义aop拦截点) 定义AOP拦截点",
          "slug": "定义aop拦截点"
        },
        {
          "level": 3,
          "title": "[#](#定义aop切面) 定义AOP切面",
          "slug": "定义aop切面"
        },
        {
          "level": 3,
          "title": "[#](#切面使用) 切面使用",
          "slug": "切面使用"
        }
      ]
    },
    {
      "title": "SpringBoot集成Redis - 基于RedisTemplate+Lettuce数据操作",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90Redis%20-%20%E5%9F%BA%E4%BA%8ERedisTemplate+Lettuce%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot集成Redis - 基于RedisTemplate+Lettuce数据操作.md",
      "key": "v-cf869668",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90Redis%20-%20%E5%9F%BA%E4%BA%8ERedisTemplate+Lettuce%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C.html",
      "headers": [
        {
          "level": 3,
          "title": "什么是Lettuce?",
          "slug": "什么是lettuce"
        },
        {
          "level": 3,
          "title": "[#](#为何springboot2-x中lettuce会成为默认的客户端) 为何SpringBoot2.x中Lettuce会成为默认的客户端？",
          "slug": "为何springboot2-x中lettuce会成为默认的客户端"
        },
        {
          "level": 3,
          "title": "Lettuce的基本的API方式",
          "slug": "lettuce的基本的api方式"
        }
      ]
    },
    {
      "title": "SpringBoot集成Redis - 基于RedisTemplate+Jedis的数据操作",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90Redis%20-%20%E5%9F%BA%E4%BA%8ERedisTemplate+Jedis%E7%9A%84%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot集成Redis - 基于RedisTemplate+Jedis的数据操作.md",
      "key": "v-4f3040e6",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90Redis%20-%20%E5%9F%BA%E4%BA%8ERedisTemplate+Jedis%E7%9A%84%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C.html",
      "headers": [
        {
          "level": 3,
          "title": "Redis基础和5种基础数据类型",
          "slug": "redis基础和5种基础数据类型"
        },
        {
          "level": 3,
          "title": "[#](#什么是jedis) 什么是Jedis",
          "slug": "什么是jedis"
        },
        {
          "level": 3,
          "title": "[#](#spring中的template和redistemplate) Spring中的Template和RedisTemplate",
          "slug": "spring中的template和redistemplate"
        },
        {
          "level": 3,
          "title": "Spring中的Template和RedisTemplate",
          "slug": "spring中的template和redistemplate-2"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/Untitled%201.html",
      "relativePath": "Notes/JVM/SpringBoot/Untitled 1.md",
      "key": "v-60249dc6",
      "path": "/Notes/JVM/SpringBoot/Untitled%201.html"
    },
    {
      "title": "ThreadLocal",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/ThreadLocal.html",
      "relativePath": "Notes/JVM/ThreadLocal.md",
      "key": "v-3ede1a63",
      "path": "/Notes/JVM/ThreadLocal.html",
      "headers": [
        {
          "level": 2,
          "title": "ThreadLocal",
          "slug": "threadlocal"
        },
        {
          "level": 2,
          "title": "ThreadLocal是什么",
          "slug": "threadlocal是什么"
        },
        {
          "level": 2,
          "title": "ThreadLocal理解",
          "slug": "threadlocal理解"
        }
      ]
    },
    {
      "title": "SpringBoot集成文件 - 大文件的上传(异步，分片，断点续传和秒传)",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90%E6%96%87%E4%BB%B6%20-%20%E5%A4%A7%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0(%E5%BC%82%E6%AD%A5%EF%BC%8C%E5%88%86%E7%89%87%EF%BC%8C%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0%E5%92%8C%E7%A7%92%E4%BC%A0).html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot集成文件 - 大文件的上传(异步，分片，断点续传和秒传).md",
      "key": "v-09f41a2c",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90%E6%96%87%E4%BB%B6%20-%20%E5%A4%A7%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8A%E4%BC%A0(%E5%BC%82%E6%AD%A5%EF%BC%8C%E5%88%86%E7%89%87%EF%BC%8C%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0%E5%92%8C%E7%A7%92%E4%BC%A0).html",
      "headers": [
        {
          "level": 2,
          "title": "知识准备",
          "slug": "知识准备"
        },
        {
          "level": 3,
          "title": "[#](#基于分片的断点续传和秒传) 基于分片的断点续传和秒传",
          "slug": "基于分片的断点续传和秒传"
        },
        {
          "level": 3,
          "title": "[#](#异步上传) 异步上传",
          "slug": "异步上传"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Notes/Maven/Maven%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BE%9D%E8%B5%96%E5%B9%B6%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.html",
      "relativePath": "Notes/Maven/Maven自定义依赖并推送到远程仓库.md",
      "key": "v-7618b096",
      "path": "/Notes/Maven/Maven%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BE%9D%E8%B5%96%E5%B9%B6%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.html"
    },
    {
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90%E6%96%87%E4%BB%B6-%E5%9F%BA%E7%A1%80%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD.html",
      "relativePath": "Notes/JVM/SpringBoot/SpringBoot集成文件-基础的文件上传和下载.md",
      "key": "v-4160e6af",
      "path": "/Notes/JVM/SpringBoot/SpringBoot%E9%9B%86%E6%88%90%E6%96%87%E4%BB%B6-%E5%9F%BA%E7%A1%80%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD.html"
    },
    {
      "title": "WebSocket",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/SpringBoot/Springboot%E9%9B%86%E6%88%90WebSocket.html",
      "relativePath": "Notes/JVM/SpringBoot/Springboot集成WebSocket.md",
      "key": "v-0f0a89f0",
      "path": "/Notes/JVM/SpringBoot/Springboot%E9%9B%86%E6%88%90WebSocket.html",
      "headers": [
        {
          "level": 2,
          "title": "WebSocket",
          "slug": "websocket"
        },
        {
          "level": 2,
          "title": "什么是WebSocket协议？",
          "slug": "什么是websocket协议"
        },
        {
          "level": 3,
          "title": "WebSockets是如何工作的？",
          "slug": "websockets是如何工作的"
        },
        {
          "level": 3,
          "title": "何时使用WebSocket？",
          "slug": "何时使用websocket"
        },
        {
          "level": 2,
          "title": "为什么考虑使用WebSocket协议？",
          "slug": "为什么考虑使用websocket协议"
        },
        {
          "level": 2,
          "title": "什么是WebSocket?",
          "slug": "什么是websocket"
        },
        {
          "level": 2,
          "title": "为什么需要WebSocket?",
          "slug": "为什么需要websocket"
        },
        {
          "level": 2,
          "title": "",
          "slug": ""
        }
      ]
    },
    {
      "title": "使用Nexus在云服务器搭建Maven私服",
      "frontmatter": {},
      "regularPath": "/Notes/Maven/%E4%BD%BF%E7%94%A8Nexus%E5%9C%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAMaven%E7%A7%81%E6%9C%8D.html",
      "relativePath": "Notes/Maven/使用Nexus在云服务器搭建Maven私服.md",
      "key": "v-1ffb83bc",
      "path": "/Notes/Maven/%E4%BD%BF%E7%94%A8Nexus%E5%9C%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAMaven%E7%A7%81%E6%9C%8D.html",
      "headers": [
        {
          "level": 3,
          "title": "1，如果没有搭建私服会有什么问题？",
          "slug": "_1-如果没有搭建私服会有什么问题"
        },
        {
          "level": 3,
          "title": "2，搭建私服的优点",
          "slug": "_2-搭建私服的优点"
        },
        {
          "level": 3,
          "title": "3，Nexus 介绍",
          "slug": "_3-nexus-介绍"
        }
      ]
    },
    {
      "title": "Netty 的概念及体系结构",
      "frontmatter": {},
      "regularPath": "/Notes/Netty/1.Netty%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.html",
      "relativePath": "Notes/Netty/1.Netty的概念及体系结构.md",
      "key": "v-53ca4664",
      "path": "/Notes/Netty/1.Netty%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.html",
      "headers": [
        {
          "level": 2,
          "title": "Java NIO（Non-blocked非阻塞IO）",
          "slug": "java-nio-non-blocked非阻塞io"
        },
        {
          "level": 2,
          "title": "Netty 核心组件",
          "slug": "netty-核心组件"
        },
        {
          "level": 3,
          "title": "Channel",
          "slug": "channel"
        },
        {
          "level": 3,
          "title": "回调",
          "slug": "回调"
        },
        {
          "level": 3,
          "title": "Future",
          "slug": "future"
        },
        {
          "level": 3,
          "title": "事件和 ChannelHandler",
          "slug": "事件和-channelhandler"
        }
      ]
    },
    {
      "title": "面试题",
      "frontmatter": {},
      "regularPath": "/Notes/Summary/summary2.html",
      "relativePath": "Notes/Summary/summary2.md",
      "key": "v-836eec2e",
      "path": "/Notes/Summary/summary2.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 3,
          "title": "1.",
          "slug": "_1"
        }
      ]
    },
    {
      "title": "图床",
      "frontmatter": {},
      "regularPath": "/Notes/%E5%9B%BE%E5%BA%8A.html",
      "relativePath": "Notes/图床.md",
      "key": "v-000b0137",
      "path": "/Notes/%E5%9B%BE%E5%BA%8A.html"
    },
    {
      "title": "设计模式",
      "frontmatter": {},
      "regularPath": "/Notes/Summary/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",
      "relativePath": "Notes/Summary/设计模式.md",
      "key": "v-14c4b7d0",
      "path": "/Notes/Summary/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",
      "headers": [
        {
          "level": 2,
          "title": "设计模式",
          "slug": "设计模式"
        },
        {
          "level": 3,
          "title": "创建性模式",
          "slug": "创建性模式"
        },
        {
          "level": 3,
          "title": "结构性模式",
          "slug": "结构性模式"
        },
        {
          "level": 3,
          "title": "行为模式",
          "slug": "行为模式"
        }
      ]
    },
    {
      "title": "Java的反射机制",
      "frontmatter": {},
      "regularPath": "/Notes/JVM/java%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6.html",
      "relativePath": "Notes/JVM/java的反射机制.md",
      "key": "v-aa5be6be",
      "path": "/Notes/JVM/java%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6.html",
      "headers": [
        {
          "level": 2,
          "title": "一、什么是class类",
          "slug": "一、什么是class类"
        },
        {
          "level": 2,
          "title": "二、class类的动态加载",
          "slug": "二、class类的动态加载"
        },
        {
          "level": 2,
          "title": "三、获取方法信息",
          "slug": "三、获取方法信息"
        },
        {
          "level": 2,
          "title": "四、获取成员变量的信息",
          "slug": "四、获取成员变量的信息"
        },
        {
          "level": 2,
          "title": "五、获取构造函数的信息",
          "slug": "五、获取构造函数的信息"
        },
        {
          "level": 2,
          "title": "六、方法反射的操作",
          "slug": "六、方法反射的操作"
        },
        {
          "level": 2,
          "title": "七、Invoke方法",
          "slug": "七、invoke方法"
        }
      ]
    },
    {
      "title": "面试题",
      "frontmatter": {},
      "regularPath": "/Notes/Summary/summary1.html",
      "relativePath": "Notes/Summary/summary1.md",
      "key": "v-3463716b",
      "path": "/Notes/Summary/summary1.html",
      "headers": [
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 3,
          "title": "1.高并发秒杀超卖问题",
          "slug": "_1-高并发秒杀超卖问题"
        },
        {
          "level": 3,
          "title": "2.测试-淘宝购物车",
          "slug": "_2-测试-淘宝购物车"
        },
        {
          "level": 3,
          "title": "3.典型电商促销场景下的云端压力测试实战",
          "slug": "_3-典型电商促销场景下的云端压力测试实战"
        },
        {
          "level": 3,
          "title": "4.liunx下怎么查进程，怎么查端口",
          "slug": "_4-liunx下怎么查进程-怎么查端口"
        },
        {
          "level": 3,
          "title": "5.线程池核心参数",
          "slug": "_5-线程池核心参数"
        },
        {
          "level": 3,
          "title": "6.Spring-涉及到的设计模式汇总",
          "slug": "_6-spring-涉及到的设计模式汇总"
        },
        {
          "level": 3,
          "title": "7. JDBC建立连接流程",
          "slug": "_7-jdbc建立连接流程"
        },
        {
          "level": 3,
          "title": "8.布隆过滤器",
          "slug": "_8-布隆过滤器"
        },
        {
          "level": 3,
          "title": "9.ThreadLocal",
          "slug": "_9-threadlocal"
        },
        {
          "level": 3,
          "title": "10.Session是什么？它与Cookie有什么区别？",
          "slug": "_10-session是什么-它与cookie有什么区别"
        },
        {
          "level": 3,
          "title": "11.tomcat如何以及为什么要打破双亲委派模型（顺带介绍一下双亲委派模型）",
          "slug": "_11-tomcat如何以及为什么要打破双亲委派模型-顺带介绍一下双亲委派模型"
        },
        {
          "level": 3,
          "title": "12.四种引用的应用场景",
          "slug": "_12-四种引用的应用场景"
        },
        {
          "level": 3,
          "title": "13.Redis哨兵如何实现通信，结点宕机如何处理",
          "slug": "_13-redis哨兵如何实现通信-结点宕机如何处理"
        },
        {
          "level": 3,
          "title": "14.Spring如何解决IOC时的循环依赖问题",
          "slug": "_14-spring如何解决ioc时的循环依赖问题"
        },
        {
          "level": 3,
          "title": "15.一般是怎么创建线程?",
          "slug": "_15-一般是怎么创建线程"
        },
        {
          "level": 3,
          "title": "16.线程池类型",
          "slug": "_16-线程池类型"
        },
        {
          "level": 3,
          "title": "17.对象的生命周期",
          "slug": "_17-对象的生命周期"
        },
        {
          "level": 3,
          "title": "18.线程池中后备队列满了的任务拒绝策略",
          "slug": "_18-线程池中后备队列满了的任务拒绝策略"
        },
        {
          "level": 3,
          "title": "19.redis如何实现分布式锁",
          "slug": "_19-redis如何实现分布式锁"
        },
        {
          "level": 3,
          "title": "20.@Autowired和@Resource区别",
          "slug": "_20-autowired和-resource区别"
        },
        {
          "level": 3,
          "title": "21.Spring 注解",
          "slug": "_21-spring-注解"
        },
        {
          "level": 3,
          "title": "22.Spring注解分类",
          "slug": "_22-spring注解分类"
        },
        {
          "level": 3,
          "title": "23.@Repository和@Controller、@Service、@Component",
          "slug": "_23-repository和-controller、-service、-component"
        },
        {
          "level": 3,
          "title": "24.Spring中@Component和@Bean的区别",
          "slug": "_24-spring中-component和-bean的区别"
        },
        {
          "level": 3,
          "title": "25.Spring.factories(SpringBoot如何自动注入(装配)Maven引入的第三方库jar)",
          "slug": "_25-spring-factories-springboot如何自动注入-装配-maven引入的第三方库jar"
        },
        {
          "level": 3,
          "title": "26.SpringBoot的自动装配原理",
          "slug": "_26-springboot的自动装配原理"
        },
        {
          "level": 3,
          "title": "27.单点登录",
          "slug": "_27-单点登录"
        },
        {
          "level": 3,
          "title": "28.零拷贝",
          "slug": "_28-零拷贝"
        },
        {
          "level": 3,
          "title": "29.TCP建立连接为什么是三次握手，而不是两次或四次？",
          "slug": "_29-tcp建立连接为什么是三次握手-而不是两次或四次"
        },
        {
          "level": 3,
          "title": "30.TCP四次挥手为什么有时会是三次挥手？",
          "slug": "_30-tcp四次挥手为什么有时会是三次挥手"
        },
        {
          "level": 3,
          "title": "31.如何对app做安全测试",
          "slug": "_31-如何对app做安全测试"
        },
        {
          "level": 3,
          "title": "32.这四种隔离级别具体是如何实现的呢？",
          "slug": "_32-这四种隔离级别具体是如何实现的呢"
        },
        {
          "level": 3,
          "title": "33.可重复读隔离级别如何用mvcc解决幻读问题",
          "slug": "_33-可重复读隔离级别如何用mvcc解决幻读问题"
        },
        {
          "level": 3,
          "title": "34.元数据锁",
          "slug": "_34-元数据锁"
        },
        {
          "level": 3,
          "title": "35.意向锁",
          "slug": "_35-意向锁"
        },
        {
          "level": 3,
          "title": "36.行级锁",
          "slug": "_36-行级锁"
        },
        {
          "level": 3,
          "title": "37.MySQL Log",
          "slug": "_37-mysql-log"
        },
        {
          "level": 3,
          "title": "38.redo log（循环写）和binlog（全量日志）的 区别",
          "slug": "_38-redo-log-循环写-和binlog-全量日志-的-区别"
        },
        {
          "level": 3,
          "title": "34.为什么Redis选择使用跳表而不是红黑树来实现有序集合？",
          "slug": "_34-为什么redis选择使用跳表而不是红黑树来实现有序集合"
        },
        {
          "level": 3,
          "title": "35.红黑树（二叉搜索树之一）",
          "slug": "_35-红黑树-二叉搜索树之一"
        },
        {
          "level": 3,
          "title": "36.内存屏障",
          "slug": "_36-内存屏障"
        },
        {
          "level": 3,
          "title": "37.三色标记法GC",
          "slug": "_37-三色标记法gc"
        },
        {
          "level": 3,
          "title": "38.CMS与G1收集器",
          "slug": "_38-cms与g1收集器"
        },
        {
          "level": 3,
          "title": "39.SpringBoot的类加载过程",
          "slug": "_39-springboot的类加载过程"
        },
        {
          "level": 3,
          "title": "40.类加载过程",
          "slug": "_40-类加载过程"
        },
        {
          "level": 3,
          "title": "",
          "slug": ""
        },
        {
          "level": 3,
          "title": "41.java类加载初始化顺序（重在顺序）",
          "slug": "_41-java类加载初始化顺序-重在顺序"
        },
        {
          "level": 3,
          "title": "42.JVM运行时内存结构（五个分区）",
          "slug": "_42-jvm运行时内存结构-五个分区"
        },
        {
          "level": 3,
          "title": "43.逃逸分析",
          "slug": "_43-逃逸分析"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/OS.html",
      "relativePath": "Notes/操作系统/OS.md",
      "key": "v-82df887c",
      "path": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/OS.html"
    },
    {
      "title": "Netty应用程序",
      "frontmatter": {},
      "regularPath": "/Notes/Netty/2Netty%20%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.html",
      "relativePath": "Notes/Netty/2Netty 应用程序.md",
      "key": "v-7bcb589c",
      "path": "/Notes/Netty/2Netty%20%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.html"
    },
    {
      "title": "存储管理",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BA%8C%E3%80%81%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86.html",
      "relativePath": "Notes/操作系统/二、存储管理.md",
      "key": "v-7bfdc21c",
      "path": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BA%8C%E3%80%81%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86.html",
      "headers": [
        {
          "level": 2,
          "title": "分层存储体系",
          "slug": "分层存储体系"
        },
        {
          "level": 2,
          "title": "地址空间",
          "slug": "地址空间"
        }
      ]
    },
    {
      "title": "进程与线程",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%80%E3%80%81%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B.html",
      "relativePath": "Notes/操作系统/一、进程与线程.md",
      "key": "v-ee04ead6",
      "path": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%80%E3%80%81%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B.html",
      "headers": [
        {
          "level": 2,
          "title": "线程",
          "slug": "线程"
        },
        {
          "level": 3,
          "title": "线程的使用",
          "slug": "线程的使用"
        },
        {
          "level": 3,
          "title": "在用户空间实现线程 & 在内核空间实现线程",
          "slug": "在用户空间实现线程-在内核空间实现线程"
        },
        {
          "level": 3,
          "title": "2.3 进程间通信",
          "slug": "_2-3-进程间通信"
        },
        {
          "level": 3,
          "title": "2.4 调度",
          "slug": "_2-4-调度"
        }
      ]
    },
    {
      "title": "引论",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%BC%95%E8%AE%BA.html",
      "relativePath": "Notes/操作系统/引论.md",
      "key": "v-a51fc4f8",
      "path": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%BC%95%E8%AE%BA.html",
      "headers": [
        {
          "level": 2,
          "title": "1.1计算机硬件介绍",
          "slug": "_1-1计算机硬件介绍"
        },
        {
          "level": 3,
          "title": "1.1.1 处理器",
          "slug": "_1-1-1-处理器"
        },
        {
          "level": 3,
          "title": "1.1.2 存储器",
          "slug": "_1-1-2-存储器"
        },
        {
          "level": 3,
          "title": "1.1.3 I/O设备",
          "slug": "_1-1-3-i-o设备"
        },
        {
          "level": 3,
          "title": "1.1.4 总线",
          "slug": "_1-1-4-总线"
        },
        {
          "level": 2,
          "title": "1.2 操作系统",
          "slug": "_1-2-操作系统"
        },
        {
          "level": 3,
          "title": "1.2.1 进程",
          "slug": "_1-2-1-进程"
        }
      ]
    },
    {
      "title": "揭开 Buffer Pool 的面纱",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E5%86%85%E5%AD%98%E7%AF%87.html",
      "relativePath": "Notes/数据库/MySQL/内存篇.md",
      "key": "v-651f82ee",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E5%86%85%E5%AD%98%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#为什么要有-buffer-pool)为什么要有 Buffer Pool？",
          "slug": "为什么要有-buffer-pool"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#buffer-pool-有多大)Buffer Pool 有多大？",
          "slug": "buffer-pool-有多大"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#buffer-pool-缓存什么)Buffer Pool 缓存什么？",
          "slug": "buffer-pool-缓存什么"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#如何管理-buffer-pool)如何管理 Buffer Pool？",
          "slug": "如何管理-buffer-pool"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#如何管理空闲页)如何管理空闲页？",
          "slug": "如何管理空闲页"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#如何管理脏页)如何管理脏页？",
          "slug": "如何管理脏页"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#如何提高缓存命中率)如何提高缓存命中率？",
          "slug": "如何提高缓存命中率"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#脏页什么时候会被刷入磁盘)脏页什么时候会被刷入磁盘？",
          "slug": "脏页什么时候会被刷入磁盘"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/bufferpool/bufferpool.html#总结)总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "MySQL分库分表",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html",
      "relativePath": "Notes/数据库/MySQL/分库分表.md",
      "key": "v-9208a1fc",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "MySQL分库分表",
          "slug": "mysql分库分表"
        },
        {
          "level": 2,
          "title": "水平切分",
          "slug": "水平切分"
        },
        {
          "level": 2,
          "title": "[#](#垂直切分) 垂直切分",
          "slug": "垂直切分"
        },
        {
          "level": 2,
          "title": "[#](#sharding-策略) Sharding 策略",
          "slug": "sharding-策略"
        },
        {
          "level": 2,
          "title": "[#](#sharding-存在的问题及解决方案) Sharding 存在的问题及解决方案",
          "slug": "sharding-存在的问题及解决方案"
        },
        {
          "level": 3,
          "title": "[#](#_1-事务问题) 1. 事务问题",
          "slug": "_1-事务问题"
        },
        {
          "level": 3,
          "title": "[#](#_2-链接) 2. 链接",
          "slug": "_2-链接"
        },
        {
          "level": 3,
          "title": "[#](#_3-id-唯一性) 3. ID 唯一性",
          "slug": "_3-id-唯一性"
        }
      ]
    },
    {
      "title": "事务隔离级别是怎么实现的？",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E4%BA%8B%E5%8A%A1%E7%AF%87.html",
      "relativePath": "Notes/数据库/MySQL/事务篇.md",
      "key": "v-384d74ea",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E4%BA%8B%E5%8A%A1%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#事务有哪些特性)事务有哪些特性？",
          "slug": "事务有哪些特性"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#并行事务会引发什么问题)并行事务会引发什么问题？",
          "slug": "并行事务会引发什么问题"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#脏读)脏读",
          "slug": "脏读"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#不可重复读)不可重复读",
          "slug": "不可重复读"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#幻读)幻读",
          "slug": "幻读"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#事务的隔离级别有哪些)事务的隔离级别有哪些？",
          "slug": "事务的隔离级别有哪些"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#read-view-在-mvcc-里如何工作的)Read View 在 MVCC 里如何工作的？",
          "slug": "read-view-在-mvcc-里如何工作的"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#可重复读是如何工作的)可重复读是如何工作的？",
          "slug": "可重复读是如何工作的"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#读提交是如何工作的)读提交是如何工作的？",
          "slug": "读提交是如何工作的"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/mvcc.html#总结)总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/phantom.html#什么是幻读)什么是幻读？",
          "slug": "什么是幻读"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/phantom.html#快照读是如何避免幻读的)快照读是如何避免幻读的？",
          "slug": "快照读是如何避免幻读的"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/phantom.html#当前读是如何避免幻读的)当前读是如何避免幻读的？",
          "slug": "当前读是如何避免幻读的"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/phantom.html#幻读被完全解决了吗)幻读被完全解决了吗？",
          "slug": "幻读被完全解决了吗"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/phantom.html#第一个发生幻读现象的场景)第一个发生幻读现象的场景",
          "slug": "第一个发生幻读现象的场景"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/phantom.html#第二个发生幻读现象的场景)第二个发生幻读现象的场景",
          "slug": "第二个发生幻读现象的场景"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/transaction/phantom.html#总结)总结",
          "slug": "总结-2"
        },
        {
          "level": 2,
          "title": "XA事务（分布式事务）",
          "slug": "xa事务-分布式事务"
        },
        {
          "level": 2,
          "title": "什么是分布式事务",
          "slug": "什么是分布式事务"
        },
        {
          "level": 2,
          "title": "分布式事务产生的原因",
          "slug": "分布式事务产生的原因"
        },
        {
          "level": 3,
          "title": "service多个节点",
          "slug": "service多个节点"
        },
        {
          "level": 3,
          "title": "resource多个节点",
          "slug": "resource多个节点"
        },
        {
          "level": 2,
          "title": "分布式事务的基础",
          "slug": "分布式事务的基础"
        },
        {
          "level": 3,
          "title": "CAP",
          "slug": "cap"
        },
        {
          "level": 3,
          "title": "BASE",
          "slug": "base"
        },
        {
          "level": 2,
          "title": "是否真的要分布式事务",
          "slug": "是否真的要分布式事务"
        },
        {
          "level": 2,
          "title": "2PC",
          "slug": "_2pc"
        },
        {
          "level": 2,
          "title": "TCC",
          "slug": "tcc"
        },
        {
          "level": 2,
          "title": "本地消息表",
          "slug": "本地消息表"
        },
        {
          "level": 2,
          "title": "MQ事务",
          "slug": "mq事务"
        },
        {
          "level": 2,
          "title": "Saga事务",
          "slug": "saga事务"
        }
      ]
    },
    {
      "title": "文件系统",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%9B%9B%E3%80%81%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F.html",
      "relativePath": "Notes/操作系统/四、文件系统.md",
      "key": "v-64e19cce",
      "path": "/Notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%9B%9B%E3%80%81%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F.html",
      "headers": [
        {
          "level": 2,
          "title": "1.文件",
          "slug": "_1-文件"
        },
        {
          "level": 3,
          "title": "1.1文件命名",
          "slug": "_1-1文件命名"
        },
        {
          "level": 3,
          "title": "1.2文件存取",
          "slug": "_1-2文件存取"
        },
        {
          "level": 3,
          "title": "1.3文件属性",
          "slug": "_1-3文件属性"
        },
        {
          "level": 2,
          "title": "2.目录",
          "slug": "_2-目录"
        },
        {
          "level": 3,
          "title": "2.1一级目录系统",
          "slug": "_2-1一级目录系统"
        },
        {
          "level": 3,
          "title": "2.2层次目录系统",
          "slug": "_2-2层次目录系统"
        },
        {
          "level": 2,
          "title": "3.文件系统的实现",
          "slug": "_3-文件系统的实现"
        },
        {
          "level": 3,
          "title": "3.1文件系统布局",
          "slug": "_3-1文件系统布局"
        },
        {
          "level": 3,
          "title": "3.2 文件的实现",
          "slug": "_3-2-文件的实现"
        },
        {
          "level": 3,
          "title": "3.3 虚拟文件系统",
          "slug": "_3-3-虚拟文件系统"
        },
        {
          "level": 2,
          "title": "文件系统优化",
          "slug": "文件系统优化"
        }
      ]
    },
    {
      "title": "MySQL基础",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E5%9F%BA%E7%A1%80%E7%AF%87.html",
      "relativePath": "Notes/数据库/MySQL/基础篇.md",
      "key": "v-7ff6f114",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E5%9F%BA%E7%A1%80%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "MySQL基础",
          "slug": "mysql基础"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#mysql-执行流程是怎样的)MySQL 执行流程是怎样的？",
          "slug": "mysql-执行流程是怎样的"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#第一步-连接器)第一步：连接器",
          "slug": "第一步-连接器"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#第二步-查询缓存)第二步：查询缓存",
          "slug": "第二步-查询缓存"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#第三步-解析-sql)第三步：解析 SQL",
          "slug": "第三步-解析-sql"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#解析器)解析器",
          "slug": "解析器"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#第四步-执行-sql)第四步：执行 SQL",
          "slug": "第四步-执行-sql"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#预处理器)预处理器",
          "slug": "预处理器"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#优化器)优化器",
          "slug": "优化器"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#执行器)执行器",
          "slug": "执行器"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/how_select.html#总结)总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#mysql-的数据存放在哪个文件)MySQL 的数据存放在哪个文件？",
          "slug": "mysql-的数据存放在哪个文件"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#表空间文件的结构是怎么样的)表空间文件的结构是怎么样的？",
          "slug": "表空间文件的结构是怎么样的"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#innodb-行格式有哪些)InnoDB 行格式有哪些？",
          "slug": "innodb-行格式有哪些"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#compact-行格式长什么样)COMPACT 行格式长什么样？",
          "slug": "compact-行格式长什么样"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#记录的额外信息)记录的额外信息",
          "slug": "记录的额外信息"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#记录的真实数据)记录的真实数据",
          "slug": "记录的真实数据"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#varchar-n-中-n-最大取值为多少)varchar(n) 中 n 最大取值为多少？",
          "slug": "varchar-n-中-n-最大取值为多少"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#单字段的情况)单字段的情况",
          "slug": "单字段的情况"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#多字段的情况)多字段的情况",
          "slug": "多字段的情况"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#行溢出后-mysql-是怎么处理的)行溢出后，MySQL 是怎么处理的？",
          "slug": "行溢出后-mysql-是怎么处理的"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/base/row_format.html#总结)总结",
          "slug": "总结-2"
        }
      ]
    },
    {
      "title": "索引常见面试题",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E7%B4%A2%E5%BC%95%E7%AF%87.html",
      "relativePath": "Notes/数据库/MySQL/索引篇.md",
      "key": "v-7591d02a",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E7%B4%A2%E5%BC%95%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#什么是索引)什么是索引？",
          "slug": "什么是索引"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#索引的分类)索引的分类",
          "slug": "索引的分类"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#按数据结构分类)按数据结构分类",
          "slug": "按数据结构分类"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#按物理存储分类)按物理存储分类",
          "slug": "按物理存储分类"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#按字段特性分类)按字段特性分类",
          "slug": "按字段特性分类"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#按字段个数分类)按字段个数分类",
          "slug": "按字段个数分类"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#什么时候需要-不需要创建索引)什么时候需要 / 不需要创建索引？",
          "slug": "什么时候需要-不需要创建索引"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#有什么优化索引的方法)有什么优化索引的方法？",
          "slug": "有什么优化索引的方法"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#前缀索引优化)前缀索引优化",
          "slug": "前缀索引优化"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#覆盖索引优化)覆盖索引优化",
          "slug": "覆盖索引优化"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#主键索引最好是自增的)主键索引最好是自增的",
          "slug": "主键索引最好是自增的"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#索引最好设置为-not-null)索引最好设置为 NOT NULL",
          "slug": "索引最好设置为-not-null"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#防止索引失效)防止索引失效",
          "slug": "防止索引失效"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/mysql/index/index_interview.html#总结)总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/page.html#innodb-是如何存储数据的)InnoDB 是如何存储数据的？",
          "slug": "innodb-是如何存储数据的"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/page.html#b-树是如何进行查询的)B+ 树是如何进行查询的？",
          "slug": "b-树是如何进行查询的"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/page.html#聚簇索引和二级索引)聚簇索引和二级索引",
          "slug": "聚簇索引和二级索引"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/page.html#总结)总结",
          "slug": "总结-2"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#怎样的索引的数据结构是好的)怎样的索引的数据结构是好的？",
          "slug": "怎样的索引的数据结构是好的"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#什么是二分查找)什么是二分查找？",
          "slug": "什么是二分查找"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#什么是二分查找树)什么是二分查找树？",
          "slug": "什么是二分查找树"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#什么是自平衡二叉树)什么是自平衡二叉树？",
          "slug": "什么是自平衡二叉树"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#什么是-b-树)什么是 B 树",
          "slug": "什么是-b-树"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#什么是-b-树-2)什么是 B+ 树？",
          "slug": "什么是-b-树-2"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#_1、单点查询)1、单点查询",
          "slug": "_1、单点查询"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#_2、插入和删除效率)2、插入和删除效率",
          "slug": "_2、插入和删除效率"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#_3、范围查询)3、范围查询",
          "slug": "_3、范围查询"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#mysql-中的-b-树)MySQL 中的 B+ 树",
          "slug": "mysql-中的-b-树"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/whyindexchosebpulstree.html#总结)总结",
          "slug": "总结-3"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/2000w.html#实验)实验",
          "slug": "实验"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/2000w.html#单表数量限制)单表数量限制",
          "slug": "单表数量限制"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/2000w.html#表空间)表空间",
          "slug": "表空间"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/2000w.html#页的数据结构)页的数据结构",
          "slug": "页的数据结构"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/2000w.html#索引的数据结构)索引的数据结构",
          "slug": "索引的数据结构"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/2000w.html#单表建议值)单表建议值",
          "slug": "单表建议值"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/2000w.html#总结)总结",
          "slug": "总结-4"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#哪种-count-性能最好)哪种 count 性能最好？",
          "slug": "哪种-count-性能最好"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#count-是什么)count() 是什么？",
          "slug": "count-是什么"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#count-主键字段-执行过程是怎样的)count(主键字段) 执行过程是怎样的？",
          "slug": "count-主键字段-执行过程是怎样的"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#count-1-执行过程是怎样的)count(1) 执行过程是怎样的？",
          "slug": "count-1-执行过程是怎样的"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#count-执行过程是怎样的)count(*) 执行过程是怎样的？",
          "slug": "count-执行过程是怎样的"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#count-字段-执行过程是怎样的)count(字段) 执行过程是怎样的？",
          "slug": "count-字段-执行过程是怎样的"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#小结)小结",
          "slug": "小结"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#为什么要通过遍历的方式来计数)为什么要通过遍历的方式来计数？",
          "slug": "为什么要通过遍历的方式来计数"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#如何优化-count)如何优化 count(*)？",
          "slug": "如何优化-count"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#第一种-近似值)第一种，近似值",
          "slug": "第一种-近似值"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/index/count.html#第二种-额外表保存计数值)第二种，额外表保存计数值",
          "slug": "第二种-额外表保存计数值"
        }
      ]
    },
    {
      "title": "MySQL 日志：undo log、redo log、binlog 有什么用？",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E6%97%A5%E5%BF%97%E7%AF%87.html",
      "relativePath": "Notes/数据库/MySQL/日志篇.md",
      "key": "v-fef8c496",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E6%97%A5%E5%BF%97%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#为什么需要-undo-log)为什么需要 undo log？",
          "slug": "为什么需要-undo-log"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#为什么需要-buffer-pool)为什么需要 Buffer Pool？",
          "slug": "为什么需要-buffer-pool"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#buffer-pool-缓存什么)Buffer Pool 缓存什么？",
          "slug": "buffer-pool-缓存什么"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#为什么需要-redo-log)为什么需要 redo log ？",
          "slug": "为什么需要-redo-log"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#redo-log-什么时候刷盘)redo log 什么时候刷盘？",
          "slug": "redo-log-什么时候刷盘"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#redo-log-文件写满了怎么办)redo log 文件写满了怎么办？",
          "slug": "redo-log-文件写满了怎么办"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#为什么需要-binlog)为什么需要 binlog ？",
          "slug": "为什么需要-binlog"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#redo-log-和-binlog-有什么区别)redo log 和 binlog 有什么区别？",
          "slug": "redo-log-和-binlog-有什么区别"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#主从复制是怎么实现)主从复制是怎么实现？",
          "slug": "主从复制是怎么实现"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#binlog-什么时候刷盘)binlog 什么时候刷盘？",
          "slug": "binlog-什么时候刷盘"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#为什么需要两阶段提交)为什么需要两阶段提交？",
          "slug": "为什么需要两阶段提交"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#两阶段提交的过程是怎样的)两阶段提交的过程是怎样的？",
          "slug": "两阶段提交的过程是怎样的"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#异常重启会出现什么现象)异常重启会出现什么现象？",
          "slug": "异常重启会出现什么现象"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#两阶段提交有什么问题)两阶段提交有什么问题？",
          "slug": "两阶段提交有什么问题"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#mysql-磁盘-i-o-很高-有什么优化的方法)MySQL 磁盘 I/O 很高，有什么优化的方法？",
          "slug": "mysql-磁盘-i-o-很高-有什么优化的方法"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/log/how_update.html#总结)总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "Redis面试 - redis问题总结",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/Redis%E9%9D%A2%E8%AF%95%E9%A2%98.html",
      "relativePath": "Notes/数据库/Redis/Redis面试题.md",
      "key": "v-48232b46",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/Redis%E9%9D%A2%E8%AF%95%E9%A2%98.html",
      "headers": [
        {
          "level": 2,
          "title": "常规问题",
          "slug": "常规问题"
        },
        {
          "level": 2,
          "title": "[#](#数据类型和数据结构) 数据类型和数据结构",
          "slug": "数据类型和数据结构"
        },
        {
          "level": 3,
          "title": "为什么Redis会设计redisObject对象",
          "slug": "为什么redis会设计redisobject对象"
        },
        {
          "level": 3,
          "title": "命令的类型检查和多态",
          "slug": "命令的类型检查和多态"
        },
        {
          "level": 3,
          "title": "对象共享",
          "slug": "对象共享"
        },
        {
          "level": 3,
          "title": "引用计数以及对象的消毁",
          "slug": "引用计数以及对象的消毁"
        },
        {
          "level": 3,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 2,
          "title": "[#](#持久化和内存) 持久化和内存",
          "slug": "持久化和内存"
        },
        {
          "level": 2,
          "title": "[#](#事务) 事务",
          "slug": "事务"
        },
        {
          "level": 2,
          "title": "[#](#集群) 集群",
          "slug": "集群"
        },
        {
          "level": 3,
          "title": "[#](#主从复制) 主从复制",
          "slug": "主从复制"
        },
        {
          "level": 3,
          "title": "[#](#哨兵机制) 哨兵机制",
          "slug": "哨兵机制"
        },
        {
          "level": 3,
          "title": "[#](#redis集群) Redis集群",
          "slug": "redis集群"
        },
        {
          "level": 2,
          "title": "[#](#应用场景) 应用场景",
          "slug": "应用场景"
        },
        {
          "level": 2,
          "title": "[#](#新版本) 新版本",
          "slug": "新版本"
        }
      ]
    },
    {
      "title": "Redis 过期删除策略和内存淘汰策略有什么区别？",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E5%8A%9F%E8%83%BD%E7%AF%87.html",
      "relativePath": "Notes/数据库/Redis/功能篇.md",
      "key": "v-02fa74cc",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E5%8A%9F%E8%83%BD%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#过期删除策略)过期删除策略",
          "slug": "过期删除策略"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#如何设置过期时间)如何设置过期时间？",
          "slug": "如何设置过期时间"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#如何判定-key-已过期了)如何判定 key 已过期了？",
          "slug": "如何判定-key-已过期了"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#过期删除策略有哪些)过期删除策略有哪些？",
          "slug": "过期删除策略有哪些"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#redis-过期删除策略是什么)Redis 过期删除策略是什么？",
          "slug": "redis-过期删除策略是什么"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#内存淘汰策略)内存淘汰策略",
          "slug": "内存淘汰策略"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#如何设置-redis-最大运行内存)如何设置 Redis 最大运行内存？",
          "slug": "如何设置-redis-最大运行内存"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#redis-内存淘汰策略有哪些)Redis 内存淘汰策略有哪些？",
          "slug": "redis-内存淘汰策略有哪些"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#lru-算法和-lfu-算法有什么区别)LRU 算法和 LFU 算法有什么区别？",
          "slug": "lru-算法和-lfu-算法有什么区别"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/module/strategy.html#总结)总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "MySQL 有哪些锁？",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E9%94%81%E7%AF%87.html",
      "relativePath": "Notes/数据库/MySQL/锁篇.md",
      "key": "v-0003c17a",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E9%94%81%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#全局锁)全局锁",
          "slug": "全局锁"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#表级锁)表级锁",
          "slug": "表级锁"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#表锁)表锁",
          "slug": "表锁"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#元数据锁)元数据锁",
          "slug": "元数据锁"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#意向锁)意向锁",
          "slug": "意向锁"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#auto-inc-锁)AUTO-INC 锁",
          "slug": "auto-inc-锁"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#行级锁)行级锁",
          "slug": "行级锁"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#record-lock)Record Lock",
          "slug": "record-lock"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#gap-lock)Gap Lock",
          "slug": "gap-lock"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#next-key-lock)Next-Key Lock",
          "slug": "next-key-lock"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/mysql_lock.html#插入意向锁)插入意向锁",
          "slug": "插入意向锁"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#什么-sql-语句会加行级锁)什么 SQL 语句会加行级锁？",
          "slug": "什么-sql-语句会加行级锁"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#行级锁有哪些种类)行级锁有哪些种类？",
          "slug": "行级锁有哪些种类"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#record-lock)Record Lock",
          "slug": "record-lock-2"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#gap-lock)Gap Lock",
          "slug": "gap-lock-2"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#next-key-lock)Next-Key Lock",
          "slug": "next-key-lock-2"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#mysql-是怎么加行级锁的)MySQL 是怎么加行级锁的？",
          "slug": "mysql-是怎么加行级锁的"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#唯一索引等值查询)唯一索引等值查询",
          "slug": "唯一索引等值查询"
        },
        {
          "level": 3,
          "title": "唯一索引范围查询",
          "slug": "唯一索引范围查询"
        },
        {
          "level": 3,
          "title": "非唯一索引等值查询",
          "slug": "非唯一索引等值查询"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#非唯一索引范围查询)非唯一索引范围查询",
          "slug": "非唯一索引范围查询"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#没有加索引的查询)没有加索引的查询",
          "slug": "没有加索引的查询"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/howtolock.html#总结)总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/deadlock.html#死锁的发生)死锁的发生",
          "slug": "死锁的发生"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/deadlock.html#为什么会产生死锁)为什么会产生死锁？",
          "slug": "为什么会产生死锁"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/deadlock.html#insert-语句是怎么加行级锁的)Insert 语句是怎么加行级锁的？",
          "slug": "insert-语句是怎么加行级锁的"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/deadlock.html#_1、记录之间加有间隙锁)1、记录之间加有间隙锁",
          "slug": "_1、记录之间加有间隙锁"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/deadlock.html#_2、遇到唯一键冲突)2、遇到唯一键冲突",
          "slug": "_2、遇到唯一键冲突"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/deadlock.html#如何避免死锁)如何避免死锁？",
          "slug": "如何避免死锁"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#准备工作)准备工作",
          "slug": "准备工作"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#开始实验)开始实验",
          "slug": "开始实验"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#为什么会发生死锁)为什么会发生死锁？",
          "slug": "为什么会发生死锁"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#time-1-阶段加锁分析)Time 1 阶段加锁分析",
          "slug": "time-1-阶段加锁分析"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#time-2-阶段加锁分析)Time 2 阶段加锁分析",
          "slug": "time-2-阶段加锁分析"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#time-3-阶段加锁分析)Time 3 阶段加锁分析",
          "slug": "time-3-阶段加锁分析"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#time-4-阶段加锁分析)Time 4 阶段加锁分析",
          "slug": "time-4-阶段加锁分析"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#总结)总结",
          "slug": "总结-2"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/mysql/lock/show_lock.html#读者问答)读者问答",
          "slug": "读者问答"
        }
      ]
    },
    {
      "title": "AOF 持久化是怎么实现的？",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E6%8C%81%E4%B9%85%E5%8C%96%E7%AF%87.html",
      "relativePath": "Notes/数据库/Redis/持久化篇.md",
      "key": "v-43132a12",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E6%8C%81%E4%B9%85%E5%8C%96%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/aof.html#aof-日志)AOF 日志",
          "slug": "aof-日志"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/aof.html#三种写回策略)三种写回策略",
          "slug": "三种写回策略"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/aof.html#aof-重写机制)AOF 重写机制",
          "slug": "aof-重写机制"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/aof.html#aof-后台重写)AOF 后台重写",
          "slug": "aof-后台重写"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/aof.html#总结)总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/rdb.html#快照怎么用)快照怎么用？",
          "slug": "快照怎么用"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/rdb.html#执行快照时-数据能被修改吗)执行快照时，数据能被修改吗？",
          "slug": "执行快照时-数据能被修改吗"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/rdb.html#rdb-和-aof-合体)RDB 和 AOF 合体",
          "slug": "rdb-和-aof-合体"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/bigkeyaofrdb.html#大-key-对-aof-日志的影响)大 Key 对 AOF 日志的影响",
          "slug": "大-key-对-aof-日志的影响"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/bigkeyaofrdb.html#大-key-对-aof-重写和-rdb-的影响)大 Key 对 AOF 重写和 RDB 的影响",
          "slug": "大-key-对-aof-重写和-rdb-的影响"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/storage/bigkeyaofrdb.html#总结)总结",
          "slug": "总结-2"
        }
      ]
    },
    {
      "title": "Redis 常见数据类型和应用场景",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%AF%87.html",
      "relativePath": "Notes/数据库/Redis/数据类型篇.md",
      "key": "v-e53f3972",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#string)String",
          "slug": "string"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#介绍)介绍",
          "slug": "介绍"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#内部实现)内部实现",
          "slug": "内部实现"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#常用指令)常用指令",
          "slug": "常用指令"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景)应用场景",
          "slug": "应用场景"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#list)List",
          "slug": "list"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#介绍-2)介绍",
          "slug": "介绍-2"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#内部实现-2)内部实现",
          "slug": "内部实现-2"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#常用命令)常用命令",
          "slug": "常用命令"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景-2)应用场景",
          "slug": "应用场景-2"
        },
        {
          "level": 2,
          "title": "Hash",
          "slug": "hash"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#介绍-3)介绍",
          "slug": "介绍-3"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#内部实现-3)内部实现",
          "slug": "内部实现-3"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#常用命令-2)常用命令",
          "slug": "常用命令-2"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景-3)应用场景",
          "slug": "应用场景-3"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#set)Set",
          "slug": "set"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#介绍-4)介绍",
          "slug": "介绍-4"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#内部实现-4)内部实现",
          "slug": "内部实现-4"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#常用命令-3)常用命令",
          "slug": "常用命令-3"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景-4)应用场景",
          "slug": "应用场景-4"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#zset)Zset",
          "slug": "zset"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#介绍-5)介绍",
          "slug": "介绍-5"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#内部实现-5)内部实现",
          "slug": "内部实现-5"
        },
        {
          "level": 3,
          "title": "常用命令",
          "slug": "常用命令-4"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景-5)应用场景",
          "slug": "应用场景-5"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#bitmap)BitMap",
          "slug": "bitmap"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#介绍-6)介绍",
          "slug": "介绍-6"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#内部实现-6)内部实现",
          "slug": "内部实现-6"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#常用命令-5)常用命令",
          "slug": "常用命令-5"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景-6)应用场景",
          "slug": "应用场景-6"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#hyperloglog)HyperLogLog",
          "slug": "hyperloglog"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#介绍-7)介绍",
          "slug": "介绍-7"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#内部实现-7)内部实现",
          "slug": "内部实现-7"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#常见命令)常见命令",
          "slug": "常见命令"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景-7)应用场景",
          "slug": "应用场景-7"
        },
        {
          "level": 2,
          "title": "GEO",
          "slug": "geo"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#内部实现-8)内部实现",
          "slug": "内部实现-8"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#常用命令-6)常用命令",
          "slug": "常用命令-6"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景-8)应用场景",
          "slug": "应用场景-8"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#stream)Stream",
          "slug": "stream"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#介绍-8)介绍",
          "slug": "介绍-8"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#常见命令-2)常见命令",
          "slug": "常见命令-2"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#应用场景-9)应用场景",
          "slug": "应用场景-9"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/data_struct/command.html#总结)总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#键值对数据库是怎么实现的)键值对数据库是怎么实现的？",
          "slug": "键值对数据库是怎么实现的"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#sds)SDS",
          "slug": "sds"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#c-语言字符串的缺陷)C 语言字符串的缺陷",
          "slug": "c-语言字符串的缺陷"
        },
        {
          "level": 3,
          "title": "SDS 结构设计",
          "slug": "sds-结构设计"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#链表)链表",
          "slug": "链表"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#链表节点结构设计)链表节点结构设计",
          "slug": "链表节点结构设计"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#链表结构设计)链表结构设计",
          "slug": "链表结构设计"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#链表的优势与缺陷)链表的优势与缺陷",
          "slug": "链表的优势与缺陷"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#压缩列表)压缩列表",
          "slug": "压缩列表"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#压缩列表结构设计)压缩列表结构设计",
          "slug": "压缩列表结构设计"
        },
        {
          "level": 3,
          "title": "连锁更新",
          "slug": "连锁更新"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#压缩列表的缺陷)压缩列表的缺陷",
          "slug": "压缩列表的缺陷"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#哈希表)哈希表",
          "slug": "哈希表"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#哈希表结构设计)哈希表结构设计",
          "slug": "哈希表结构设计"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#哈希冲突)哈希冲突",
          "slug": "哈希冲突"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#链式哈希)链式哈希",
          "slug": "链式哈希"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#rehash)rehash",
          "slug": "rehash"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#渐进式-rehash)渐进式 rehash",
          "slug": "渐进式-rehash"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#rehash-触发条件)rehash 触发条件",
          "slug": "rehash-触发条件"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#整数集合)整数集合",
          "slug": "整数集合"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#整数集合结构设计)整数集合结构设计",
          "slug": "整数集合结构设计"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#整数集合的升级操作)整数集合的升级操作",
          "slug": "整数集合的升级操作"
        },
        {
          "level": 2,
          "title": "跳表",
          "slug": "跳表"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#跳表结构设计)跳表结构设计",
          "slug": "跳表结构设计"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#跳表节点查询过程)跳表节点查询过程",
          "slug": "跳表节点查询过程"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#跳表节点层数设置)跳表节点层数设置",
          "slug": "跳表节点层数设置"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#为什么用跳表而不用平衡树)为什么用跳表而不用平衡树？",
          "slug": "为什么用跳表而不用平衡树"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#quicklist)quicklist",
          "slug": "quicklist"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#quicklist-结构设计)quicklist 结构设计",
          "slug": "quicklist-结构设计"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#listpack)listpack",
          "slug": "listpack"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#listpack-结构设计)listpack 结构设计",
          "slug": "listpack-结构设计"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#总结)总结",
          "slug": "总结-2"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/datastruct/datastruct.html#读者问答)读者问答",
          "slug": "读者问答"
        }
      ]
    },
    {
      "title": "什么是缓存雪崩、击穿、穿透？",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E7%BC%93%E5%AD%98%E7%AF%87.html",
      "relativePath": "Notes/数据库/Redis/缓存篇.md",
      "key": "v-203f8320",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E7%BC%93%E5%AD%98%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是缓存雪崩、击穿、穿透？",
          "slug": "什么是缓存雪崩、击穿、穿透"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/cache_problem.html#缓存雪崩)缓存雪崩",
          "slug": "缓存雪崩"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/cache_problem.html#缓存击穿)缓存击穿",
          "slug": "缓存击穿"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/cache_problem.html#缓存穿透)缓存穿透",
          "slug": "缓存穿透"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/cache_problem.html#总结)总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "数据库和缓存如何保证一致性？",
          "slug": "数据库和缓存如何保证一致性"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/architecture/mysqlredisconsistency.html#先更新数据库-还是先更新缓存)先更新数据库，还是先更新缓存？",
          "slug": "先更新数据库-还是先更新缓存"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/architecture/mysqlredisconsistency.html#先更新数据库-还是先删除缓存)先更新数据库，还是先删除缓存？",
          "slug": "先更新数据库-还是先删除缓存"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/architecture/mysqlredisconsistency.html#小结)小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/architecture/mysqlredisconsistency.html#前情回顾)前情回顾",
          "slug": "前情回顾"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/architecture/mysqlredisconsistency.html#如何保证两个操作都能执行成功)如何保证两个操作都能执行成功？",
          "slug": "如何保证两个操作都能执行成功"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/architecture/mysqlredisconsistency.html#老板发饼啦)老板发饼啦",
          "slug": "老板发饼啦"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/architecture/mysqlredisconsistency.html#读者提问)读者提问",
          "slug": "读者提问"
        }
      ]
    },
    {
      "title": "Redis与MySQL双写一致性如何保证？",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E7%BC%93%E5%AD%98%E4%B8%80%E6%89%A7%E8%A1%8C%E9%97%AE%E9%A2%98.html",
      "relativePath": "Notes/数据库/Redis/缓存一执行问题.md",
      "key": "v-65f002f3",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E7%BC%93%E5%AD%98%E4%B8%80%E6%89%A7%E8%A1%8C%E9%97%AE%E9%A2%98.html",
      "headers": [
        {
          "level": 2,
          "title": "Redis与MySQL双写一致性如何保证？",
          "slug": "redis与mysql双写一致性如何保证"
        },
        {
          "level": 3,
          "title": "不更新缓存，而是删除缓存",
          "slug": "不更新缓存-而是删除缓存"
        },
        {
          "level": 3,
          "title": "先操作缓存，还是先操作数据库",
          "slug": "先操作缓存-还是先操作数据库"
        },
        {
          "level": 3,
          "title": "我非要数据库和缓存数据强一致怎么办",
          "slug": "我非要数据库和缓存数据强一致怎么办"
        }
      ]
    },
    {
      "title": "高可拓展：分片技术（Redis Cluster）详解",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E9%9B%86%E7%BE%A4-%E5%88%86%E7%89%87%E6%8A%80%E6%9C%AF.html",
      "relativePath": "Notes/数据库/Redis/集群-分片技术.md",
      "key": "v-f338cc6a",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E9%9B%86%E7%BE%A4-%E5%88%86%E7%89%87%E6%8A%80%E6%9C%AF.html",
      "headers": [
        {
          "level": 2,
          "title": "高可拓展：分片技术（Redis Cluster）详解",
          "slug": "高可拓展-分片技术-redis-cluster-详解"
        },
        {
          "level": 2,
          "title": "Redis 集群的设计目标",
          "slug": "redis-集群的设计目标"
        },
        {
          "level": 3,
          "title": "[#](#redis-cluster-goals) Redis Cluster goals",
          "slug": "redis-cluster-goals"
        },
        {
          "level": 3,
          "title": "[#](#clients-and-servers-roles-in-the-redis-cluster-protocol) Clients and Servers roles in the Redis Cluster protocol",
          "slug": "clients-and-servers-roles-in-the-redis-cluster-protocol"
        },
        {
          "level": 3,
          "title": "[#](#write-safety) Write safety",
          "slug": "write-safety"
        },
        {
          "level": 3,
          "title": "[#](#可用性-availability) 可用性(Availability)",
          "slug": "可用性-availability"
        },
        {
          "level": 3,
          "title": "[#](#性能-performance) 性能(Performance)",
          "slug": "性能-performance"
        },
        {
          "level": 3,
          "title": "[#](#避免合并-merge-操作) 避免合并(merge)操作",
          "slug": "避免合并-merge-操作"
        },
        {
          "level": 2,
          "title": "[#](#主要模块介绍) 主要模块介绍",
          "slug": "主要模块介绍"
        },
        {
          "level": 3,
          "title": "[#](#哈希槽-hash-slot) 哈希槽(Hash Slot)",
          "slug": "哈希槽-hash-slot"
        },
        {
          "level": 3,
          "title": "[#](#keys-hash-tags) Keys hash tags",
          "slug": "keys-hash-tags"
        },
        {
          "level": 3,
          "title": "[#](#cluster-nodes属性) Cluster nodes属性",
          "slug": "cluster-nodes属性"
        },
        {
          "level": 3,
          "title": "[#](#cluster总线) Cluster总线",
          "slug": "cluster总线"
        },
        {
          "level": 3,
          "title": "[#](#集群拓扑) 集群拓扑",
          "slug": "集群拓扑"
        },
        {
          "level": 3,
          "title": "[#](#节点握手) 节点握手",
          "slug": "节点握手"
        },
        {
          "level": 2,
          "title": "[#](#请求重定向) 请求重定向",
          "slug": "请求重定向"
        },
        {
          "level": 3,
          "title": "[#](#moved-重定向) Moved 重定向",
          "slug": "moved-重定向"
        },
        {
          "level": 3,
          "title": "[#](#ask-重定向) ASK 重定向",
          "slug": "ask-重定向"
        },
        {
          "level": 3,
          "title": "[#](#smart客户端) smart客户端",
          "slug": "smart客户端"
        },
        {
          "level": 2,
          "title": "[#](#状态检测及维护) 状态检测及维护",
          "slug": "状态检测及维护"
        },
        {
          "level": 3,
          "title": "[#](#gossip协议) Gossip协议",
          "slug": "gossip协议"
        },
        {
          "level": 3,
          "title": "通讯状态和维护",
          "slug": "通讯状态和维护"
        },
        {
          "level": 2,
          "title": "[#](#故障恢复-failover) 故障恢复（Failover）",
          "slug": "故障恢复-failover"
        },
        {
          "level": 2,
          "title": "[#](#扩容-缩容) 扩容&缩容",
          "slug": "扩容-缩容"
        },
        {
          "level": 3,
          "title": "[#](#扩容) 扩容",
          "slug": "扩容"
        },
        {
          "level": 3,
          "title": "[#](#缩容) 缩容",
          "slug": "缩容"
        },
        {
          "level": 2,
          "title": "[#](#更深入理解) 更深入理解",
          "slug": "更深入理解"
        },
        {
          "level": 3,
          "title": "[#](#为什么redis-cluster的hash-slot-是16384) 为什么Redis Cluster的Hash Slot 是16384？",
          "slug": "为什么redis-cluster的hash-slot-是16384"
        },
        {
          "level": 3,
          "title": "[#](#为什么redis-cluster中不建议使用发布订阅呢) 为什么Redis Cluster中不建议使用发布订阅呢？",
          "slug": "为什么redis-cluster中不建议使用发布订阅呢"
        },
        {
          "level": 2,
          "title": "[#](#其它常见方案) 其它常见方案",
          "slug": "其它常见方案"
        },
        {
          "level": 3,
          "title": "[#](#redis-sentinel-集群-keepalived-haproxy) Redis Sentinel 集群 + Keepalived/Haproxy",
          "slug": "redis-sentinel-集群-keepalived-haproxy"
        },
        {
          "level": 3,
          "title": "[#](#twemproxy) Twemproxy",
          "slug": "twemproxy"
        },
        {
          "level": 3,
          "title": "[#](#codis) Codis",
          "slug": "codis"
        }
      ]
    },
    {
      "title": "主从复制是怎么实现的？",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E9%AB%98%E5%8F%AF%E7%94%A8%E7%AF%87.html",
      "relativePath": "Notes/数据库/Redis/高可用篇.md",
      "key": "v-58bcbc83",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E9%AB%98%E5%8F%AF%E7%94%A8%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#第一次同步)第一次同步",
          "slug": "第一次同步"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#命令传播)命令传播",
          "slug": "命令传播"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#分摊主服务器的压力)分摊主服务器的压力",
          "slug": "分摊主服务器的压力"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#增量复制)增量复制",
          "slug": "增量复制"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#面试题)面试题",
          "slug": "面试题"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#redis主从节点时长连接还是短连接)Redis主从节点时长连接还是短连接？",
          "slug": "redis主从节点时长连接还是短连接"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#怎么判断-redis-某个节点是否正常工作)怎么判断 Redis 某个节点是否正常工作？",
          "slug": "怎么判断-redis-某个节点是否正常工作"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#主从复制架构中-过期key如何处理)主从复制架构中，过期key如何处理？",
          "slug": "主从复制架构中-过期key如何处理"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#redis-是同步复制还是异步复制)Redis 是同步复制还是异步复制？",
          "slug": "redis-是同步复制还是异步复制"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#主从复制中两个-buffer-replication-buffer-、repl-backlog-buffer-有什么区别)主从复制中两个 Buffer(replication buffer 、repl backlog buffer)有什么区别？",
          "slug": "主从复制中两个-buffer-replication-buffer-、repl-backlog-buffer-有什么区别"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#如何应对主从数据不一致)如何应对主从数据不一致？",
          "slug": "如何应对主从数据不一致"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#主从切换如何减少数据丢失)主从切换如何减少数据丢失？",
          "slug": "主从切换如何减少数据丢失"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/masterslavereplication.html#主从如何做到故障自动切换)主从如何做到故障自动切换？",
          "slug": "主从如何做到故障自动切换"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#为什么要有哨兵机制)为什么要有哨兵机制？",
          "slug": "为什么要有哨兵机制"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#哨兵机制是如何工作的)哨兵机制是如何工作的？",
          "slug": "哨兵机制是如何工作的"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#如何判断主节点真的故障了)如何判断主节点真的故障了？",
          "slug": "如何判断主节点真的故障了"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#由哪个哨兵进行主从故障转移)由哪个哨兵进行主从故障转移？",
          "slug": "由哪个哨兵进行主从故障转移"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#主从故障转移的过程是怎样的)主从故障转移的过程是怎样的？",
          "slug": "主从故障转移的过程是怎样的"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#步骤一-选出新主节点)步骤一：选出新主节点",
          "slug": "步骤一-选出新主节点"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#步骤二-将从节点指向新主节点)步骤二：将从节点指向新主节点",
          "slug": "步骤二-将从节点指向新主节点"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#步骤三-通知客户的主节点已更换)步骤三：通知客户的主节点已更换",
          "slug": "步骤三-通知客户的主节点已更换"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#步骤四-将旧主节点变为从节点)步骤四：将旧主节点变为从节点",
          "slug": "步骤四-将旧主节点变为从节点"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#哨兵集群是如何组成的)哨兵集群是如何组成的？",
          "slug": "哨兵集群是如何组成的"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/cluster/sentinel.html#总结)总结",
          "slug": "总结-2"
        }
      ]
    },
    {
      "title": "面试篇",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E9%9D%A2%E8%AF%95%E7%AF%87.html",
      "relativePath": "Notes/数据库/Redis/面试篇.md",
      "key": "v-2a347ca1",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E9%9D%A2%E8%AF%95%E7%AF%87.html",
      "headers": [
        {
          "level": 2,
          "title": "面试篇",
          "slug": "面试篇"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#认识-redis)认识 Redis",
          "slug": "认识-redis"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#什么是-redis)什么是 Redis？",
          "slug": "什么是-redis"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-和-memcached-有什么区别)Redis 和 Memcached 有什么区别？",
          "slug": "redis-和-memcached-有什么区别"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#为什么用-redis-作为-mysql-的缓存)为什么用 Redis 作为 MySQL 的缓存？",
          "slug": "为什么用-redis-作为-mysql-的缓存"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-数据结构)Redis 数据结构",
          "slug": "redis-数据结构"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-数据类型以及使用场景分别是什么)Redis 数据类型以及使用场景分别是什么？",
          "slug": "redis-数据类型以及使用场景分别是什么"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#五种常见的-redis-数据类型是怎么实现)五种常见的 Redis 数据类型是怎么实现？",
          "slug": "五种常见的-redis-数据类型是怎么实现"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-线程模型)Redis 线程模型",
          "slug": "redis-线程模型"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-是单线程吗)Redis 是单线程吗？",
          "slug": "redis-是单线程吗"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-单线程模式是怎样的)Redis 单线程模式是怎样的？",
          "slug": "redis-单线程模式是怎样的"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-采用单线程为什么还这么快)Redis 采用单线程为什么还这么快？",
          "slug": "redis-采用单线程为什么还这么快"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-6-0-之前为什么使用单线程)Redis 6.0 之前为什么使用单线程？",
          "slug": "redis-6-0-之前为什么使用单线程"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-6-0-之后为什么引入了多线程)Redis 6.0 之后为什么引入了多线程？",
          "slug": "redis-6-0-之后为什么引入了多线程"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-持久化)Redis 持久化",
          "slug": "redis-持久化"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-如何实现数据不丢失)Redis 如何实现数据不丢失？",
          "slug": "redis-如何实现数据不丢失"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#aof-日志是如何实现的)AOF 日志是如何实现的？",
          "slug": "aof-日志是如何实现的"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#rdb-快照是如何实现的呢)RDB 快照是如何实现的呢？",
          "slug": "rdb-快照是如何实现的呢"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#为什么会有混合持久化)为什么会有混合持久化？",
          "slug": "为什么会有混合持久化"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-集群)Redis 集群",
          "slug": "redis-集群"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-如何实现服务高可用)Redis 如何实现服务高可用？",
          "slug": "redis-如何实现服务高可用"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#集群脑裂导致数据丢失怎么办)集群脑裂导致数据丢失怎么办？",
          "slug": "集群脑裂导致数据丢失怎么办"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-过期删除与内存淘汰)Redis 过期删除与内存淘汰",
          "slug": "redis-过期删除与内存淘汰"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-使用的过期删除策略是什么)Redis 使用的过期删除策略是什么？",
          "slug": "redis-使用的过期删除策略是什么"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-持久化时-对过期键会如何处理的)Redis 持久化时，对过期键会如何处理的？",
          "slug": "redis-持久化时-对过期键会如何处理的"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-主从模式中-对过期键会如何处理)Redis 主从模式中，对过期键会如何处理？",
          "slug": "redis-主从模式中-对过期键会如何处理"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-内存满了-会发生什么)Redis 内存满了，会发生什么？",
          "slug": "redis-内存满了-会发生什么"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-内存淘汰策略有哪些)Redis 内存淘汰策略有哪些？",
          "slug": "redis-内存淘汰策略有哪些"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#lru-算法和-lfu-算法有什么区别)LRU 算法和 LFU 算法有什么区别？",
          "slug": "lru-算法和-lfu-算法有什么区别"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-缓存设计)Redis 缓存设计",
          "slug": "redis-缓存设计"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#如何避免缓存雪崩、缓存击穿、缓存穿透)如何避免缓存雪崩、缓存击穿、缓存穿透？",
          "slug": "如何避免缓存雪崩、缓存击穿、缓存穿透"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#如何设计一个缓存策略-可以动态缓存热点数据呢)如何设计一个缓存策略，可以动态缓存热点数据呢？",
          "slug": "如何设计一个缓存策略-可以动态缓存热点数据呢"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#说说常见的缓存更新策略)说说常见的缓存更新策略？",
          "slug": "说说常见的缓存更新策略"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#如何保证缓存和数据库数据的一致性)如何保证缓存和数据库数据的一致性？",
          "slug": "如何保证缓存和数据库数据的一致性"
        },
        {
          "level": 2,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-实战)Redis 实战",
          "slug": "redis-实战"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-如何实现延迟队列)Redis 如何实现延迟队列？",
          "slug": "redis-如何实现延迟队列"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-的大-key-如何处理)Redis 的大 key 如何处理？",
          "slug": "redis-的大-key-如何处理"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-管道有什么用)Redis 管道有什么用？",
          "slug": "redis-管道有什么用"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#redis-事务支持回滚吗)Redis 事务支持回滚吗？",
          "slug": "redis-事务支持回滚吗"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/redis/base/redis_interview.html#如何用-redis-实现分布式锁的)如何用 Redis 实现分布式锁的？",
          "slug": "如何用-redis-实现分布式锁的"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%9F%BA%E7%A1%80%E5%92%8C%E5%8E%9F%E7%90%86/%E8%AE%B0%E5%BD%95.html",
      "relativePath": "Notes/数据库/基础和原理/记录.md",
      "key": "v-729e206e",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%9F%BA%E7%A1%80%E5%92%8C%E5%8E%9F%E7%90%86/%E8%AE%B0%E5%BD%95.html"
    },
    {
      "title": "函数依赖",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%9F%BA%E7%A1%80%E5%92%8C%E5%8E%9F%E7%90%86/SQL-DB.html",
      "relativePath": "Notes/数据库/基础和原理/SQL-DB.md",
      "key": "v-62d2ecfe",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%9F%BA%E7%A1%80%E5%92%8C%E5%8E%9F%E7%90%86/SQL-DB.html",
      "headers": [
        {
          "level": 2,
          "title": "函数依赖",
          "slug": "函数依赖"
        },
        {
          "level": 2,
          "title": "[#](#异常) 异常",
          "slug": "异常"
        },
        {
          "level": 2,
          "title": "[#](#范式) 范式",
          "slug": "范式"
        },
        {
          "level": 3,
          "title": "[#](#_1-第一范式-1nf) 1. 第一范式 (1NF)",
          "slug": "_1-第一范式-1nf"
        },
        {
          "level": 3,
          "title": "[#](#_2-第二范式-2nf) 2. 第二范式 (2NF)",
          "slug": "_2-第二范式-2nf"
        },
        {
          "level": 3,
          "title": "[#](#_3-第三范式-3nf) 3. 第三范式 (3NF)",
          "slug": "_3-第三范式-3nf"
        },
        {
          "level": 2,
          "title": "",
          "slug": ""
        },
        {
          "level": 3,
          "title": "ACID",
          "slug": "acid"
        },
        {
          "level": 2,
          "title": "二、并发一致性问题",
          "slug": "二、并发一致性问题"
        },
        {
          "level": 3,
          "title": "[#](#丢失修改) 丢失修改",
          "slug": "丢失修改"
        },
        {
          "level": 3,
          "title": "[#](#读脏数据) 读脏数据",
          "slug": "读脏数据"
        },
        {
          "level": 3,
          "title": "[#](#不可重复读) 不可重复读",
          "slug": "不可重复读"
        },
        {
          "level": 3,
          "title": "[#](#幻影读) 幻读",
          "slug": "幻读"
        },
        {
          "level": 3,
          "title": "封锁协议",
          "slug": "封锁协议"
        },
        {
          "level": 2,
          "title": "四、隔离级别",
          "slug": "四、隔离级别"
        },
        {
          "level": 3,
          "title": "[#](#未提交读-read-uncommitted) 读未提交(READ UNCOMMITTED)",
          "slug": "读未提交-read-uncommitted"
        },
        {
          "level": 3,
          "title": "[#](#提交读-read-committed) 提交读(READ COMMITTED)",
          "slug": "提交读-read-committed"
        },
        {
          "level": 3,
          "title": "[#](#可重复读-repeatable-read) 可重复读(REPEATABLE READ)",
          "slug": "可重复读-repeatable-read"
        },
        {
          "level": 3,
          "title": "[#](#可串行化-serializable) 可串行化(SERIALIZABLE)",
          "slug": "可串行化-serializable"
        },
        {
          "level": 2,
          "title": "五、多版本并发控制",
          "slug": "五、多版本并发控制"
        },
        {
          "level": 3,
          "title": "[#](#版本号) 版本号",
          "slug": "版本号"
        },
        {
          "level": 3,
          "title": "[#](#隐藏的列) 隐藏的列",
          "slug": "隐藏的列"
        }
      ]
    },
    {
      "title": "编译MySQL源码并执行-mac-version",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/%E7%BC%96%E8%AF%91MySQL%E6%BA%90%E7%A0%81%E5%B9%B6%E6%89%A7%E8%A1%8C.html",
      "relativePath": "Notes/数据库/编译MySQL源码并执行.md",
      "key": "v-31e3ae54",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E5%BA%93/%E7%BC%96%E8%AF%91MySQL%E6%BA%90%E7%A0%81%E5%B9%B6%E6%89%A7%E8%A1%8C.html",
      "headers": [
        {
          "level": 2,
          "title": "编译MySQL源码并执行-mac-version",
          "slug": "编译mysql源码并执行-mac-version"
        }
      ]
    },
    {
      "title": "Skip List 跳表",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%A1%A8.html",
      "relativePath": "Notes/数据结构/跳表.md",
      "key": "v-51b15459",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%A1%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "Skip List 跳表",
          "slug": "skip-list-跳表"
        },
        {
          "level": 3,
          "title": "理解跳表，从单链表开始说起",
          "slug": "理解跳表-从单链表开始说起"
        },
        {
          "level": 3,
          "title": "查找的时间复杂度",
          "slug": "查找的时间复杂度"
        },
        {
          "level": 3,
          "title": "空间复杂度",
          "slug": "空间复杂度"
        },
        {
          "level": 3,
          "title": "插入数据",
          "slug": "插入数据"
        },
        {
          "level": 3,
          "title": "删除数据",
          "slug": "删除数据"
        },
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 3,
          "title": "为什么Redis选择使用跳表而不是红黑树来实现有序集合？",
          "slug": "为什么redis选择使用跳表而不是红黑树来实现有序集合"
        }
      ]
    },
    {
      "title": "红黑树",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%A2%E9%BB%91%E6%A0%91.html",
      "relativePath": "Notes/数据结构/红黑树.md",
      "key": "v-3310322e",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%A2%E9%BB%91%E6%A0%91.html",
      "headers": [
        {
          "level": 2,
          "title": "红黑树",
          "slug": "红黑树"
        },
        {
          "level": 2,
          "title": "RBTree",
          "slug": "rbtree"
        },
        {
          "level": 3,
          "title": "RBTree的定义",
          "slug": "rbtree的定义"
        },
        {
          "level": 3,
          "title": "RBTree的旋转操作",
          "slug": "rbtree的旋转操作"
        },
        {
          "level": 3,
          "title": "RBTree的查找操作",
          "slug": "rbtree的查找操作"
        },
        {
          "level": 3,
          "title": "RBTree的插入操作",
          "slug": "rbtree的插入操作"
        },
        {
          "level": 3,
          "title": "RBTree的删除操作",
          "slug": "rbtree的删除操作"
        },
        {
          "level": 3,
          "title": "RBTree的Java实现",
          "slug": "rbtree的java实现"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "RPC",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/RPC.html",
      "relativePath": "Notes/计算机网络/RPC.md",
      "key": "v-625ae360",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/RPC.html",
      "headers": [
        {
          "level": 2,
          "title": "RPC",
          "slug": "rpc"
        },
        {
          "level": 2,
          "title": "1、实现技术方案",
          "slug": "_1、实现技术方案"
        },
        {
          "level": 2,
          "title": "2、RPC框架架构",
          "slug": "_2、rpc框架架构"
        },
        {
          "level": 2,
          "title": "3、 具体实现",
          "slug": "_3、-具体实现"
        }
      ]
    },
    {
      "title": "TCP",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP.html",
      "relativePath": "Notes/计算机网络/TCP.md",
      "key": "v-43253e40",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP.html",
      "headers": [
        {
          "level": 2,
          "title": "可靠数据传输原理",
          "slug": "可靠数据传输原理"
        },
        {
          "level": 2,
          "title": "自动重传请求(Automatic Repeat reQuest, ARQ)协议",
          "slug": "自动重传请求-automatic-repeat-request-arq-协议"
        },
        {
          "level": 2,
          "title": "回退N步 (Go・Back・N, GBN)和选择重传(Selective Repeat, SR)",
          "slug": "回退n步-go・back・n-gbn-和选择重传-selective-repeat-sr"
        },
        {
          "level": 3,
          "title": "MSS和MTU",
          "slug": "mss和mtu"
        },
        {
          "level": 3,
          "title": "客户端或者服务器同一端口可以同时建议TCP和UDP连接吗》",
          "slug": "客户端或者服务器同一端口可以同时建议tcp和udp连接吗》"
        },
        {
          "level": 3,
          "title": "客户端的同一个端口可以同时于服务器建立多个TCP连接吗？",
          "slug": "客户端的同一个端口可以同时于服务器建立多个tcp连接吗"
        },
        {
          "level": 3,
          "title": "SYN泛洪攻击",
          "slug": "syn泛洪攻击"
        },
        {
          "level": 3,
          "title": "TCP第四次挥手后为什么要经过TIME_WAIT状态？",
          "slug": "tcp第四次挥手后为什么要经过time-wait状态"
        }
      ]
    },
    {
      "title": "Cookie和Session",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Session%E5%92%8CCookie.html",
      "relativePath": "Notes/计算机网络/Session和Cookie.md",
      "key": "v-07464447",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Session%E5%92%8CCookie.html",
      "headers": [
        {
          "level": 2,
          "title": "Cookie和Session",
          "slug": "cookie和session"
        },
        {
          "level": 2,
          "title": "什么是Cookie?",
          "slug": "什么是cookie"
        },
        {
          "level": 2,
          "title": "什么是Session?",
          "slug": "什么是session"
        },
        {
          "level": 2,
          "title": "Cookie与Session的区别",
          "slug": "cookie与session的区别"
        },
        {
          "level": 2,
          "title": "禁用Cookie会怎样?",
          "slug": "禁用cookie会怎样"
        },
        {
          "level": 2,
          "title": "分布式系统中Session如何处理?",
          "slug": "分布式系统中session如何处理"
        },
        {
          "level": 2,
          "title": "同源策略与跨域请求（跨域）",
          "slug": "同源策略与跨域请求-跨域"
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        }
      ]
    },
    {
      "title": "HTTP详解",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/HTTP%E8%AF%A6%E8%A7%A3.html",
      "relativePath": "Notes/计算机网络/HTTP详解.md",
      "key": "v-7aedeb46",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/HTTP%E8%AF%A6%E8%A7%A3.html",
      "headers": [
        {
          "level": 3,
          "title": "GET 和 POST 方法都是安全和幂等的吗？",
          "slug": "get-和-post-方法都是安全和幂等的吗"
        },
        {
          "level": 2,
          "title": "HTTP 缓存技术",
          "slug": "http-缓存技术"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/network/2http/httpinterview.html#http-缓存有哪些实现方式)HTTP 缓存有哪些实现方式？",
          "slug": "http-缓存有哪些实现方式"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/network/2http/httpinterview.html#什么是强制缓存)什么是强制缓存？",
          "slug": "什么是强制缓存"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/network/2http/httpinterview.html#什么是协商缓存)什么是协商缓存？",
          "slug": "什么是协商缓存"
        },
        {
          "level": 2,
          "title": "",
          "slug": ""
        },
        {
          "level": 2,
          "title": "HTTP协议\\(HTTP1.1\\HTTP2.0\\HTTP3.0)",
          "slug": "http协议-http1-1-http2-0-http3-0"
        },
        {
          "level": 2,
          "title": "HTTP和HTTPS的关系",
          "slug": "http和https的关系"
        },
        {
          "level": 3,
          "title": "HTTP 与 HTTPS 有哪些区别？",
          "slug": "http-与-https-有哪些区别"
        },
        {
          "level": 3,
          "title": "[#](https://www.xiaolincoding.com/network/2http/httpinterview.html#https-解决了-http-的哪些问题)HTTPS 解决了 HTTP 的哪些问题？",
          "slug": "https-解决了-http-的哪些问题"
        },
        {
          "level": 3,
          "title": "",
          "slug": "-2"
        },
        {
          "level": 3,
          "title": "HTTPS 是如何建立连接的？其间交互了什么？",
          "slug": "https-是如何建立连接的-其间交互了什么"
        },
        {
          "level": 2,
          "title": "RSA 握手过程",
          "slug": "rsa-握手过程"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/network/2http/httpsrsa.html#tls-第一次握手)TLS 第一次握手",
          "slug": "tls-第一次握手"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/network/2http/httpsrsa.html#tls-第二次握手)TLS 第二次握手",
          "slug": "tls-第二次握手"
        },
        {
          "level": 3,
          "title": "客户端验证证书",
          "slug": "客户端验证证书"
        },
        {
          "level": 3,
          "title": "TLS 第三次握手",
          "slug": "tls-第三次握手"
        },
        {
          "level": 3,
          "title": "[#](https://xiaolincoding.com/network/2http/httpsrsa.html#tls-第四次握手)TLS 第四次握手",
          "slug": "tls-第四次握手"
        },
        {
          "level": 2,
          "title": "[#](https://xiaolincoding.com/network/2http/httpsrsa.html#rsa-算法的缺陷)RSA 算法的缺陷",
          "slug": "rsa-算法的缺陷"
        }
      ]
    },
    {
      "title": "深入理解什么是LSM-Tree",
      "frontmatter": {},
      "regularPath": "/Notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/LSM-tree.html",
      "relativePath": "Notes/数据结构/LSM-tree.md",
      "key": "v-fc4b96a2",
      "path": "/Notes/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/LSM-tree.html",
      "headers": [
        {
          "level": 2,
          "title": "深入理解什么是LSM-Tree",
          "slug": "深入理解什么是lsm-tree"
        }
      ]
    },
    {
      "title": "UDP",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/UDP.html",
      "relativePath": "Notes/计算机网络/UDP.md",
      "key": "v-7db46640",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/UDP.html"
    },
    {
      "title": "应用层协议",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE.html",
      "relativePath": "Notes/计算机网络/应用层协议.md",
      "key": "v-26c81124",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE.html",
      "headers": [
        {
          "level": 2,
          "title": "1.Web",
          "slug": "_1-web"
        },
        {
          "level": 3,
          "title": "1.1 HTTP",
          "slug": "_1-1-http"
        },
        {
          "level": 2,
          "title": "2 SMTP",
          "slug": "_2-smtp"
        },
        {
          "level": 2,
          "title": "3 DNS 域名系统",
          "slug": "_3-dns-域名系统"
        },
        {
          "level": 2,
          "title": "4 P2P文件分发",
          "slug": "_4-p2p文件分发"
        },
        {
          "level": 2,
          "title": "5 视频流与内容分发网",
          "slug": "_5-视频流与内容分发网"
        },
        {
          "level": 2,
          "title": "6. 套接字编程",
          "slug": "_6-套接字编程"
        },
        {
          "level": 3,
          "title": "6.1 UDP套接字编程",
          "slug": "_6-1-udp套接字编程"
        },
        {
          "level": 3,
          "title": "6.2 TCP 套接字编程",
          "slug": "_6-2-tcp-套接字编程"
        }
      ]
    },
    {
      "title": "传输层协议",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE.html",
      "relativePath": "Notes/计算机网络/传输层协议.md",
      "key": "v-2e4d018c",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE.html",
      "headers": [
        {
          "level": 2,
          "title": "1. TCP",
          "slug": "_1-tcp"
        },
        {
          "level": 3,
          "title": "1.1 多路复用和多路分解",
          "slug": "_1-1-多路复用和多路分解"
        }
      ]
    },
    {
      "title": "网络层协议-控制平面",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%B1%82%E5%8D%8F%E8%AE%AE-%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.html",
      "relativePath": "Notes/计算机网络/网络层协议-控制平面.md",
      "key": "v-9fc867f2",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%B1%82%E5%8D%8F%E8%AE%AE-%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.html",
      "headers": [
        {
          "level": 2,
          "title": "路由选择算法",
          "slug": "路由选择算法"
        },
        {
          "level": 3,
          "title": "链路状态路由选择算法",
          "slug": "链路状态路由选择算法"
        },
        {
          "level": 3,
          "title": "距离向量路由选择算法",
          "slug": "距离向量路由选择算法"
        },
        {
          "level": 2,
          "title": "因特网中自治系统内部的路由选择:OSPF",
          "slug": "因特网中自治系统内部的路由选择-ospf"
        },
        {
          "level": 2,
          "title": "ISP之间的路由选择:BGP",
          "slug": "isp之间的路由选择-bgp"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Notes/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91.html",
      "relativePath": "Notes/软件测试相关/测试开发.md",
      "key": "v-601cbcd1",
      "path": "/Notes/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91.html",
      "headers": [
        {
          "level": 2,
          "title": "测试开发面经",
          "slug": "测试开发面经"
        },
        {
          "level": 3,
          "title": "1.Unicode、UTF-8、UTF-16",
          "slug": "_1-unicode、utf-8、utf-16"
        }
      ]
    },
    {
      "title": "链路层与局域网",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91.html",
      "relativePath": "Notes/计算机网络/链路层和局域网.md",
      "key": "v-022670ae",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E9%93%BE%E8%B7%AF%E5%B1%82%E5%92%8C%E5%B1%80%E5%9F%9F%E7%BD%91.html",
      "headers": [
        {
          "level": 2,
          "title": "链路层提供的服务",
          "slug": "链路层提供的服务"
        },
        {
          "level": 2,
          "title": "多路访问控制",
          "slug": "多路访问控制"
        },
        {
          "level": 3,
          "title": "信道划分协议",
          "slug": "信道划分协议"
        },
        {
          "level": 3,
          "title": "随机访问协议",
          "slug": "随机访问协议"
        },
        {
          "level": 3,
          "title": "轮流协议",
          "slug": "轮流协议"
        },
        {
          "level": 2,
          "title": "链路层寻址与ARP地址解析协议",
          "slug": "链路层寻址与arp地址解析协议"
        },
        {
          "level": 3,
          "title": "1.MAC地址",
          "slug": "_1-mac地址"
        },
        {
          "level": 3,
          "title": "2.地址解析协议ARP",
          "slug": "_2-地址解析协议arp"
        },
        {
          "level": 3,
          "title": "3.交换机与路由器的比较",
          "slug": "_3-交换机与路由器的比较"
        },
        {
          "level": 3,
          "title": "4.web页面请求过程",
          "slug": "_4-web页面请求过程"
        }
      ]
    },
    {
      "title": "网络层协议-数据平面",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%B1%82%E5%8D%8F%E8%AE%AE-%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2.html",
      "relativePath": "Notes/计算机网络/网络层协议-数据平面.md",
      "key": "v-0d0b9088",
      "path": "/Notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%B1%82%E5%8D%8F%E8%AE%AE-%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2.html",
      "headers": [
        {
          "level": 2,
          "title": "转发和路由选择：数据平面和控制平面",
          "slug": "转发和路由选择-数据平面和控制平面"
        },
        {
          "level": 2,
          "title": "路由器工作原理",
          "slug": "路由器工作原理"
        },
        {
          "level": 2,
          "title": "路由器转发策略",
          "slug": "路由器转发策略"
        },
        {
          "level": 2,
          "title": "路由器交换策略",
          "slug": "路由器交换策略"
        },
        {
          "level": 2,
          "title": "网际协议IPv4，IPv6及寻址等",
          "slug": "网际协议ipv4-ipv6及寻址等"
        },
        {
          "level": 3,
          "title": "IPv4数据报格式",
          "slug": "ipv4数据报格式"
        },
        {
          "level": 3,
          "title": "子网、子网掩码",
          "slug": "子网、子网掩码"
        },
        {
          "level": 3,
          "title": "路由聚合",
          "slug": "路由聚合"
        },
        {
          "level": 3,
          "title": "分类编址（A，B，C, D）四类网络",
          "slug": "分类编址-a-b-c-d-四类网络"
        },
        {
          "level": 3,
          "title": "网络地址转换NAT",
          "slug": "网络地址转换nat"
        },
        {
          "level": 3,
          "title": "IPv6数据报格式",
          "slug": "ipv6数据报格式"
        }
      ]
    },
    {
      "title": "Code more, Cherish more",
      "frontmatter": {},
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-54402618",
      "path": "/"
    },
    {
      "title": "测试相关知识",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3/%E6%B5%8B%E8%AF%95%E7%9F%A5%E8%AF%86.html",
      "relativePath": "Notes/软件测试相关/测试知识.md",
      "key": "v-71acc841",
      "path": "/Notes/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3/%E6%B5%8B%E8%AF%95%E7%9F%A5%E8%AF%86.html",
      "headers": [
        {
          "level": 2,
          "title": "测试相关知识",
          "slug": "测试相关知识"
        },
        {
          "level": 3,
          "title": "1.单元测试",
          "slug": "_1-单元测试"
        },
        {
          "level": 3,
          "title": "2.API测试（灰盒测试（利用代码覆盖率）或者黑盒测试）",
          "slug": "_2-api测试-灰盒测试-利用代码覆盖率-或者黑盒测试"
        },
        {
          "level": 3,
          "title": "3.GUI测试（Graphical User Interface，简称GUI，又称图形用户接口）",
          "slug": "_3-gui测试-graphical-user-interface-简称gui-又称图形用户接口"
        }
      ]
    },
    {
      "title": "软件测试52讲",
      "frontmatter": {},
      "regularPath": "/Notes/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95.html",
      "relativePath": "Notes/软件测试相关/软件测试.md",
      "key": "v-433336ad",
      "path": "/Notes/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95.html",
      "headers": [
        {
          "level": 2,
          "title": "软件测试52讲",
          "slug": "软件测试52讲"
        }
      ]
    }
  ],
  "themeConfig": {
    "nav": [
      {
        "text": "首页",
        "link": "/"
      },
      {
        "text": "what?",
        "items": [
          {
            "text": "Github",
            "link": "https://github.com/IFANx"
          },
          {
            "text": "Gitee",
            "link": "https://gitee.com/IFANx"
          }
        ]
      }
    ],
    "sidebar": [
      {
        "title": "JVM",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "java的反射机制",
            "path": "/Notes/JVM/java的反射机制"
          },
          {
            "title": "Java集合",
            "path": "/Notes/JVM/Java集合"
          },
          {
            "title": "Java常用机制-SPI机制",
            "path": "/Notes/JVM/Java常用机制-SPI机制"
          },
          {
            "title": "ThreadLocal",
            "path": "/Notes/JVM/ThreadLocal"
          },
          {
            "title": "JVM相关",
            "path": "/Notes/JVM/JVM相关"
          },
          {
            "title": "Java基础",
            "path": "/Notes/JVM/Java基础"
          },
          {
            "title": "JUC",
            "path": "/Notes/JVM/JUC"
          },
          {
            "title": "Java注解",
            "path": "/Notes/JVM/Java注解"
          }
        ]
      },
      {
        "title": "Maven",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "Maven自定义依赖并推送到远程仓库",
            "path": "/Notes/Maven/Maven自定义依赖并推送到远程仓库"
          },
          {
            "title": "使用Nexus在云服务器搭建Maven私服",
            "path": "/Notes/Maven/使用Nexus在云服务器搭建Maven私服"
          }
        ]
      },
      {
        "title": "软件测试相关",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "测试知识",
            "path": "/Notes/软件测试相关/测试知识"
          },
          {
            "title": "软件测试",
            "path": "/Notes/软件测试相关/软件测试"
          },
          {
            "title": "测试开发",
            "path": "/Notes/软件测试相关/测试开发"
          }
        ]
      },
      {
        "title": "Redis",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "持久化篇",
            "path": "/Notes/数据库/Redis/持久化篇"
          },
          {
            "title": "缓存一执行问题",
            "path": "/Notes/数据库/Redis/缓存一执行问题"
          },
          {
            "title": "集群-分片技术",
            "path": "/Notes/数据库/Redis/集群-分片技术"
          },
          {
            "title": "数据类型篇",
            "path": "/Notes/数据库/Redis/数据类型篇"
          },
          {
            "title": "Redis面试题",
            "path": "/Notes/数据库/Redis/Redis面试题"
          },
          {
            "title": "缓存篇",
            "path": "/Notes/数据库/Redis/缓存篇"
          },
          {
            "title": "高可用篇",
            "path": "/Notes/数据库/Redis/高可用篇"
          },
          {
            "title": "面试篇",
            "path": "/Notes/数据库/Redis/面试篇"
          },
          {
            "title": "功能篇",
            "path": "/Notes/数据库/Redis/功能篇"
          }
        ]
      },
      {
        "title": "SpringBoot",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "Untitled 1",
            "path": "/Notes/JVM/SpringBoot/Untitled 1"
          },
          {
            "title": "SpringBoot接口 - 如何实现接口限流之分布式",
            "path": "/Notes/JVM/SpringBoot/SpringBoot接口 - 如何实现接口限流之分布式"
          },
          {
            "title": "SpringBoot接口 - 如何对接口进行签名",
            "path": "/Notes/JVM/SpringBoot/SpringBoot接口 - 如何对接口进行签名"
          },
          {
            "title": "SpringBoot集成MySQL - 基于JPA和Mybatis的封装",
            "path": "/Notes/JVM/SpringBoot/SpringBoot集成MySQL - 基于JPA和Mybatis的封装"
          },
          {
            "title": "SpringBoot集成MySQL - MyBatis-Plus基于字段隔离的多租户",
            "path": "/Notes/JVM/SpringBoot/SpringBoot集成MySQL - MyBatis-Plus基于字段隔离的多租户"
          },
          {
            "title": "SpringBoot常用注解",
            "path": "/Notes/JVM/SpringBoot/SpringBoot常用注解"
          },
          {
            "title": "SpringBoot",
            "path": "/Notes/JVM/SpringBoot/SpringBoot"
          },
          {
            "title": "SpringBoot接口 - 如何统一接口封装",
            "path": "/Notes/JVM/SpringBoot/SpringBoot接口 - 如何统一接口封装"
          },
          {
            "title": "SpringBoot应用部署 - 使用Docker Compose对容器编排管理",
            "path": "/Notes/JVM/SpringBoot/SpringBoot应用部署 - 使用Docker Compose对容器编排管理"
          },
          {
            "title": "SpringBoot入门-配置热部署devtools",
            "path": "/Notes/JVM/SpringBoot/SpringBoot入门-配置热部署devtools"
          },
          {
            "title": "SpringBoot接口 - 如何提供多个版本接口",
            "path": "/Notes/JVM/SpringBoot/SpringBoot接口 - 如何提供多个版本接口"
          },
          {
            "title": "SpringBoot集成文件 - 大文件的上传(异步，分片，断点续传和秒传)",
            "path": "/Notes/JVM/SpringBoot/SpringBoot集成文件 - 大文件的上传(异步，分片，断点续传和秒传)"
          },
          {
            "title": "SpringBoot集成Redis - Redis分布式锁的实现之Jedis(setNXPX+Lua)",
            "path": "/Notes/JVM/SpringBoot/SpringBoot集成Redis - Redis分布式锁的实现之Jedis(setNXPX+Lua)"
          },
          {
            "title": "SpringBoot集成文件-基础的文件上传和下载",
            "path": "/Notes/JVM/SpringBoot/SpringBoot集成文件-基础的文件上传和下载"
          },
          {
            "title": "Springboot集成WebSocket",
            "path": "/Notes/JVM/SpringBoot/Springboot集成WebSocket"
          },
          {
            "title": "SpringBoot接口 - 如何访问外部接口",
            "path": "/Notes/JVM/SpringBoot/SpringBoot接口 - 如何访问外部接口"
          },
          {
            "title": "SpringBoot接口 - 如何保证接口幂等",
            "path": "/Notes/JVM/SpringBoot/SpringBoot接口 - 如何保证接口幂等"
          },
          {
            "title": "SpringBoot接口 - 如何实现接口限流之单实例",
            "path": "/Notes/JVM/SpringBoot/SpringBoot接口 - 如何实现接口限流之单实例"
          },
          {
            "title": "SpringBoot集成Redis - 基于RedisTemplate+Jedis的数据操作",
            "path": "/Notes/JVM/SpringBoot/SpringBoot集成Redis - 基于RedisTemplate+Jedis的数据操作"
          },
          {
            "title": "SpringBoot集成MySQL - 基于JPA的封装",
            "path": "/Notes/JVM/SpringBoot/SpringBoot集成MySQL - 基于JPA的封装"
          },
          {
            "title": "SpringBoot应用部署 - 打包成jar部署",
            "path": "/Notes/JVM/SpringBoot/SpringBoot应用部署 - 打包成jar部署"
          },
          {
            "title": "SpringBoot接口 - 如何生成接口文档之Swagger技术栈",
            "path": "/Notes/JVM/SpringBoot/SpringBoot接口 - 如何生成接口文档之Swagger技术栈"
          },
          {
            "title": "SpringBoot集成Redis - 基于RedisTemplate+Lettuce数据操作",
            "path": "/Notes/JVM/SpringBoot/SpringBoot集成Redis - 基于RedisTemplate+Lettuce数据操作"
          }
        ]
      },
      {
        "title": "Spring",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "IOC详解",
            "path": "/Notes/JVM/Spring/IOC详解"
          },
          {
            "title": "Spring框架知识体系",
            "path": "/Notes/JVM/Spring/Spring框架知识体系"
          },
          {
            "title": "AOP详解",
            "path": "/Notes/JVM/Spring/AOP详解"
          },
          {
            "title": "AOP源码",
            "path": "/Notes/JVM/Spring/AOP源码"
          },
          {
            "title": "BeanFactory",
            "path": "/Notes/JVM/Spring/BeanFactory"
          },
          {
            "title": "Spring进阶-IOC体系结构设计",
            "path": "/Notes/JVM/Spring/Spring进阶-IOC体系结构设计"
          },
          {
            "title": "Spring进阶-Spring AOP实现原理之AOP切面实现",
            "path": "/Notes/JVM/Spring/Spring进阶-Spring AOP实现原理之AOP切面实现"
          },
          {
            "title": "Spring基础 - SpringMVC请求流程和案例",
            "path": "/Notes/JVM/Spring/Spring基础 - SpringMVC请求流程和案例"
          },
          {
            "title": "Spring基础 - Spring核心之控制反转(IOC)",
            "path": "/Notes/JVM/Spring/Spring基础 - Spring核心之控制反转(IOC)"
          },
          {
            "title": "Spring基础 - Spring核心之面向切面编程(AOP)",
            "path": "/Notes/JVM/Spring/Spring基础 - Spring核心之面向切面编程(AOP)"
          }
        ]
      },
      {
        "title": "数据结构",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "LSM-tree",
            "path": "/Notes/数据结构/LSM-tree"
          },
          {
            "title": "跳表",
            "path": "/Notes/数据结构/跳表"
          },
          {
            "title": "红黑树",
            "path": "/Notes/数据结构/红黑树"
          }
        ]
      },
      {
        "title": "计算机网络",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "TCP",
            "path": "/Notes/计算机网络/TCP"
          },
          {
            "title": "UDP",
            "path": "/Notes/计算机网络/UDP"
          },
          {
            "title": "应用层协议",
            "path": "/Notes/计算机网络/应用层协议"
          },
          {
            "title": "HTTP详解",
            "path": "/Notes/计算机网络/HTTP详解"
          },
          {
            "title": "传输层协议",
            "path": "/Notes/计算机网络/传输层协议"
          },
          {
            "title": "RPC",
            "path": "/Notes/计算机网络/RPC"
          },
          {
            "title": "Session和Cookie",
            "path": "/Notes/计算机网络/Session和Cookie"
          },
          {
            "title": "链路层和局域网",
            "path": "/Notes/计算机网络/链路层和局域网"
          },
          {
            "title": "网络层协议-数据平面",
            "path": "/Notes/计算机网络/网络层协议-数据平面"
          },
          {
            "title": "网络层协议-控制平面",
            "path": "/Notes/计算机网络/网络层协议-控制平面"
          }
        ]
      },
      {
        "title": "Docker",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "docker部署ftp文件服务器",
            "path": "/Notes/Docker/docker部署ftp文件服务器"
          }
        ]
      },
      {
        "title": "MySQL",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "事务篇",
            "path": "/Notes/数据库/MySQL/事务篇"
          },
          {
            "title": "锁篇",
            "path": "/Notes/数据库/MySQL/锁篇"
          },
          {
            "title": "索引篇",
            "path": "/Notes/数据库/MySQL/索引篇"
          },
          {
            "title": "基础篇",
            "path": "/Notes/数据库/MySQL/基础篇"
          },
          {
            "title": "分库分表",
            "path": "/Notes/数据库/MySQL/分库分表"
          },
          {
            "title": "内存篇",
            "path": "/Notes/数据库/MySQL/内存篇"
          },
          {
            "title": "日志篇",
            "path": "/Notes/数据库/MySQL/日志篇"
          }
        ]
      },
      {
        "title": "操作系统",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "OS",
            "path": "/Notes/操作系统/OS"
          },
          {
            "title": "四、文件系统",
            "path": "/Notes/操作系统/四、文件系统"
          },
          {
            "title": "一、进程与线程",
            "path": "/Notes/操作系统/一、进程与线程"
          },
          {
            "title": "引论",
            "path": "/Notes/操作系统/引论"
          },
          {
            "title": "二、存储管理",
            "path": "/Notes/操作系统/二、存储管理"
          }
        ]
      },
      {
        "title": "Netty",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "2Netty 应用程序",
            "path": "/Notes/Netty/2Netty 应用程序"
          },
          {
            "title": "1.Netty的概念及体系结构",
            "path": "/Notes/Netty/1.Netty的概念及体系结构"
          }
        ]
      },
      {
        "title": "JUC",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "ReentrantLock",
            "path": "/Notes/JVM/JUC/ReentrantLock"
          },
          {
            "title": "AQS详解",
            "path": "/Notes/JVM/JUC/AQS详解"
          },
          {
            "title": "并发编程",
            "path": "/Notes/JVM/JUC/并发编程"
          }
        ]
      },
      {
        "title": "Summary",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "summary2",
            "path": "/Notes/Summary/summary2"
          },
          {
            "title": "summary1",
            "path": "/Notes/Summary/summary1"
          },
          {
            "title": "设计模式",
            "path": "/Notes/Summary/设计模式"
          }
        ]
      },
      {
        "title": "Java IO",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "Java IO分类",
            "path": "/Notes/JVM/Java IO/Java IO分类"
          },
          {
            "title": "Java IO知识体系",
            "path": "/Notes/JVM/Java IO/Java IO知识体系"
          }
        ]
      },
      {
        "title": "基础和原理",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "记录",
            "path": "/Notes/数据库/基础和原理/记录"
          },
          {
            "title": "SQL-DB",
            "path": "/Notes/数据库/基础和原理/SQL-DB"
          }
        ]
      },
      {
        "title": "数据库",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "编译MySQL源码并执行",
            "path": "/Notes/数据库/编译MySQL源码并执行"
          }
        ]
      },
      {
        "title": "Notes",
        "sidebarDepth": 3,
        "collapsable": true,
        "children": [
          {
            "title": "图床",
            "path": "/Notes/图床"
          }
        ]
      }
    ]
  }
}