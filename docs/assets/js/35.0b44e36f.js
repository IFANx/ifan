(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{306:function(r,a,t){"use strict";t.r(a);var e=t(14),g=Object(e.a)({},(function(){var r=this,a=r._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h1",{attrs:{id:"springboot接口-如何生成接口文档之swagger技术栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot接口-如何生成接口文档之swagger技术栈"}},[r._v("#")]),r._v(" SpringBoot接口 - 如何生成接口文档之Swagger技术栈")]),r._v(" "),a("p",[r._v("https://pdai.tech/md/spring/springboot/springboot-x-interface-doc.html")]),r._v(" "),a("p",[a("strong",[r._v("SpringBoot开发Restful接口，有什么API规范吗？如何快速生成API文档呢？Swagger 是一个用于生成、描述和调用 RESTful 接口的 Web 服务。通俗的来讲，Swagger 就是将项目中所有（想要暴露的）接口展现在页面上，并且可以进行接口调用和测试的服务。本文主要介绍OpenAPI规范，以及Swagger技术栈基于OpenAPI规范的集成方案。")])]),r._v(" "),a("hr"),r._v(" "),a("h3",{attrs:{id:"什么是swagger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是swagger"}},[r._v("#")]),r._v(" 什么是Swagger？")]),r._v(" "),a("p",[r._v("Swagger 是一个用于生成、描述和调用 RESTful 接口的 Web 服务。通俗的来讲，Swagger 就是将项目中所有（想要暴露的）接口展现在页面上，并且可以进行接口调用和测试的服务。")]),r._v(" "),a("p",[r._v("从上述 Swagger 定义我们不难看出 Swagger 有以下 3 个重要的作用：")]),r._v(" "),a("ul",[a("li",[r._v("将项目中所有的接口展现在页面上，这样后端程序员就不需要专门为前端使用者编写专门的接口文档；")]),r._v(" "),a("li",[r._v("当接口更新之后，只需要修改代码中的 Swagger 描述就可以实时生成新的接口文档了，从而规避了接口文档老旧不能使用的问题；")]),r._v(" "),a("li",[r._v("通过 Swagger 页面，我们可以直接进行接口调用，降低了项目开发阶段的调试成本。")])]),r._v(" "),a("hr"),r._v(" "),a("h3",{attrs:{id:"swagger和springfox有啥关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swagger和springfox有啥关系"}},[r._v("#")]),r._v(" Swagger和SpringFox有啥关系？")]),r._v(" "),a("p",[r._v("Swagger 可以看作是一个遵循了 OpenAPI 规范的一项技术，而 springfox 则是这项技术的具体实现。 就好比 Spring 中的 IOC 和 DI 的关系 一样，前者是思想，而后者是实现。")]),r._v(" "),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[r._v("#")])])])}),[],!1,null,null,null);a.default=g.exports}}]);