(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{335:function(t,s,a){"use strict";a.r(s);var r=a(14),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"传输层协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传输层协议"}},[t._v("#")]),t._v(" 传输层协议")]),t._v(" "),s("h2",{attrs:{id:"_1-tcp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp"}},[t._v("#")]),t._v(" 1. TCP")]),t._v(" "),s("h3",{attrs:{id:"_1-1-多路复用和多路分解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-多路复用和多路分解"}},[t._v("#")]),t._v(" 1.1 多路复用和多路分解")]),t._v(" "),s("p",[t._v("运输层的多路复用与多路分解，也就是将由网络层提供的主机到主机交付服务延伸到为运行在主机上的应用程序提供进程到进程的交付服务。在目的主机，运输层从紧邻其下的网络层接收报文段。运输层负责将这些报文段中的 数据交付给在主机上运行的适当应用程序进程。")]),t._v(" "),s("p",[t._v("在接收端，运输层检查这些字段，标识出接收套接字，进而将报文段定向到该套接字。将运输层报文段中的数据交付到正确的套接字的工 作称为"),s("strong",[t._v("多路分解(demultiplexing)")]),t._v("。在源主机从不同套接字中收集数据块，并为每个数据 块封装上首部信息(这将在以后用于分解)从而生成报文段，然后将报文段传递到网络层，所有这些工作称为"),s("strong",[t._v("多路复用(multiplexing")]),t._v(")。")]),t._v(" "),s("p",[t._v("通常，应用程序的客户端让运输层自动地(并 且是透明地)分配端口号，而服务器端则分配一个特定的端口号。")])])}),[],!1,null,null,null);s.default=e.exports}}]);