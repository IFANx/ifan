(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{304:function(r,i,n){"use strict";n.r(i);var p=n(14),t=Object(p.a)({},(function(){var r=this,i=r._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[i("h1",{attrs:{id:"spring进阶-spring-aop实现原理详解之aop切面的实现"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#spring进阶-spring-aop实现原理详解之aop切面的实现"}},[r._v("#")]),r._v(" Spring进阶 - Spring AOP实现原理详解之AOP切面的实现")]),r._v(" "),i("p",[r._v("https://pdai.tech/md/spring/spring-x-framework-aop-source-1.html")]),r._v(" "),i("p",[r._v("前文，我们分析了Spring IOC的初始化过程和Bean的生命周期等，而Spring AOP也是基于IOC的Bean加载来实现的。本文主要介绍Spring AOP原理解析的切面实现过程（将切面类的所有切面方法根据使用的注解生成对应Advice，并将Advice连同切入点匹配器和切面类等信息一并封装到Advisor，为后续交给代理增强实现做准备的过程）。")]),r._v(" "),i("hr"),r._v(" "),i("p",[r._v("上文我们介绍了Spring AOP原理解析的切面实现过程(将切面类的所有切面方法根据使用的注解生成对应Advice，并将Advice连同切入点匹配器和切面类等信息一并封装到Advisor)。本文在此基础上继续介绍，代理（cglib代理和JDK代理）的创建过程。@pdai")]),r._v(" "),i("hr")])}),[],!1,null,null,null);i.default=t.exports}}]);