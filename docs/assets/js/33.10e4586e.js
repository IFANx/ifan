(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{317:function(t,s,e){"use strict";e.r(s);var a=e(14),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"springboot接口-如何对接口进行签名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot接口-如何对接口进行签名"}},[t._v("#")]),t._v(" SpringBoot接口 - 如何对接口进行签名")]),t._v(" "),s("p",[t._v("https://pdai.tech/md/spring/springboot/springboot-x-interface-jiami.html")]),t._v(" "),s("blockquote",[s("p",[t._v("在以SpringBoot开发后台API接口时，会存在哪些接口不安全的因素呢？通常如何去解决的呢？本文主要介绍API"),s("strong",[t._v("接口有不安全的因素")]),t._v("以及"),s("strong",[t._v("常见的保证接口安全的方式")]),t._v("，重点"),s("strong",[t._v("实践如何对接口进行签名")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"api接口有哪些不安全的因素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api接口有哪些不安全的因素"}},[t._v("#")]),t._v(" API接口有哪些不安全的因素？")]),t._v(" "),s("blockquote",[s("p",[t._v("这里从体系角度，简单列举一些不安全的因素：")])]),t._v(" "),s("ul",[s("li",[t._v("开发者访问开放接口\n"),s("ul",[s("li",[t._v("是不是一个合法的开发者？")])])]),t._v(" "),s("li",[t._v("多客户端访问接口\n"),s("ul",[s("li",[t._v("是不是一个合法的客户端？")])])]),t._v(" "),s("li",[t._v("用户访问接口\n"),s("ul",[s("li",[t._v("是不是一个合法的用户?")]),t._v(" "),s("li",[t._v("有没有权限访问接口？")])])]),t._v(" "),s("li",[t._v("接口传输\n"),s("ul",[s("li",[t._v("http明文传输数据？")])])]),t._v(" "),s("li",[t._v("其它方面\n"),s("ul",[s("li",[t._v("接口重放，上文介绍的"),s("a",{attrs:{href:""}},[t._v("接口幂等")])]),t._v(" "),s("li",[t._v("接口超时，加timestamp控制？")]),t._v(" "),s("li",[t._v("...")])])])]),t._v(" "),s("h2",{attrs:{id:"常见的保证接口安全的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的保证接口安全的方式"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"#%E5%B8%B8%E8%A7%81%E7%9A%84%E4%BF%9D%E8%AF%81%E6%8E%A5%E5%8F%A3%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%B9%E5%BC%8F"}},[t._v("#")]),t._v(" 常见的保证接口安全的方式？")]),t._v(" "),s("blockquote",[s("p",[t._v("针对上述接口存在的不安全因素，这里向你展示一些典型的保障接口安全的方式。")])]),t._v(" "),s("h3",{attrs:{id:"accesskey-secretkey"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#accesskey-secretkey"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"#accesskey-secretkey"}},[t._v("#")]),t._v(" AccessKey&SecretKey")]),t._v(" "),s("blockquote",[s("p",[t._v("这种设计一般用在开发接口的安全，以确保是一个"),s("strong",[t._v("合法的开发者")]),t._v("。")])]),t._v(" "),s("ul",[s("li",[t._v("AccessKey： 开发者唯一标识")]),t._v(" "),s("li",[t._v("SecretKey: 开发者密钥")])]),t._v(" "),s("p",[t._v("以阿里云相关产品为例")]),t._v(" "),s("p",[s("img",{attrs:{src:"/Users/kkxu/NodeProjects/ifan/ifan/images/springboot-api-sign-1.png",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"认证和授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证和授权"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"#%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83"}},[t._v("#")]),t._v(" 认证和授权")]),t._v(" "),s("blockquote",[s("p",[t._v("从两个视角去看")]),t._v(" "),s("ul",[s("li",[t._v("第一: "),s("strong",[t._v("认证和授权")]),t._v("，认证是访问者的合法性，授权是访问者的权限分级；")]),t._v(" "),s("li",[t._v("第二: 其中认证包括"),s("strong",[t._v("对客户端的认证")]),t._v("以及"),s("strong",[t._v("对用户的认证")]),t._v("；")])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("对于客户端的认证")])])]),t._v(" "),s("p",[t._v("典型的是AppKey&AppSecret，或者ClientId&ClientSecret等")]),t._v(" "),s("p",[t._v("比如oauth2协议的client cridential模式")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("https://api.xxxx.com/token?grant_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("client_credentials"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("client_id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CLIENT_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("client_secret")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CLIENT_SECRET\n")])])]),s("p",[t._v("grant_type参数等于client_credentials表示client credentials方式，client_id是客户端id，client_secret是客户端密钥。")]),t._v(" "),s("p",[t._v("返回token后，通过token访问其它接口。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("对于用户的认证和授权")])])]),t._v(" "),s("p",[t._v("比如oauth2协议的授权码模式(authorization code)和密码模式(resource owner password credentials)")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("https://api.xxxx.com/token?grant_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("USERNAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("client_id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CLIENT_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("scope")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("read\n")])])]),s("p",[t._v("grant_type参数等于password表示密码方式，client_id是客户端id，username是用户名，password是密码。")]),t._v(" "),s("p",[t._v("(PS：password模式只有在授权码模式(authorization code)不可用时才会采用，这里只是举个例子而已)")]),t._v(" "),s("p",[t._v("可选参数scope表示申请的权限范围。（相关开发框架可以参考spring security, Apache Shiro，"),s("a",{attrs:{href:"https://sa-token.dev33.cn/doc/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SA-Token在新窗口打开"),s("OutboundLink")],1),t._v("等）")]),t._v(" "),s("h3",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"#https"}},[t._v("#")]),t._v(" https")]),t._v(" "),s("blockquote",[s("p",[t._v("从接口传输安全的角度，防止接口数据明文传输， 具体可以看"),s("a",{attrs:{href:""}},[t._v("这里")])])]),t._v(" "),s("p",[t._v("HTTP 有以下安全性问题:")]),t._v(" "),s("ul",[s("li",[t._v("使用明文进行通信，内容可能会被窃听；")]),t._v(" "),s("li",[t._v("不验证通信方的身份，通信方的身份有可能遭遇伪装；")]),t._v(" "),s("li",[t._v("无法证明报文的完整性，报文有可能遭篡改。")])]),t._v(" "),s("p",[t._v("HTTPs 并不是新协议，而是让 HTTP 先和 SSL(Secure Sockets Layer)通信，再由 SSL 和 TCP 通信，也就是说 HTTPs 使用了隧道进行通信。")]),t._v(" "),s("p",[t._v("通过使用 SSL，HTTPs 具有了加密(防窃听)、认证(防伪装)和完整性保护(防篡改)。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/pics/ssl-offloading.jpg",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"接口签名-加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口签名-加密"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"#%E6%8E%A5%E5%8F%A3%E7%AD%BE%E5%90%8D-%E5%8A%A0%E5%AF%86"}},[t._v("#")]),t._v(" 接口签名（加密）")]),t._v(" "),s("blockquote",[s("p",[t._v("接口签名（加密），主要防止请求参数被篡改。特别是安全要求比较高的接口，比如支付领域的接口。")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("签名的主要流程")])])]),t._v(" "),s("p",[t._v("首先我们需要分配给客户端一个私钥用于URL签名加密，一般的签名算法如下：")]),t._v(" "),s("p",[t._v("1、首先对请求参数按key进行字母排序放入有序集合中（其它参数请参看后续补充部分）；")]),t._v(" "),s("p",[t._v("2、对排序完的数组键值对用&进行连接，形成用于加密的参数字符串；")]),t._v(" "),s("p",[t._v("3、在加密的参数字符串前面或者后面加上私钥，然后用加密算法进行加密，得到sign，然后随着请求接口一起传给服务器。")]),t._v(" "),s("p",[t._v("例如： https://api.xxxx.com/token?key=value&timetamp=xxxx&sign=xxxx-xxx-xxx-xxxx")]),t._v(" "),s("p",[t._v("服务器端接收到请求后，用同样的算法获得服务器的sign，对比客户端的sign是否一致，如果一致请求有效；如果不一致返回指定的错误信息。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("补充：对什么签名？")])])]),t._v(" "),s("ol",[s("li",[t._v("主要包括请求参数，这是最主要的部分，"),s("strong",[t._v("签名的目的要防止参数被篡改，就要对可能被篡改的参数签名")]),t._v("；")]),t._v(" "),s("li",[t._v("同时考虑到请求参数的来源可能是请求路径path中，请求header中，请求body中。")]),t._v(" "),s("li",[t._v("如果对客户端分配了AppKey&AppSecret，也可加入签名计算；")]),t._v(" "),s("li",[t._v("考虑到其它幂等，token失效等，也会将涉及的参数一并加入签名，比如timestamp，流水号nonce等（这些参数可能来源于header）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("补充: 签名算法？")])])]),t._v(" "),s("p",[t._v("一般涉及这块，主要包含三点：密钥，签名算法，签名规则")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("密钥secret")]),t._v("： 前后端约定的secret，这里要注意前端可能无法妥善保存好secret，比如SPA单页应用；")]),t._v(" "),s("li",[s("strong",[t._v("签名算法")]),t._v("：也不一定要是对称加密算法，对称是反过来解析sign，这里是用同样的算法和规则计算出sign，并对比前端传过来的sign是否一致。")]),t._v(" "),s("li",[s("strong",[t._v("签名规则")]),t._v("：比如多次加盐加密等；")])]),t._v(" "),s("blockquote",[s("p",[t._v("PS：有读者会问，我们是可能从有些客户端获取密钥，算法和规则的（比如前端SPA单页应用生成的js中获取密钥，算法和规则），那么签名的意义在哪里？我认为签名是手段而不是目的，签名是加大攻击者攻击难度的一种手段，至少是可以抵挡大部分简单的攻击的，再加上其它防范方式（流水号，时间戳，token等)进一步提升攻击的难度而已。")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("补充：签名和加密是不是一回事？")])])]),t._v(" "),s("p",[t._v("严格来说不是一回事：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("签名")]),t._v("是通过对参数按照指定的算法、规则计算出sign，最后前后端通过同样的算法计算出sign是否一致来防止参数篡改的，所以你可以看到参数是明文的，只是多加了一个计算出的sign。")]),t._v(" "),s("li",[s("strong",[t._v("加密")]),t._v("是对请求的参数加密，后端进行解密；同时有些情况下，也会对返回的response进行加密，前端进行解密；这里存在加密和解密的过程，所以思路上必然是对称加密的形式+时间戳接口时效性等。")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("补充：签名放在哪里？")])])]),t._v(" "),s("p",[t._v("签名可以放在请求参数中（path中，body中等），更为优雅的可以放在HEADER中，比如X-Sign（通常第三方的header参数以X-开头）")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("补充：大厂开放平台是怎么做的呢？哪些可以借鉴？")])])]),t._v(" "),s("p",[t._v("以腾讯开放平台为例，请参考"),s("a",{attrs:{href:"https://wiki.open.qq.com/wiki/%E8%85%BE%E8%AE%AF%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8%E7%AD%BE%E5%90%8D%E5%8F%82%E6%95%B0sig%E7%9A%84%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"}},[t._v("腾讯开放平台第三方应用签名参数sig的说明在新窗口打开"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);s.default=r.exports}}]);